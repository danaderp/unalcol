<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="D:\thesisCode\BioRIMP\test_data\code\optimization\src\unalcol\optimization\util\RealVectorRepair.java"><comment type="block">/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */</comment>
<package>package <name><name>unalcol</name>.<name>optimization</name>.<name>util</name></name>;</package>

<import>import <name><name>unalcol</name>.<name>optimization</name>.<name>generation</name>.<name>Repair</name></name>;</import>

<comment type="javadoc">/**
 *
 * @author jgomez
 */</comment>
<class><specifier>public</specifier> class <name>RealVectorRepair</name> <super><extends>extends <name><name>Repair</name><argument_list>&lt;<argument><name><name>double</name><index>[]</index></name></argument>&gt;</argument_list></name></extends></super><block>{
    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name>double</name><index>[]</index></type> <name>repair</name><parameter_list>(<param><decl><type><name><name>double</name><index>[]</index></name></type> <name>x</name></decl></param>)</parameter_list><block>{
        <for>for( <init><decl><type><name>int</name></type> <name>i</name>=<init><expr>0</expr></init></decl>;</init> <condition><expr><name>i</name>&lt;<name><name>x</name>.<name>length</name></name></expr>;</condition> <incr><expr><name>i</name>++</expr></incr>)<block>{
            <if>if<condition>( <expr><name><name>x</name><index>[<expr><name>i</name></expr>]</index></name> &lt; 0.0</expr> )</condition><then><block>{
                <expr_stmt><expr><name><name>x</name><index>[<expr><name>i</name></expr>]</index></name> = 0.0</expr>;</expr_stmt>
            }</block></then><else>else<block>{
                <if>if<condition>( <expr><name><name>x</name><index>[<expr><name>i</name></expr>]</index></name> &gt; 1.0</expr> )</condition><then><block>{
                    <expr_stmt><expr><name><name>x</name><index>[<expr><name>i</name></expr>]</index></name> = 1.0</expr>;</expr_stmt>
                }</block></then></if>
            }</block></else></if>
            <comment type="line">//System.out.print(" " + x[i]);</comment>
        }</block></for>
        <comment type="line">//System.out.println();</comment>
        <return>return <expr><name>x</name></expr>;</return>
    }</block></function>
    
    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name>Object</name></type> <name>owner</name><parameter_list>()</parameter_list><block>{
        <return>return <expr><name><name>double</name><index>[]</index></name>.class</expr>;</return>
    }</block></function>
}</block></class>
</unit>
