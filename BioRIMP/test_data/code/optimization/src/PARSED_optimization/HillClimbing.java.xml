<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\Daavid\git\unalcol\BioRIMP\test_data\code\optimization\src\unalcol\optimization\util\HillClimbing.java"><comment type="block">/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */</comment>
<package>package <name><name>unalcol</name>.<name>optimization</name>.<name>util</name></name>;</package>
<import>import <name><name>unalcol</name>.<name>optimization</name>.<name>generation</name>.<name>RandomCandidatesGeneration</name></name>;</import>
<import>import <name><name>unalcol</name>.<name>optimization</name>.<name>transformation</name>.<name>Transformation</name></name>;</import>
<import>import <name><name>unalcol</name>.<name>optimization</name>.<name>replacement</name></name>.*;</import>
<import>import <name><name>unalcol</name>.<name>optimization</name>.<name>operators</name></name>.*;</import>
<comment type="javadoc">/**
 *
 * @author jgomez
 */</comment>
<class><specifier>public</specifier> class <name><name>HillClimbing</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name> <super><extends>extends <name><name>Transformation</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name></extends></super><block>{
    <constructor><specifier>public</specifier> <name>HillClimbing</name><parameter_list>( <param><decl><type><name><name>ArityOne</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>mutation</name></decl></param> )</parameter_list><block>{
        <expr_stmt><expr><call><name>super</name><argument_list>( <argument><expr>new <call><name>RandomCandidatesGeneration</name><argument_list>(<argument><expr><name>mutation</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr>new <call><name>OneToOneSteadyState</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>
}</block></class>

</unit>
