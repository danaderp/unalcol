<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="D:\thesisCode\BioRIMP\test_data\code\optimization\src\unalcol\optimization\operators\ArityTwo.java"><package>package <name><name>unalcol</name>.<name>optimization</name>.<name>operators</name></name>;</package>

<import>import <name><name>unalcol</name>.<name>optimization</name>.<name>generation</name>.<name>RepairProvider</name></name>;</import>
<import>import <name><name>unalcol</name>.<name>types</name>.<name>collection</name>.<name>vector</name></name>.*;</import>

<comment type="javadoc">/**
 * &lt;p&gt;Title:ArityTwo&lt;/p&gt;
 * &lt;p&gt;Description: A binary operator &lt;/p&gt;
 * &lt;p&gt;Copyright:    Copyright (c) 2010&lt;/p&gt;
 * @author Jonatan Gomez
 * @version 1.0
 */</comment>

<class><specifier>public</specifier> <specifier>abstract</specifier> class <name><name>ArityTwo</name><argument_list>&lt;<argument><name>G</name></argument>&gt;</argument_list></name> <super><extends>extends <name><name>Operator</name><argument_list>&lt;<argument><name>G</name></argument>&gt;</argument_list></name></extends></super> <block>{

  <comment type="javadoc">/**
   * Apply the binary genetic operator over the individual
   * @param one First individual to be modified by the genetic operator
   * @param two Second individual to be modified by the genetic operator
   * @return extra information of the genetic operator
   */</comment>
  <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name><name>Vector</name><argument_list>&lt;<argument><name>G</name></argument>&gt;</argument_list></name></type> <name>generates</name><parameter_list>(<param><decl><type><name>G</name></type> <name>one</name></decl></param>, <param><decl><type><name>G</name></type> <name>two</name></decl></param>)</parameter_list>;</function_decl>

  <comment type="javadoc">/**
   * Apply the unary genetic operator over the individual
   * @param obj Individual to be modified by the genetic operator
   * @return extra information of the genetic operator
   */</comment>
  <function><type><specifier>public</specifier> <name><name>Vector</name><argument_list>&lt;<argument><name>G</name></argument>&gt;</argument_list></name></type> <name>applies</name><parameter_list>(<param><decl><type><name>G</name></type> <name>one</name></decl></param>, <param><decl><type><name>G</name></type> <name>two</name></decl></param>)</parameter_list><block>{
      <decl_stmt><decl><type><name><name>Vector</name><argument_list>&lt;<argument><name>G</name></argument>&gt;</argument_list></name></type> <name>pop</name> =<init> <expr><call><name>generates</name><argument_list>(<argument><expr><name>one</name></expr></argument>, <argument><expr><name>two</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <for>for( <init><decl><type><name>int</name></type> <name>i</name>=<init><expr>0</expr></init></decl>;</init> <condition><expr><name>i</name>&lt;<call><name><name>pop</name>.<name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name>++</expr></incr> )<block>{
        <expr_stmt><expr><call><name><name>pop</name>.<name>set</name></name><argument_list>( <argument><expr><name>i</name></expr></argument>, <argument><expr>(<name>G</name>)<call><name><name>RepairProvider</name>.<name>repair</name></name><argument_list>(<argument><expr><call><name><name>pop</name>.<name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>          
      }</block></for>
      <return>return <expr><name>pop</name></expr>;</return>
  }</block></function>

  
  <comment type="javadoc">/**
   * Apply the genetic operator to the first and second individuals in the population of parents
   * This method is parent compatible
   * @param parents Collection of parents used by the genetic operator (selects just the first and second
   * individuals in the collection
   * @return A collection of individuals generated by the gentic operator
   */</comment>
  <function><type><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <name><name>Vector</name><argument_list>&lt;<argument><name>G</name></argument>&gt;</argument_list></name></type> <name>generates</name><parameter_list>( <param><decl><type><name><name>Vector</name><argument_list>&lt;<argument><name>G</name></argument>&gt;</argument_list></name></type> <name>parents</name></decl></param> )</parameter_list><block>{
      <return>return <expr><call><name>generates</name><argument_list>( <argument><expr><call><name><name>parents</name>.<name>get</name></name><argument_list>(<argument><expr>0</expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>parents</name>.<name>get</name></name><argument_list>(<argument><expr>1</expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</return>
  }</block></function>

  <comment type="javadoc">/**
   * Return the genetic operator arity
   * @return the genetic operator arity
   */</comment>
  <function><type><specifier>public</specifier> <name>int</name></type> <name>getArity</name><parameter_list>()</parameter_list> <block>{ <return>return <expr>2</expr>;</return> }</block></function>

}</block></class>
</unit>
