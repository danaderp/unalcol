<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C#" filename="C:\Users\Daavid\git\unalcol\redress2\test_data\code\virtualrouter-71075\Current\VirtualRouter\VirtualRouterClient\Service References\VirtualRouterService\Reference.cs"><comment type="line">//------------------------------------------------------------------------------</comment>
<comment type="line">// &lt;auto-generated&gt;</comment>
<comment type="line">//     This code was generated by a tool.</comment>
<comment type="line">//     Runtime Version:4.0.30319.18033</comment>
<comment type="line">//</comment>
<comment type="line">//     Changes to this file may cause incorrect behavior and will be lost if</comment>
<comment type="line">//     the code is regenerated.</comment>
<comment type="line">// &lt;/auto-generated&gt;</comment>
<comment type="line">//------------------------------------------------------------------------------</comment>

<namespace>namespace <name><name>VirtualRouterClient</name>.<name>VirtualRouterService</name></name> <block>{
    <using>using <name><name>System</name>.<name>Runtime</name>.<name>Serialization</name></name>;</using>
    <using>using <name>System</name>;</using>
    
    
    <class><attribute>[<expr><call><name><name>System</name>.<name>Diagnostics</name>.<name>DebuggerStepThroughAttribute</name></name><argument_list>()</argument_list></call></expr>]</attribute>
    <attribute>[<expr><call><name><name>System</name>.<name>CodeDom</name>.<name>Compiler</name>.<name>GeneratedCodeAttribute</name></name><argument_list>(<argument><expr>"System.Runtime.Serialization"</expr></argument>, <argument><expr>"4.0.0.0"</expr></argument>)</argument_list></call></expr>]</attribute>
    <attribute>[<expr><call><name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>DataContractAttribute</name></name><argument_list>(<argument><expr><name>Name</name>="SharableConnection"</expr></argument>, <argument><expr><name>Namespace</name>="http://schemas.datacontract.org/2004/07/VirtualRouterHost"</expr></argument>)</argument_list></call></expr>]</attribute>
    <attribute>[<expr><call><name><name>System</name>.<name>SerializableAttribute</name></name><argument_list>()</argument_list></call></expr>]</attribute>
    <specifier>public</specifier> <specifier>partial</specifier> class <name>SharableConnection</name> <super>: <name>object</name>, <name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>IExtensibleDataObject</name></name>, <name><name>System</name>.<name>ComponentModel</name>.<name>INotifyPropertyChanged</name></name></super> <block>{
        
        <decl_stmt><decl><type><attribute>[<expr><call><name><name>System</name>.<name>NonSerializedAttribute</name></name><argument_list>()</argument_list></call></expr>]</attribute>
        <specifier>private</specifier> <name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>ExtensionDataObject</name></name></type> <name>extensionDataField</name></decl>;</decl_stmt>
        
        <decl_stmt><decl><type><attribute>[<expr><call><name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>OptionalFieldAttribute</name></name><argument_list>()</argument_list></call></expr>]</attribute>
        <specifier>private</specifier> <name>string</name></type> <name>DeviceNameField</name></decl>;</decl_stmt>
        
        <decl_stmt><decl><type><attribute>[<expr><call><name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>OptionalFieldAttribute</name></name><argument_list>()</argument_list></call></expr>]</attribute>
        <specifier>private</specifier> <name><name>System</name>.<name>Guid</name></name></type> <name>GuidField</name></decl>;</decl_stmt>
        
        <decl_stmt><decl><type><attribute>[<expr><call><name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>OptionalFieldAttribute</name></name><argument_list>()</argument_list></call></expr>]</attribute>
        <specifier>private</specifier> <name>string</name></type> <name>NameField</name></decl>;</decl_stmt>
        
        <decl_stmt><decl><type><attribute>[<expr><call><name><name>global</name>::<name>System</name>.<name>ComponentModel</name>.<name>BrowsableAttribute</name></name><argument_list>(<argument><expr>false</expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier>public</specifier> <name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>ExtensionDataObject</name></name></type> <name>ExtensionData</name> <block>{
            <function><name>get</name> <block>{
                <return>return <expr><name><name>this</name>.<name>extensionDataField</name></name></expr>;</return>
            }</block></function>
            <function><name>set</name> <block>{
                <expr_stmt><expr><name><name>this</name>.<name>extensionDataField</name></name> = <name>value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>
        
        <decl_stmt><decl><type><attribute>[<expr><call><name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>DataMemberAttribute</name></name><argument_list>()</argument_list></call></expr>]</attribute>
        <specifier>public</specifier> <name>string</name></type> <name>DeviceName</name> <block>{
            <function><name>get</name> <block>{
                <return>return <expr><name><name>this</name>.<name>DeviceNameField</name></name></expr>;</return>
            }</block></function>
            <function><name>set</name> <block>{
                <if>if <condition>(<expr>(<call><name><name>object</name>.<name>ReferenceEquals</name></name><argument_list>(<argument><expr><name><name>this</name>.<name>DeviceNameField</name></name></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call> != true)</expr>)</condition><then> <block>{
                    <expr_stmt><expr><name><name>this</name>.<name>DeviceNameField</name></name> = <name>value</name></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>this</name>.<name>RaisePropertyChanged</name></name><argument_list>(<argument><expr>"DeviceName"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></function>
        }</block></decl></decl_stmt>
        
        <decl_stmt><decl><type><attribute>[<expr><call><name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>DataMemberAttribute</name></name><argument_list>()</argument_list></call></expr>]</attribute>
        <specifier>public</specifier> <name><name>System</name>.<name>Guid</name></name></type> <name>Guid</name> <block>{
            <function><name>get</name> <block>{
                <return>return <expr><name><name>this</name>.<name>GuidField</name></name></expr>;</return>
            }</block></function>
            <function><name>set</name> <block>{
                <if>if <condition>(<expr>(<call><name><name>this</name>.<name>GuidField</name>.<name>Equals</name></name><argument_list>(<argument><expr><name>value</name></expr></argument>)</argument_list></call> != true)</expr>)</condition><then> <block>{
                    <expr_stmt><expr><name><name>this</name>.<name>GuidField</name></name> = <name>value</name></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>this</name>.<name>RaisePropertyChanged</name></name><argument_list>(<argument><expr>"Guid"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></function>
        }</block></decl></decl_stmt>
        
        <decl_stmt><decl><type><attribute>[<expr><call><name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>DataMemberAttribute</name></name><argument_list>()</argument_list></call></expr>]</attribute>
        <specifier>public</specifier> <name>string</name></type> <name>Name</name> <block>{
            <function><name>get</name> <block>{
                <return>return <expr><name><name>this</name>.<name>NameField</name></name></expr>;</return>
            }</block></function>
            <function><name>set</name> <block>{
                <if>if <condition>(<expr>(<call><name><name>object</name>.<name>ReferenceEquals</name></name><argument_list>(<argument><expr><name><name>this</name>.<name>NameField</name></name></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call> != true)</expr>)</condition><then> <block>{
                    <expr_stmt><expr><name><name>this</name>.<name>NameField</name></name> = <name>value</name></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>this</name>.<name>RaisePropertyChanged</name></name><argument_list>(<argument><expr>"Name"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></function>
        }</block></decl></decl_stmt>
        
        <decl_stmt><decl><type><specifier>public</specifier> <specifier>event</specifier> <name><name>System</name>.<name>ComponentModel</name>.<name>PropertyChangedEventHandler</name></name></type> <name>PropertyChanged</name></decl>;</decl_stmt>
        
        <function><type><specifier>protected</specifier> <name>void</name></type> <name>RaisePropertyChanged</name><parameter_list>(<param><decl><type><name>string</name></type> <name>propertyName</name></decl></param>)</parameter_list> <block>{
            <decl_stmt><decl><type><name><name>System</name>.<name>ComponentModel</name>.<name>PropertyChangedEventHandler</name></name></type> <name>propertyChanged</name> =<init> <expr><name><name>this</name>.<name>PropertyChanged</name></name></expr></init></decl>;</decl_stmt>
            <if>if <condition>(<expr>(<name>propertyChanged</name> != <name>null</name>)</expr>)</condition><then> <block>{
                <expr_stmt><expr><call><name>propertyChanged</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr>new <call><name><name>System</name>.<name>ComponentModel</name>.<name>PropertyChangedEventArgs</name></name><argument_list>(<argument><expr><name>propertyName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>
    }</block></class>
    
    <class><attribute>[<expr><call><name><name>System</name>.<name>Diagnostics</name>.<name>DebuggerStepThroughAttribute</name></name><argument_list>()</argument_list></call></expr>]</attribute>
    <attribute>[<expr><call><name><name>System</name>.<name>CodeDom</name>.<name>Compiler</name>.<name>GeneratedCodeAttribute</name></name><argument_list>(<argument><expr>"System.Runtime.Serialization"</expr></argument>, <argument><expr>"4.0.0.0"</expr></argument>)</argument_list></call></expr>]</attribute>
    <attribute>[<expr><call><name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>DataContractAttribute</name></name><argument_list>(<argument><expr><name>Name</name>="ConnectionSettings"</expr></argument>, <argument><expr><name>Namespace</name>="http://schemas.datacontract.org/2004/07/VirtualRouterHost"</expr></argument>)</argument_list></call></expr>]</attribute>
    <attribute>[<expr><call><name><name>System</name>.<name>SerializableAttribute</name></name><argument_list>()</argument_list></call></expr>]</attribute>
    <specifier>public</specifier> <specifier>partial</specifier> class <name>ConnectionSettings</name> <super>: <name>object</name>, <name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>IExtensibleDataObject</name></name>, <name><name>System</name>.<name>ComponentModel</name>.<name>INotifyPropertyChanged</name></name></super> <block>{
        
        <decl_stmt><decl><type><attribute>[<expr><call><name><name>System</name>.<name>NonSerializedAttribute</name></name><argument_list>()</argument_list></call></expr>]</attribute>
        <specifier>private</specifier> <name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>ExtensionDataObject</name></name></type> <name>extensionDataField</name></decl>;</decl_stmt>
        
        <decl_stmt><decl><type><attribute>[<expr><call><name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>OptionalFieldAttribute</name></name><argument_list>()</argument_list></call></expr>]</attribute>
        <specifier>private</specifier> <name>int</name></type> <name>MaxPeerCountField</name></decl>;</decl_stmt>
        
        <decl_stmt><decl><type><attribute>[<expr><call><name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>OptionalFieldAttribute</name></name><argument_list>()</argument_list></call></expr>]</attribute>
        <specifier>private</specifier> <name>string</name></type> <name>SSIDField</name></decl>;</decl_stmt>
        
        <decl_stmt><decl><type><attribute>[<expr><call><name><name>global</name>::<name>System</name>.<name>ComponentModel</name>.<name>BrowsableAttribute</name></name><argument_list>(<argument><expr>false</expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier>public</specifier> <name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>ExtensionDataObject</name></name></type> <name>ExtensionData</name> <block>{
            <function><name>get</name> <block>{
                <return>return <expr><name><name>this</name>.<name>extensionDataField</name></name></expr>;</return>
            }</block></function>
            <function><name>set</name> <block>{
                <expr_stmt><expr><name><name>this</name>.<name>extensionDataField</name></name> = <name>value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>
        
        <decl_stmt><decl><type><attribute>[<expr><call><name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>DataMemberAttribute</name></name><argument_list>()</argument_list></call></expr>]</attribute>
        <specifier>public</specifier> <name>int</name></type> <name>MaxPeerCount</name> <block>{
            <function><name>get</name> <block>{
                <return>return <expr><name><name>this</name>.<name>MaxPeerCountField</name></name></expr>;</return>
            }</block></function>
            <function><name>set</name> <block>{
                <if>if <condition>(<expr>(<call><name><name>this</name>.<name>MaxPeerCountField</name>.<name>Equals</name></name><argument_list>(<argument><expr><name>value</name></expr></argument>)</argument_list></call> != true)</expr>)</condition><then> <block>{
                    <expr_stmt><expr><name><name>this</name>.<name>MaxPeerCountField</name></name> = <name>value</name></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>this</name>.<name>RaisePropertyChanged</name></name><argument_list>(<argument><expr>"MaxPeerCount"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></function>
        }</block></decl></decl_stmt>
        
        <decl_stmt><decl><type><attribute>[<expr><call><name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>DataMemberAttribute</name></name><argument_list>()</argument_list></call></expr>]</attribute>
        <specifier>public</specifier> <name>string</name></type> <name>SSID</name> <block>{
            <function><name>get</name> <block>{
                <return>return <expr><name><name>this</name>.<name>SSIDField</name></name></expr>;</return>
            }</block></function>
            <function><name>set</name> <block>{
                <if>if <condition>(<expr>(<call><name><name>object</name>.<name>ReferenceEquals</name></name><argument_list>(<argument><expr><name><name>this</name>.<name>SSIDField</name></name></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call> != true)</expr>)</condition><then> <block>{
                    <expr_stmt><expr><name><name>this</name>.<name>SSIDField</name></name> = <name>value</name></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>this</name>.<name>RaisePropertyChanged</name></name><argument_list>(<argument><expr>"SSID"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></function>
        }</block></decl></decl_stmt>
        
        <decl_stmt><decl><type><specifier>public</specifier> <specifier>event</specifier> <name><name>System</name>.<name>ComponentModel</name>.<name>PropertyChangedEventHandler</name></name></type> <name>PropertyChanged</name></decl>;</decl_stmt>
        
        <function><type><specifier>protected</specifier> <name>void</name></type> <name>RaisePropertyChanged</name><parameter_list>(<param><decl><type><name>string</name></type> <name>propertyName</name></decl></param>)</parameter_list> <block>{
            <decl_stmt><decl><type><name><name>System</name>.<name>ComponentModel</name>.<name>PropertyChangedEventHandler</name></name></type> <name>propertyChanged</name> =<init> <expr><name><name>this</name>.<name>PropertyChanged</name></name></expr></init></decl>;</decl_stmt>
            <if>if <condition>(<expr>(<name>propertyChanged</name> != <name>null</name>)</expr>)</condition><then> <block>{
                <expr_stmt><expr><call><name>propertyChanged</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr>new <call><name><name>System</name>.<name>ComponentModel</name>.<name>PropertyChangedEventArgs</name></name><argument_list>(<argument><expr><name>propertyName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>
    }</block></class>
    
    <class><attribute>[<expr><call><name><name>System</name>.<name>Diagnostics</name>.<name>DebuggerStepThroughAttribute</name></name><argument_list>()</argument_list></call></expr>]</attribute>
    <attribute>[<expr><call><name><name>System</name>.<name>CodeDom</name>.<name>Compiler</name>.<name>GeneratedCodeAttribute</name></name><argument_list>(<argument><expr>"System.Runtime.Serialization"</expr></argument>, <argument><expr>"4.0.0.0"</expr></argument>)</argument_list></call></expr>]</attribute>
    <attribute>[<expr><call><name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>DataContractAttribute</name></name><argument_list>(<argument><expr><name>Name</name>="ConnectedPeer"</expr></argument>, <argument><expr><name>Namespace</name>="http://schemas.datacontract.org/2004/07/VirtualRouterHost"</expr></argument>)</argument_list></call></expr>]</attribute>
    <attribute>[<expr><call><name><name>System</name>.<name>SerializableAttribute</name></name><argument_list>()</argument_list></call></expr>]</attribute>
    <specifier>public</specifier> <specifier>partial</specifier> class <name>ConnectedPeer</name> <super>: <name>object</name>, <name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>IExtensibleDataObject</name></name>, <name><name>System</name>.<name>ComponentModel</name>.<name>INotifyPropertyChanged</name></name></super> <block>{
        
        <decl_stmt><decl><type><attribute>[<expr><call><name><name>System</name>.<name>NonSerializedAttribute</name></name><argument_list>()</argument_list></call></expr>]</attribute>
        <specifier>private</specifier> <name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>ExtensionDataObject</name></name></type> <name>extensionDataField</name></decl>;</decl_stmt>
        
        <decl_stmt><decl><type><attribute>[<expr><call><name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>OptionalFieldAttribute</name></name><argument_list>()</argument_list></call></expr>]</attribute>
        <specifier>private</specifier> <name>string</name></type> <name>MacAddressField</name></decl>;</decl_stmt>
        
        <decl_stmt><decl><type><attribute>[<expr><call><name><name>global</name>::<name>System</name>.<name>ComponentModel</name>.<name>BrowsableAttribute</name></name><argument_list>(<argument><expr>false</expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier>public</specifier> <name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>ExtensionDataObject</name></name></type> <name>ExtensionData</name> <block>{
            <function><name>get</name> <block>{
                <return>return <expr><name><name>this</name>.<name>extensionDataField</name></name></expr>;</return>
            }</block></function>
            <function><name>set</name> <block>{
                <expr_stmt><expr><name><name>this</name>.<name>extensionDataField</name></name> = <name>value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>
        
        <decl_stmt><decl><type><attribute>[<expr><call><name><name>System</name>.<name>Runtime</name>.<name>Serialization</name>.<name>DataMemberAttribute</name></name><argument_list>()</argument_list></call></expr>]</attribute>
        <specifier>public</specifier> <name>string</name></type> <name>MacAddress</name> <block>{
            <function><name>get</name> <block>{
                <return>return <expr><name><name>this</name>.<name>MacAddressField</name></name></expr>;</return>
            }</block></function>
            <function><name>set</name> <block>{
                <if>if <condition>(<expr>(<call><name><name>object</name>.<name>ReferenceEquals</name></name><argument_list>(<argument><expr><name><name>this</name>.<name>MacAddressField</name></name></expr></argument>, <argument><expr><name>value</name></expr></argument>)</argument_list></call> != true)</expr>)</condition><then> <block>{
                    <expr_stmt><expr><name><name>this</name>.<name>MacAddressField</name></name> = <name>value</name></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>this</name>.<name>RaisePropertyChanged</name></name><argument_list>(<argument><expr>"MacAddress"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></function>
        }</block></decl></decl_stmt>
        
        <decl_stmt><decl><type><specifier>public</specifier> <specifier>event</specifier> <name><name>System</name>.<name>ComponentModel</name>.<name>PropertyChangedEventHandler</name></name></type> <name>PropertyChanged</name></decl>;</decl_stmt>
        
        <function><type><specifier>protected</specifier> <name>void</name></type> <name>RaisePropertyChanged</name><parameter_list>(<param><decl><type><name>string</name></type> <name>propertyName</name></decl></param>)</parameter_list> <block>{
            <decl_stmt><decl><type><name><name>System</name>.<name>ComponentModel</name>.<name>PropertyChangedEventHandler</name></name></type> <name>propertyChanged</name> =<init> <expr><name><name>this</name>.<name>PropertyChanged</name></name></expr></init></decl>;</decl_stmt>
            <if>if <condition>(<expr>(<name>propertyChanged</name> != <name>null</name>)</expr>)</condition><then> <block>{
                <expr_stmt><expr><call><name>propertyChanged</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr>new <call><name><name>System</name>.<name>ComponentModel</name>.<name>PropertyChangedEventArgs</name></name><argument_list>(<argument><expr><name>propertyName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>
    }</block></class>
    
    <class type="interface"><attribute>[<expr><call><name><name>System</name>.<name>CodeDom</name>.<name>Compiler</name>.<name>GeneratedCodeAttribute</name></name><argument_list>(<argument><expr>"System.ServiceModel"</expr></argument>, <argument><expr>"4.0.0.0"</expr></argument>)</argument_list></call></expr>]</attribute>
    <attribute>[<expr><call><name><name>System</name>.<name>ServiceModel</name>.<name>ServiceContractAttribute</name></name><argument_list>(<argument><expr><name>Namespace</name>="http://VirtualRouter"</expr></argument>, <argument><expr><name>ConfigurationName</name>="VirtualRouterService.IVirtualRouterHost"</expr></argument>)</argument_list></call></expr>]</attribute>
    <specifier>public</specifier> interface <name>IVirtualRouterHost</name> <block>{
        
        <function_decl><type><attribute>[<expr><call><name><name>System</name>.<name>ServiceModel</name>.<name>OperationContractAttribute</name></name><argument_list>(<argument><expr><name>Action</name>="http://VirtualRouter/IVirtualRouterHost/Start"</expr></argument>, <argument><expr><name>ReplyAction</name>="http://VirtualRouter/IVirtualRouterHost/StartResponse"</expr></argument>)</argument_list></call></expr>]</attribute>
        <name>bool</name></type> <name>Start</name><parameter_list>(<param><decl><type><name><name>VirtualRouterClient</name>.<name>VirtualRouterService</name>.<name>SharableConnection</name></name></type> <name>sharedConnection</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><attribute>[<expr><call><name><name>System</name>.<name>ServiceModel</name>.<name>OperationContractAttribute</name></name><argument_list>(<argument><expr><name>Action</name>="http://VirtualRouter/IVirtualRouterHost/Stop"</expr></argument>, <argument><expr><name>ReplyAction</name>="http://VirtualRouter/IVirtualRouterHost/StopResponse"</expr></argument>)</argument_list></call></expr>]</attribute>
        <name>bool</name></type> <name>Stop</name><parameter_list>()</parameter_list>;</function_decl>
        
        <function_decl><type><attribute>[<expr><call><name><name>System</name>.<name>ServiceModel</name>.<name>OperationContractAttribute</name></name><argument_list>(<argument><expr><name>Action</name>="http://VirtualRouter/IVirtualRouterHost/SetConnectionSettings"</expr></argument>, <argument><expr><name>ReplyAction</name>="http://VirtualRouter/IVirtualRouterHost/SetConnectionSettingsResponse"</expr></argument>)</argument_list></call></expr>]</attribute>
        <name>bool</name></type> <name>SetConnectionSettings</name><parameter_list>(<param><decl><type><name>string</name></type> <name>ssid</name></decl></param>, <param><decl><type><name>int</name></type> <name>maxPeerCount</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><attribute>[<expr><call><name><name>System</name>.<name>ServiceModel</name>.<name>OperationContractAttribute</name></name><argument_list>(<argument><expr><name>Action</name>="http://VirtualRouter/IVirtualRouterHost/GetConnectionSettings"</expr></argument>, <argument><expr><name>ReplyAction</name>="http://VirtualRouter/IVirtualRouterHost/GetConnectionSettingsResponse"</expr></argument>)</argument_list></call></expr>]</attribute>
        <name><name>VirtualRouterClient</name>.<name>VirtualRouterService</name>.<name>ConnectionSettings</name></name></type> <name>GetConnectionSettings</name><parameter_list>()</parameter_list>;</function_decl>
        
        <function_decl><type><attribute>[<expr><call><name><name>System</name>.<name>ServiceModel</name>.<name>OperationContractAttribute</name></name><argument_list>(<argument><expr><name>Action</name>="http://VirtualRouter/IVirtualRouterHost/GetSharableConnections"</expr></argument>, <argument><expr><name>ReplyAction</name>="http://VirtualRouter/IVirtualRouterHost/GetSharableConnectionsResponse"</expr></argument>)</argument_list></call></expr>]</attribute>
        <name><name>VirtualRouterClient</name>.<name>VirtualRouterService</name>.<name>SharableConnection</name></name><index>[]</index></type> <name>GetSharableConnections</name><parameter_list>()</parameter_list>;</function_decl>
        
        <function_decl><type><attribute>[<expr><call><name><name>System</name>.<name>ServiceModel</name>.<name>OperationContractAttribute</name></name><argument_list>(<argument><expr><name>Action</name>="http://VirtualRouter/IVirtualRouterHost/SetPassword"</expr></argument>, <argument><expr><name>ReplyAction</name>="http://VirtualRouter/IVirtualRouterHost/SetPasswordResponse"</expr></argument>)</argument_list></call></expr>]</attribute>
        <name>bool</name></type> <name>SetPassword</name><parameter_list>(<param><decl><type><name>string</name></type> <name>password</name></decl></param>)</parameter_list>;</function_decl>
        
        <function_decl><type><attribute>[<expr><call><name><name>System</name>.<name>ServiceModel</name>.<name>OperationContractAttribute</name></name><argument_list>(<argument><expr><name>Action</name>="http://VirtualRouter/IVirtualRouterHost/GetPassword"</expr></argument>, <argument><expr><name>ReplyAction</name>="http://VirtualRouter/IVirtualRouterHost/GetPasswordResponse"</expr></argument>)</argument_list></call></expr>]</attribute>
        <name>string</name></type> <name>GetPassword</name><parameter_list>()</parameter_list>;</function_decl>
        
        <function_decl><type><attribute>[<expr><call><name><name>System</name>.<name>ServiceModel</name>.<name>OperationContractAttribute</name></name><argument_list>(<argument><expr><name>Action</name>="http://VirtualRouter/IVirtualRouterHost/IsStarted"</expr></argument>, <argument><expr><name>ReplyAction</name>="http://VirtualRouter/IVirtualRouterHost/IsStartedResponse"</expr></argument>)</argument_list></call></expr>]</attribute>
        <name>bool</name></type> <name>IsStarted</name><parameter_list>()</parameter_list>;</function_decl>
        
        <function_decl><type><attribute>[<expr><call><name><name>System</name>.<name>ServiceModel</name>.<name>OperationContractAttribute</name></name><argument_list>(<argument><expr><name>Action</name>="http://VirtualRouter/IVirtualRouterHost/GetConnectedPeers"</expr></argument>, <argument><expr><name>ReplyAction</name>="http://VirtualRouter/IVirtualRouterHost/GetConnectedPeersResponse"</expr></argument>)</argument_list></call></expr>]</attribute>
        <name><name>VirtualRouterClient</name>.<name>VirtualRouterService</name>.<name>ConnectedPeer</name></name><index>[]</index></type> <name>GetConnectedPeers</name><parameter_list>()</parameter_list>;</function_decl>
        
        <function_decl><type><attribute>[<expr><call><name><name>System</name>.<name>ServiceModel</name>.<name>OperationContractAttribute</name></name><argument_list>(<argument><expr><name>Action</name>="http://VirtualRouter/IVirtualRouterHost/GetSharedConnection"</expr></argument>, <argument><expr><name>ReplyAction</name>="http://VirtualRouter/IVirtualRouterHost/GetSharedConnectionResponse"</expr></argument>)</argument_list></call></expr>]</attribute>
        <name><name>VirtualRouterClient</name>.<name>VirtualRouterService</name>.<name>SharableConnection</name></name></type> <name>GetSharedConnection</name><parameter_list>()</parameter_list>;</function_decl>
        
        <function_decl><type><attribute>[<expr><call><name><name>System</name>.<name>ServiceModel</name>.<name>OperationContractAttribute</name></name><argument_list>(<argument><expr><name>Action</name>="http://VirtualRouter/IVirtualRouterHost/GetLastError"</expr></argument>, <argument><expr><name>ReplyAction</name>="http://VirtualRouter/IVirtualRouterHost/GetLastErrorResponse"</expr></argument>)</argument_list></call></expr>]</attribute>
        <name>string</name></type> <name>GetLastError</name><parameter_list>()</parameter_list>;</function_decl>
    }</block></class>
    
    <class type="interface"><attribute>[<expr><call><name><name>System</name>.<name>CodeDom</name>.<name>Compiler</name>.<name>GeneratedCodeAttribute</name></name><argument_list>(<argument><expr>"System.ServiceModel"</expr></argument>, <argument><expr>"4.0.0.0"</expr></argument>)</argument_list></call></expr>]</attribute>
    <specifier>public</specifier> interface <name>IVirtualRouterHostChannel</name> <super>: <name><name>VirtualRouterClient</name>.<name>VirtualRouterService</name>.<name>IVirtualRouterHost</name></name>, <name><name>System</name>.<name>ServiceModel</name>.<name>IClientChannel</name></name></super> <block>{
    }</block></class>
    
    <class><attribute>[<expr><call><name><name>System</name>.<name>Diagnostics</name>.<name>DebuggerStepThroughAttribute</name></name><argument_list>()</argument_list></call></expr>]</attribute>
    <attribute>[<expr><call><name><name>System</name>.<name>CodeDom</name>.<name>Compiler</name>.<name>GeneratedCodeAttribute</name></name><argument_list>(<argument><expr>"System.ServiceModel"</expr></argument>, <argument><expr>"4.0.0.0"</expr></argument>)</argument_list></call></expr>]</attribute>
    <specifier>public</specifier> <specifier>partial</specifier> class <name>VirtualRouterHostClient</name> <super>: <name><name>System</name>.<name>ServiceModel</name>.<name><name>ClientBase</name><argument_list>&lt;<argument><name><name>VirtualRouterClient</name>.<name>VirtualRouterService</name>.<name>IVirtualRouterHost</name></name></argument>&gt;</argument_list></name></name>, <name><name>VirtualRouterClient</name>.<name>VirtualRouterService</name>.<name>IVirtualRouterHost</name></name></super> <block>{
        
        <constructor><specifier>public</specifier> <name>VirtualRouterHostClient</name><parameter_list>()</parameter_list> <block>{
        }</block></constructor>
        
        <constructor><specifier>public</specifier> <name>VirtualRouterHostClient</name><parameter_list>(<param><decl><type><name>string</name></type> <name>endpointConfigurationName</name></decl></param>)</parameter_list> <member_list>: 
                <call><name>base</name><argument_list>(<argument><expr><name>endpointConfigurationName</name></expr></argument>)</argument_list></call> </member_list><block>{
        }</block></constructor>
        
        <constructor><specifier>public</specifier> <name>VirtualRouterHostClient</name><parameter_list>(<param><decl><type><name>string</name></type> <name>endpointConfigurationName</name></decl></param>, <param><decl><type><name>string</name></type> <name>remoteAddress</name></decl></param>)</parameter_list> <member_list>: 
                <call><name>base</name><argument_list>(<argument><expr><name>endpointConfigurationName</name></expr></argument>, <argument><expr><name>remoteAddress</name></expr></argument>)</argument_list></call> </member_list><block>{
        }</block></constructor>
        
        <constructor><specifier>public</specifier> <name>VirtualRouterHostClient</name><parameter_list>(<param><decl><type><name>string</name></type> <name>endpointConfigurationName</name></decl></param>, <param><decl><type><name><name>System</name>.<name>ServiceModel</name>.<name>EndpointAddress</name></name></type> <name>remoteAddress</name></decl></param>)</parameter_list> <member_list>: 
                <call><name>base</name><argument_list>(<argument><expr><name>endpointConfigurationName</name></expr></argument>, <argument><expr><name>remoteAddress</name></expr></argument>)</argument_list></call> </member_list><block>{
        }</block></constructor>
        
        <constructor><specifier>public</specifier> <name>VirtualRouterHostClient</name><parameter_list>(<param><decl><type><name><name>System</name>.<name>ServiceModel</name>.<name>Channels</name>.<name>Binding</name></name></type> <name>binding</name></decl></param>, <param><decl><type><name><name>System</name>.<name>ServiceModel</name>.<name>EndpointAddress</name></name></type> <name>remoteAddress</name></decl></param>)</parameter_list> <member_list>: 
                <call><name>base</name><argument_list>(<argument><expr><name>binding</name></expr></argument>, <argument><expr><name>remoteAddress</name></expr></argument>)</argument_list></call> </member_list><block>{
        }</block></constructor>
        
        <function><type><specifier>public</specifier> <name>bool</name></type> <name>Start</name><parameter_list>(<param><decl><type><name><name>VirtualRouterClient</name>.<name>VirtualRouterService</name>.<name>SharableConnection</name></name></type> <name>sharedConnection</name></decl></param>)</parameter_list> <block>{
            <return>return <expr><call><name><name>base</name>.<name>Channel</name>.<name>Start</name></name><argument_list>(<argument><expr><name>sharedConnection</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
        
        <function><type><specifier>public</specifier> <name>bool</name></type> <name>Stop</name><parameter_list>()</parameter_list> <block>{
            <return>return <expr><call><name><name>base</name>.<name>Channel</name>.<name>Stop</name></name><argument_list>()</argument_list></call></expr>;</return>
        }</block></function>
        
        <function><type><specifier>public</specifier> <name>bool</name></type> <name>SetConnectionSettings</name><parameter_list>(<param><decl><type><name>string</name></type> <name>ssid</name></decl></param>, <param><decl><type><name>int</name></type> <name>maxPeerCount</name></decl></param>)</parameter_list> <block>{
            <return>return <expr><call><name><name>base</name>.<name>Channel</name>.<name>SetConnectionSettings</name></name><argument_list>(<argument><expr><name>ssid</name></expr></argument>, <argument><expr><name>maxPeerCount</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
        
        <function><type><specifier>public</specifier> <name><name>VirtualRouterClient</name>.<name>VirtualRouterService</name>.<name>ConnectionSettings</name></name></type> <name>GetConnectionSettings</name><parameter_list>()</parameter_list> <block>{
            <return>return <expr><call><name><name>base</name>.<name>Channel</name>.<name>GetConnectionSettings</name></name><argument_list>()</argument_list></call></expr>;</return>
        }</block></function>
        
        <function><type><specifier>public</specifier> <name><name>VirtualRouterClient</name>.<name>VirtualRouterService</name>.<name>SharableConnection</name></name><index>[]</index></type> <name>GetSharableConnections</name><parameter_list>()</parameter_list> <block>{
            <return>return <expr><call><name><name>base</name>.<name>Channel</name>.<name>GetSharableConnections</name></name><argument_list>()</argument_list></call></expr>;</return>
        }</block></function>
        
        <function><type><specifier>public</specifier> <name>bool</name></type> <name>SetPassword</name><parameter_list>(<param><decl><type><name>string</name></type> <name>password</name></decl></param>)</parameter_list> <block>{
            <return>return <expr><call><name><name>base</name>.<name>Channel</name>.<name>SetPassword</name></name><argument_list>(<argument><expr><name>password</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
        
        <function><type><specifier>public</specifier> <name>string</name></type> <name>GetPassword</name><parameter_list>()</parameter_list> <block>{
            <return>return <expr><call><name><name>base</name>.<name>Channel</name>.<name>GetPassword</name></name><argument_list>()</argument_list></call></expr>;</return>
        }</block></function>
        
        <function><type><specifier>public</specifier> <name>bool</name></type> <name>IsStarted</name><parameter_list>()</parameter_list> <block>{
            <return>return <expr><call><name><name>base</name>.<name>Channel</name>.<name>IsStarted</name></name><argument_list>()</argument_list></call></expr>;</return>
        }</block></function>
        
        <function><type><specifier>public</specifier> <name><name>VirtualRouterClient</name>.<name>VirtualRouterService</name>.<name>ConnectedPeer</name></name><index>[]</index></type> <name>GetConnectedPeers</name><parameter_list>()</parameter_list> <block>{
            <return>return <expr><call><name><name>base</name>.<name>Channel</name>.<name>GetConnectedPeers</name></name><argument_list>()</argument_list></call></expr>;</return>
        }</block></function>
        
        <function><type><specifier>public</specifier> <name><name>VirtualRouterClient</name>.<name>VirtualRouterService</name>.<name>SharableConnection</name></name></type> <name>GetSharedConnection</name><parameter_list>()</parameter_list> <block>{
            <return>return <expr><call><name><name>base</name>.<name>Channel</name>.<name>GetSharedConnection</name></name><argument_list>()</argument_list></call></expr>;</return>
        }</block></function>
        
        <function><type><specifier>public</specifier> <name>string</name></type> <name>GetLastError</name><parameter_list>()</parameter_list> <block>{
            <return>return <expr><call><name><name>base</name>.<name>Channel</name>.<name>GetLastError</name></name><argument_list>()</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
