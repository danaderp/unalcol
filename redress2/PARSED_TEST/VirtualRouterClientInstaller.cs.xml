<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C#" filename="D:\thesisCode\redress2\test_data\code\virtualrouter-71075\Current\VirtualRouter\VirtualRouterClient\VirtualRouterClientInstaller.cs"><comment type="block">/*
* Virtual Router v1.0 - http://virtualrouter.codeplex.com
* Wifi Hot Spot for Windows 8, 7 and 2008 R2
* Copyright (c) 2013 Chris Pietschmann (http://pietschsoft.com)
* Licensed under the Microsoft Public License (Ms-PL)
* http://virtualrouter.codeplex.com/license
*/</comment>

<using>using <name><name>System</name>.<name>ComponentModel</name></name>;</using>
<using>using <name><name>System</name>.<name>Configuration</name>.<name>Install</name></name>;</using>
<using>using <name><name>System</name>.<name>Diagnostics</name></name>;</using>
<using>using <name><name>System</name>.<name>IO</name></name>;</using>
<using>using <name><name>System</name>.<name>Reflection</name></name>;</using>

<namespace>namespace <name>VirtualRouterClient</name>
<block>{
    <class><attribute>[<expr><call><name>RunInstaller</name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>]</attribute>
    <specifier>public</specifier> class <name>VirtualRouterClientInstaller</name> <super>: <name>Installer</name></super>
    <block>{
        <constructor><specifier>public</specifier> <name>VirtualRouterClientInstaller</name><parameter_list>()</parameter_list>
        <block>{
            <comment type="line">//this.Committed += new InstallEventHandler(VirtualRouterClientInstaller_Committed);</comment>
            <expr_stmt><expr><name><name>this</name>.<name>AfterInstall</name></name> += new <call><name>InstallEventHandler</name><argument_list>(<argument><expr><name>VirtualRouterClientInstaller_AfterInstall</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><name>void</name></type> <name>VirtualRouterClientInstaller_AfterInstall</name><parameter_list>(<param><decl><type><name>object</name></type> <name>sender</name></decl></param>, <param><decl><type><name>InstallEventArgs</name></type> <name>e</name></decl></param>)</parameter_list>
        <block>{
            <try>try
            <block>{
                <expr_stmt><expr><call><name><name>Directory</name>.<name>SetCurrentDirectory</name></name><argument_list>(<argument><expr><call><name><name>Path</name>.<name>GetDirectoryName</name></name>
                <argument_list>(<argument><expr><call><name><name>Assembly</name>.<name>GetExecutingAssembly</name></name><argument_list>()</argument_list></call>.<name>Location</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>Process</name>.<name>Start</name></name><argument_list>(<argument><expr><call><name><name>Path</name>.<name>GetDirectoryName</name></name><argument_list>(
                  <argument><expr><call><name><name>Assembly</name>.<name>GetExecutingAssembly</name></name><argument_list>()</argument_list></call>.<name>Location</name></expr></argument>)</argument_list></call> + "\\VirtualRouterClient.exe"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block>
            <catch>catch
            <block>{
                <comment type="line">// Do nothing... </comment>
            }</block></catch></try>
        }</block></function>

        <comment type="line">//void VirtualRouterClientInstaller_Committed(object sender, InstallEventArgs e)</comment>
        <comment type="line">//</comment>{
        <comment type="line">//</comment>}

        <function><type><specifier>public</specifier> <specifier>override</specifier> <name>void</name></type> <name>Install</name><parameter_list>(<param><decl><type><name><name>System</name>.<name>Collections</name>.<name>IDictionary</name></name></type> <name>stateSaver</name></decl></param>)</parameter_list>
        <block>{
            <expr_stmt><expr><call><name><name>base</name>.<name>Install</name></name><argument_list>(<argument><expr><name>stateSaver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier>public</specifier> <specifier>override</specifier> <name>void</name></type> <name>Commit</name><parameter_list>(<param><decl><type><name><name>System</name>.<name>Collections</name>.<name>IDictionary</name></name></type> <name>savedState</name></decl></param>)</parameter_list>
        <block>{
            <expr_stmt><expr><call><name><name>base</name>.<name>Commit</name></name><argument_list>(<argument><expr><name>savedState</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier>public</specifier> <specifier>override</specifier> <name>void</name></type> <name>Rollback</name><parameter_list>(<param><decl><type><name><name>System</name>.<name>Collections</name>.<name>IDictionary</name></name></type> <name>savedState</name></decl></param>)</parameter_list>
        <block>{
            <expr_stmt><expr><call><name><name>base</name>.<name>Rollback</name></name><argument_list>(<argument><expr><name>savedState</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
