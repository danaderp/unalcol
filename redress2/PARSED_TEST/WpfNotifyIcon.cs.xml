<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C#" filename="D:\thesisCode\redress2\test_data\code\virtualrouter-71075\Current\VirtualRouter\VirtualRouterClient\WpfNotifyIcon.cs"><comment type="block">/*
* Virtual Router v1.0 - http://virtualrouter.codeplex.com
* Wifi Hot Spot for Windows 8, 7 and 2008 R2
* Copyright (c) 2013 Chris Pietschmann (http://pietschsoft.com)
* Licensed under the Microsoft Public License (Ms-PL)
* http://virtualrouter.codeplex.com/license
*/</comment>
<using>using <name>System</name>;</using>
<using>using <name><name>System</name>.<name>ComponentModel</name></name>;</using>
<using>using <name><name>System</name>.<name>Windows</name>.<name>Forms</name></name>;</using>

<namespace>namespace <name>VirtualRouterClient</name>
<block>{
    <class><specifier>public</specifier> <specifier>partial</specifier> class <name>WpfNotifyIcon</name> <super>: <name>Component</name></super>
    <block>{
        <constructor><specifier>public</specifier> <name>WpfNotifyIcon</name><parameter_list>()</parameter_list>
        <block>{
            <expr_stmt><expr><call><name>InitializeComponent</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <constructor><specifier>public</specifier> <name>WpfNotifyIcon</name><parameter_list>(<param><decl><type><name>IContainer</name></type> <name>container</name></decl></param>)</parameter_list>
        <block>{
            <expr_stmt><expr><call><name><name>container</name>.<name>Add</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name>InitializeComponent</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier>public</specifier> <name>EventHandler</name></type> <name>DoubleClick</name></decl>;</decl_stmt>

        <function><type><specifier>private</specifier> <name>void</name></type> <name>notifyIcon1_MouseDoubleClick</name><parameter_list>(<param><decl><type><name>object</name></type> <name>sender</name></decl></param>, <param><decl><type><name><name>System</name>.<name>Windows</name>.<name>Forms</name>.<name>MouseEventArgs</name></name></type> <name>e</name></decl></param>)</parameter_list>
        <block>{
            <if>if <condition>(<expr><name><name>this</name>.<name>DoubleClick</name></name> != <name>null</name></expr>)</condition><then>
            <block>{
                <expr_stmt><expr><call><name><name>this</name>.<name>DoubleClick</name></name><argument_list>(<argument><expr><name>sender</name></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>

        <function><type><specifier>public</specifier> <name>void</name></type> <name>Show</name><parameter_list>()</parameter_list>
        <block>{
            <expr_stmt><expr><name><name>this</name>.<name>notifyIcon1</name>.<name>Visible</name></name> = true</expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier>public</specifier> <name>void</name></type> <name>Hide</name><parameter_list>()</parameter_list>
        <block>{
            <expr_stmt><expr><name><name>this</name>.<name>notifyIcon1</name>.<name>Visible</name></name> = false</expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier>public</specifier> <name>ContextMenuStrip</name></type> <name>ContextMenuStrip</name>
        <block>{
            <function><name>get</name>
            <block>{
                <return>return <expr><name><name>this</name>.<name>notifyIcon1</name>.<name>ContextMenuStrip</name></name></expr>;</return>
            }</block></function>
            <function><name>set</name>
            <block>{
                <expr_stmt><expr><name><name>this</name>.<name>notifyIcon1</name>.<name>ContextMenuStrip</name></name> = <name>value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier>public</specifier> <name><name>System</name>.<name>Drawing</name>.<name>Icon</name></name></type> <name>Icon</name>
        <block>{
            <function><name>get</name>
            <block>{
                <return>return <expr><name><name>this</name>.<name>notifyIcon1</name>.<name>Icon</name></name></expr>;</return>
            }</block></function>
            <function><name>set</name>
            <block>{
                <expr_stmt><expr><name><name>this</name>.<name>notifyIcon1</name>.<name>Icon</name></name> = <name>value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier>public</specifier> <name>string</name></type> <name>Text</name>
        <block>{
            <function><name>get</name>
            <block>{
                <return>return <expr><name><name>this</name>.<name>notifyIcon1</name>.<name>Text</name></name></expr>;</return>
            }</block></function>
            <function><name>set</name>
            <block>{
                <expr_stmt><expr><name><name>this</name>.<name>notifyIcon1</name>.<name>Text</name></name> = <name>value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>
    }</block></class>
}</block></namespace>
</unit>
