<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C#" filename="D:\thesisCode\redress2\test_data\code\virtualrouter-71075\Current\VirtualRouter\VirtualRouterService\VirtualRouterWindowsService.Designer.cs"><namespace>namespace <name>VirtualRouterService</name>
<block>{
    <class><specifier>partial</specifier> class <name>VirtualRouterWindowsService</name>
    <block>{
        <comment type="line">/// &lt;summary&gt; </comment>
        <comment type="line">/// Required designer variable.</comment>
        <comment type="line">/// &lt;/summary&gt;</comment>
        <decl_stmt><decl><type><specifier>private</specifier> <name><name>System</name>.<name>ComponentModel</name>.<name>IContainer</name></name></type> <name>components</name> =<init> <expr><name>null</name></expr></init></decl>;</decl_stmt>

        <comment type="line">/// &lt;summary&gt;</comment>
        <comment type="line">/// Clean up any resources being used.</comment>
        <comment type="line">/// &lt;/summary&gt;</comment>
        <comment type="line">/// &lt;param name="disposing"&gt;true if managed resources should be disposed; otherwise, false.&lt;/param&gt;</comment>
        <function><type><specifier>protected</specifier> <specifier>override</specifier> <name>void</name></type> <name>Dispose</name><parameter_list>(<param><decl><type><name>bool</name></type> <name>disposing</name></decl></param>)</parameter_list>
        <block>{
            <if>if <condition>(<expr><name>disposing</name> &amp;&amp; (<name>components</name> != <name>null</name>)</expr>)</condition><then>
            <block>{
                <expr_stmt><expr><call><name><name>components</name>.<name>Dispose</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <expr_stmt><expr><call><name><name>base</name>.<name>Dispose</name></name><argument_list>(<argument><expr><name>disposing</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <cpp:region>#<cpp:directive>region</cpp:directive> Component Designer generated code</cpp:region>

        <comment type="line">/// &lt;summary&gt; </comment>
        <comment type="line">/// Required method for Designer support - do not modify </comment>
        <comment type="line">/// the contents of this method with the code editor.</comment>
        <comment type="line">/// &lt;/summary&gt;</comment>
        <function><type><specifier>private</specifier> <name>void</name></type> <name>InitializeComponent</name><parameter_list>()</parameter_list>
        <block>{
            <expr_stmt><expr><name>components</name> = new <call><name><name>System</name>.<name>ComponentModel</name>.<name>Container</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <cpp:endregion>#<cpp:directive>endregion</cpp:directive></cpp:endregion>
    }</block></class>
}</block></namespace>
</unit>
