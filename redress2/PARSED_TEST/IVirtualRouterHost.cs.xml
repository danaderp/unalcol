<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C#" filename="D:\thesisCode\redress2\test_data\code\virtualrouter-71075\Current\VirtualRouter\VirtualRouterHost\IVirtualRouterHost.cs"><comment type="block">/*
* Virtual Router v1.0 - http://virtualrouter.codeplex.com
* Wifi Hot Spot for Windows 8, 7 and 2008 R2
* Copyright (c) 2013 Chris Pietschmann (http://pietschsoft.com)
* Licensed under the Microsoft Public License (Ms-PL)
* http://virtualrouter.codeplex.com/license
*/</comment>
<using>using <name><name>System</name>.<name>Collections</name>.<name>Generic</name></name>;</using>
<using>using <name><name>System</name>.<name>ServiceModel</name></name>;</using>

<namespace>namespace <name>VirtualRouterHost</name>
<block>{
    <class type="interface"><attribute>[<expr><call><name>ServiceContract</name><argument_list>(<argument><expr><name>Namespace</name> = "http://VirtualRouter"</expr></argument>)</argument_list></call></expr>]</attribute>
    <specifier>public</specifier> interface <name>IVirtualRouterHost</name>
    <block>{
        <function_decl><type><attribute>[<expr><name>OperationContract</name></expr>]</attribute>
        <name>bool</name></type> <name>Start</name><parameter_list>(<param><decl><type><name>SharableConnection</name></type> <name>sharedConnection</name></decl></param>)</parameter_list>;</function_decl>

        <function_decl><type><attribute>[<expr><name>OperationContract</name></expr>]</attribute>
        <name>bool</name></type> <name>Stop</name><parameter_list>()</parameter_list>;</function_decl>

        <function_decl><type><attribute>[<expr><name>OperationContract</name></expr>]</attribute>
        <name>bool</name></type> <name>SetConnectionSettings</name><parameter_list>(<param><decl><type><name>string</name></type> <name>ssid</name></decl></param>, <param><decl><type><name>int</name></type> <name>maxPeerCount</name></decl></param>)</parameter_list>;</function_decl>

        <function_decl><type><attribute>[<expr><name>OperationContract</name></expr>]</attribute>
        <name>ConnectionSettings</name></type> <name>GetConnectionSettings</name><parameter_list>()</parameter_list>;</function_decl>

        <function_decl><type><attribute>[<expr><name>OperationContract</name></expr>]</attribute>
        <name><name>IEnumerable</name><argument_list>&lt;<argument><name>SharableConnection</name></argument>&gt;</argument_list></name></type> <name>GetSharableConnections</name><parameter_list>()</parameter_list>;</function_decl>

        <function_decl><type><attribute>[<expr><name>OperationContract</name></expr>]</attribute>
        <name>bool</name></type> <name>SetPassword</name><parameter_list>(<param><decl><type><name>string</name></type> <name>password</name></decl></param>)</parameter_list>;</function_decl>

        <function_decl><type><attribute>[<expr><name>OperationContract</name></expr>]</attribute>
        <name>string</name></type> <name>GetPassword</name><parameter_list>()</parameter_list>;</function_decl>

        <function_decl><type><attribute>[<expr><name>OperationContract</name></expr>]</attribute>
        <name>bool</name></type> <name>IsStarted</name><parameter_list>()</parameter_list>;</function_decl>

        <function_decl><type><attribute>[<expr><name>OperationContract</name></expr>]</attribute>
        <name><name>IEnumerable</name><argument_list>&lt;<argument><name>ConnectedPeer</name></argument>&gt;</argument_list></name></type> <name>GetConnectedPeers</name><parameter_list>()</parameter_list>;</function_decl>

        <function_decl><type><attribute>[<expr><name>OperationContract</name></expr>]</attribute>
        <name>SharableConnection</name></type> <name>GetSharedConnection</name><parameter_list>()</parameter_list>;</function_decl>

        <function_decl><type><attribute>[<expr><name>OperationContract</name></expr>]</attribute>
        <name>string</name></type> <name>GetLastError</name><parameter_list>()</parameter_list>;</function_decl>
    }</block></class>
}</block></namespace>
</unit>
