<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C#" filename="C:\Users\Daavid\git\unalcol\redress2\test_data\code\virtualrouter-71075\Current\VirtualRouter\VirtualRouterClient\DeviceIcon\DeviceIconEnum.cs"><comment type="block">/*
* Virtual Router v1.0 - http://virtualrouter.codeplex.com
* Wifi Hot Spot for Windows 8, 7 and 2008 R2
* Copyright (c) 2013 Chris Pietschmann (http://pietschsoft.com)
* Licensed under the Microsoft Public License (Ms-PL)
* http://virtualrouter.codeplex.com/license
*/</comment>

<using>using <name>System</name>;</using>
<using>using <name><name>System</name>.<name>ComponentModel</name></name>;</using>

<namespace>namespace <name>VirtualRouterClient</name>
<block>{
    <enum><specifier>public</specifier> enum <name>DeviceIconEnum</name> : <name>int</name>
    <block>{
        <expr><index>[<expr><call><name>Description</name><argument_list>(<argument><expr>"Default"</expr></argument>)</argument_list></call></expr>, <expr><call><name>DeviceIconResourceName</name><argument_list>(<argument><expr>"IconDefault"</expr></argument>)</argument_list></call></expr>]</index>
        <name>Default</name> = 0</expr>,
        <expr><index>[<expr><call><name>Description</name><argument_list>(<argument><expr>"Computer"</expr></argument>)</argument_list></call></expr>, <expr><call><name>DeviceIconResourceName</name><argument_list>(<argument><expr>"IconComputer"</expr></argument>)</argument_list></call></expr>]</index>
        <name>Computer</name> = 1</expr>,
        <expr><index>[<expr><call><name>Description</name><argument_list>(<argument><expr>"Device"</expr></argument>)</argument_list></call></expr>, <expr><call><name>DeviceIconResourceName</name><argument_list>(<argument><expr>"IconDevice"</expr></argument>)</argument_list></call></expr>]</index>
        <name>Device</name> = 2</expr>,
        <expr><index>[<expr><call><name>Description</name><argument_list>(<argument><expr>"iPhone"</expr></argument>)</argument_list></call></expr>, <expr><call><name>DeviceIconResourceName</name><argument_list>(<argument><expr>"IconIPhone"</expr></argument>)</argument_list></call></expr>]</index>
        <name>IPhone</name> = 3</expr>,
        <expr><index>[<expr><call><name>Description</name><argument_list>(<argument><expr>"Mac Book Pro"</expr></argument>)</argument_list></call></expr>, <expr><call><name>DeviceIconResourceName</name><argument_list>(<argument><expr>"IconMacBookPro"</expr></argument>)</argument_list></call></expr>]</index>
        <name>MacBookPro</name> = 4</expr>,
        <expr><index>[<expr><call><name>Description</name><argument_list>(<argument><expr>"Printer"</expr></argument>)</argument_list></call></expr>, <expr><call><name>DeviceIconResourceName</name><argument_list>(<argument><expr>"IconPrinter"</expr></argument>)</argument_list></call></expr>]</index>
        <name>Printer</name> = 5</expr>,
        <expr><index>[<expr><call><name>Description</name><argument_list>(<argument><expr>"Mobile Phone"</expr></argument>)</argument_list></call></expr>, <expr><call><name>DeviceIconResourceName</name><argument_list>(<argument><expr>"IconMobilePhone"</expr></argument>)</argument_list></call></expr>]</index>
        <name>MobilePhone</name> = 6</expr>,
        <expr><index>[<expr><call><name>Description</name><argument_list>(<argument><expr>"Zune"</expr></argument>)</argument_list></call></expr>, <expr><call><name>DeviceIconResourceName</name><argument_list>(<argument><expr>"IconZune"</expr></argument>)</argument_list></call></expr>]</index>
        <name>Zune</name> = 7</expr>,
        <expr><index>[<expr><call><name>Description</name><argument_list>(<argument><expr>"Camera"</expr></argument>)</argument_list></call></expr>, <expr><call><name>DeviceIconResourceName</name><argument_list>(<argument><expr>"IconCamera"</expr></argument>)</argument_list></call></expr>]</index>
        <name>Camera</name> = 8</expr>
    }</block></enum>

    <class><specifier>public</specifier> <specifier>static</specifier> class <name>DeviceIconEnumExtensions</name>
    <block>{
        <function><type><specifier>public</specifier> <specifier>static</specifier> <name>string</name></type> <name>ToResourceName</name><parameter_list>(<param><decl><type><name>this</name> <name>DeviceIconEnum</name></type> <name>val</name></decl></param>)</parameter_list>
        <block>{
            <decl_stmt><decl><type><name>DeviceIconResourceNameAttribute</name><index>[]</index></type> <name>attributes</name> =<init> <expr>(<name><name>DeviceIconResourceNameAttribute</name><index>[]</index></name>)<call><name><name>val</name>.<name>GetType</name></name><argument_list>()</argument_list></call>.<call><name>GetField</name><argument_list>(<argument><expr><call><name><name>val</name>.<name>ToString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>.<call><name>GetCustomAttributes</name><argument_list>(<argument><expr><call><name>typeof</name><argument_list>(<argument><expr><name>DeviceIconResourceNameAttribute</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr>false</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return>return <expr><name><name>attributes</name>.<name>Length</name></name> &gt; 0 ? <name><name>attributes</name><index>[<expr>0</expr>]</index></name>.<name>ResourceName</name> : <name><name>string</name>.<name>Empty</name></name></expr>;</return>
        }</block></function>

        <function><type><specifier>public</specifier> <specifier>static</specifier> <name>string</name></type> <name>ToDescriptionString</name><parameter_list>(<param><decl><type><name>this</name> <name>DeviceIconEnum</name></type> <name>val</name></decl></param>)</parameter_list>
        <block>{
            <decl_stmt><decl><type><name>DescriptionAttribute</name><index>[]</index></type> <name>attributes</name> =<init> <expr>(<name><name>DescriptionAttribute</name><index>[]</index></name>)<call><name><name>val</name>.<name>GetType</name></name><argument_list>()</argument_list></call>.<call><name>GetField</name><argument_list>(<argument><expr><call><name><name>val</name>.<name>ToString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>.<call><name>GetCustomAttributes</name><argument_list>(<argument><expr><call><name>typeof</name><argument_list>(<argument><expr><name>DescriptionAttribute</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr>false</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return>return <expr><name><name>attributes</name>.<name>Length</name></name> &gt; 0 ? <name><name>attributes</name><index>[<expr>0</expr>]</index></name>.<name>Description</name> : <name><name>string</name>.<name>Empty</name></name></expr>;</return>
        }</block></function>
    }</block></class>

    <class><specifier>public</specifier> class <name>DeviceIconResourceNameAttribute</name> <super>: <name>Attribute</name></super>
    <block>{
        <constructor><specifier>public</specifier> <name>DeviceIconResourceNameAttribute</name><parameter_list>(<param><decl><type><name>string</name></type> <name>resourceName</name></decl></param>)</parameter_list>
        <block>{
            <expr_stmt><expr><name><name>this</name>.<name>ResourceName</name></name> = <name>resourceName</name></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier>public</specifier> <name>string</name></type> <name>ResourceName</name> <block>{ <function_decl><name>get</name>;</function_decl> private <function_decl><name>set</name>;</function_decl> }</block></decl></decl_stmt>
    }</block></class>
}</block></namespace>
</unit>
