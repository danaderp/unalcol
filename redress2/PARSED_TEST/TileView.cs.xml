<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C#" filename="C:\Users\Daavid\git\unalcol\redress2\test_data\code\virtualrouter-71075\Current\VirtualRouter\VirtualRouterClient\TileView.cs"><comment type="block">/*
* Virtual Router v1.0 - http://virtualrouter.codeplex.com
* Wifi Hot Spot for Windows 8, 7 and 2008 R2
* Copyright (c) 2013 Chris Pietschmann (http://pietschsoft.com)
* Licensed under the Microsoft Public License (Ms-PL)
* http://virtualrouter.codeplex.com/license
*/</comment>
<using>using <name><name>System</name>.<name>Windows</name></name>;</using>
<using>using <name><name>System</name>.<name>Windows</name>.<name>Controls</name></name>;</using>
<using>using <name><name>System</name>.<name>Windows</name>.<name>Media</name></name>;</using>

<namespace>namespace <name>VirtualRouterClient</name>
<block>{
    <class><specifier>public</specifier> class <name>TileView</name> <super>: <name>ViewBase</name></super>
    <block>{
        <decl_stmt><decl><type><specifier>private</specifier> <name>DataTemplate</name></type> <name>itemTemplate</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>public</specifier> <name>DataTemplate</name></type> <name>ItemTemplate</name>
        <block>{
            <function><name>get</name> <block>{ <return>return <expr><name>itemTemplate</name></expr>;</return> }</block></function>
            <function><name>set</name> <block>{ <expr_stmt><expr><name>itemTemplate</name> = <name>value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier>private</specifier> <name>Brush</name></type> <name>selectedBackground</name> =<init> <expr><name><name>Brushes</name>.<name>Transparent</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>public</specifier> <name>Brush</name></type> <name>SelectedBackground</name>
        <block>{
            <function><name>get</name> <block>{ <return>return <expr><name>selectedBackground</name></expr>;</return> }</block></function>
            <function><name>set</name> <block>{ <expr_stmt><expr><name>selectedBackground</name> = <name>value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier>private</specifier> <name>Brush</name></type> <name>selectedBorderBrush</name> =<init> <expr><name><name>Brushes</name>.<name>Black</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier>public</specifier> <name>Brush</name></type> <name>SelectedBorderBrush</name>
        <block>{
            <function><name>get</name> <block>{ <return>return <expr><name>selectedBorderBrush</name></expr>;</return> }</block></function>
            <function><name>set</name> <block>{ <expr_stmt><expr><name>selectedBorderBrush</name> = <name>value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier>protected</specifier> <specifier>override</specifier> <name>object</name></type> <name>DefaultStyleKey</name>
        <block>{
            <function><name>get</name> <block>{ <return>return <expr>new <call><name>ComponentResourceKey</name><argument_list>(<argument><expr><call><name>GetType</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr>"TileView"</expr></argument>)</argument_list></call></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier>protected</specifier> <specifier>override</specifier> <name>object</name></type> <name>ItemContainerDefaultStyleKey</name>
        <block>{
            <function><name>get</name> <block>{ <return>return <expr>new <call><name>ComponentResourceKey</name><argument_list>(<argument><expr><call><name>GetType</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr>"TileViewItem"</expr></argument>)</argument_list></call></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>
    }</block></class>
}</block></namespace>
</unit>
