<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C#" filename="D:\thesisCode\redress2\test_data\code\virtualrouter-71075\Current\VirtualRouter\VirtualRouter.ICS\IcsManager.cs"><comment type="block">/*
* Virtual Router v1.0 - http://virtualrouter.codeplex.com
* Wifi Hot Spot for Windows 8, 7 and 2008 R2
* Copyright (c) 2013 Chris Pietschmann (http://pietschsoft.com)
* Licensed under the Microsoft Public License (Ms-PL)
* http://virtualrouter.codeplex.com/license
*/</comment>
<using>using <name>System</name>;</using>
<using>using <name><name>System</name>.<name>Collections</name>.<name>Generic</name></name>;</using>
<using>using <name><name>System</name>.<name>Linq</name></name>;</using>
<using>using <name>NETCONLib</name>;</using>

<namespace>namespace <name>IcsMgr</name>
<block>{
    <class><specifier>public</specifier> class <name>IcsManager</name>
    <block>{
        <decl_stmt><decl><type><specifier>protected</specifier> <name>INetSharingManager</name></type> <name>_NSManager</name></decl>;</decl_stmt>

        <constructor><specifier>public</specifier> <name>IcsManager</name><parameter_list>()</parameter_list>
        <block>{
            <expr_stmt><expr><call><name><name>this</name>.<name>Init</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><specifier>public</specifier> <name>void</name></type> <name>Init</name><parameter_list>()</parameter_list>
        <block>{
            <expr_stmt><expr><name><name>this</name>.<name>_NSManager</name></name> = new <call><name>NetSharingManagerClass</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier>public</specifier> <name>void</name></type> <name>EnableIcs</name><parameter_list>(<param><decl><type><name>Guid</name></type> <name>publicGuid</name></decl></param>, <param><decl><type><name>Guid</name></type> <name>privateGuid</name></decl></param>)</parameter_list>
        <block>{
            <if>if <condition>(<expr>!<name><name>this</name>.<name>SharingInstalled</name></name></expr>)</condition><then>
            <block>{
                <throw>throw <expr>new <call><name>Exception</name><argument_list>(<argument><expr>"Internet Connection Sharing NOT Installed"</expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <decl_stmt><decl><type><name>var</name></type> <name>connections</name> =<init> <expr><name><name>this</name>.<name>Connections</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name>IcsConnection</name></type> <name>publicConn</name> =<init> <expr>(<linq><from>from <expr><name>c</name></expr> <in>in <expr><name>connections</name></expr></in></from>
                              <where>where <expr><call><name><name>c</name>.<name>IsMatch</name></name><argument_list>(<argument><expr><name>publicGuid</name></expr></argument>)</argument_list></call></expr></where>
                              <select>select <expr><name>c</name></expr></select></linq>).<call><name>First</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name>IcsConnection</name></type> <name>privateConn</name> =<init> <expr>(<linq><from>from <expr><name>c</name></expr> <in>in <expr><name>connections</name></expr></in></from>
                                         <where>where <expr><call><name><name>c</name>.<name>IsMatch</name></name><argument_list>(<argument><expr><name>privateGuid</name></expr></argument>)</argument_list></call></expr></where>
                                        <select>select <expr><name>c</name></expr></select></linq>).<call><name>First</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name>this</name>.<name>DisableIcsOnAll</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name>publicConn</name>.<name>EnableAsPublic</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>privateConn</name>.<name>EnableAsPrivate</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier>public</specifier> <name>void</name></type> <name>DisableIcsOnAll</name><parameter_list>()</parameter_list>
        <block>{
            <foreach>foreach (<init><decl><type><name>var</name></type> <name>conn</name> <init>in <expr><name><name>this</name>.<name>Connections</name></name></expr></init></decl></init>)
            <block>{
                <if>if <condition>(<expr><name><name>conn</name>.<name>IsSupported</name></name></expr>)</condition><then>
                <block>{
                    <expr_stmt><expr><call><name><name>conn</name>.<name>DisableSharing</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></foreach>
        }</block></function>

        <decl_stmt><decl><type><specifier>public</specifier> <name><name>List</name><argument_list>&lt;<argument><name>IcsConnection</name></argument>&gt;</argument_list></name></type> <name>Connections</name>
        <block>{
            <function><name>get</name>
            <block>{
                <decl_stmt><decl><type><name>var</name></type> <name>list</name> =<init> <expr>new <call><name><name>List</name><argument_list>&lt;<argument><name>IcsConnection</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

                <foreach>foreach (<init><decl><type><name>INetConnection</name></type> <name>conn</name> <init>in <expr><name><name>this</name>.<name>_NSManager</name>.<name>EnumEveryConnection</name></name></expr></init></decl></init>)
                <block>{
                    <expr_stmt><expr><call><name><name>list</name>.<name>Add</name></name><argument_list>(<argument><expr>new <call><name>IcsConnection</name><argument_list>(<argument><expr><name><name>this</name>.<name>_NSManager</name></name></expr></argument>, <argument><expr><name>conn</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></foreach>

                <return>return <expr><name>list</name></expr>;</return>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier>public</specifier> <name>bool</name></type> <name>SharingInstalled</name>
        <block>{
            <function><name>get</name>
            <block>{
                <return>return <expr><name><name>this</name>.<name>_NSManager</name>.<name>SharingInstalled</name></name></expr>;</return>
            }</block></function>
        }</block></decl></decl_stmt>
    }</block></class>
}</block></namespace>
</unit>
