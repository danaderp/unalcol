<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C#" filename="C:\Users\Daavid\git\unalcol\redress2\test_data\code\virtualrouter-71075\Current\VirtualRouter\VirtualRouterClient\SingleInstanceManager.cs"><comment type="block">/*
* Virtual Router v1.0 - http://virtualrouter.codeplex.com
* Wifi Hot Spot for Windows 8, 7 and 2008 R2
* Copyright (c) 2013 Chris Pietschmann (http://pietschsoft.com)
* Licensed under the Microsoft Public License (Ms-PL)
* http://virtualrouter.codeplex.com/license
*/</comment>
<using>using <name><name>Microsoft</name>.<name>VisualBasic</name>.<name>ApplicationServices</name></name>;</using>
 
<namespace>namespace <name>VirtualRouterClient</name>
<block>{
    <class><specifier>public</specifier> class <name>SingleInstanceManager</name> <super>: <name>WindowsFormsApplicationBase</name></super>
    <block>{
        <decl_stmt><decl><type><name>App</name></type> <name>app</name></decl>;</decl_stmt>

        <constructor><specifier>public</specifier> <name>SingleInstanceManager</name><parameter_list>()</parameter_list>
        <block>{
            <expr_stmt><expr><name><name>this</name>.<name>IsSingleInstance</name></name> = true</expr>;</expr_stmt>
        }</block></constructor>

        <function><type><specifier>protected</specifier> <specifier>override</specifier> <name>bool</name></type> <name>OnStartup</name><parameter_list>(<param><decl><type><name><name>Microsoft</name>.<name>VisualBasic</name>.<name>ApplicationServices</name>.<name>StartupEventArgs</name></name></type> <name>e</name></decl></param>)</parameter_list>
        <block>{
            <comment type="line">// First time app is launched</comment>
            <expr_stmt><expr><name>app</name> = new <call><name>App</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>app</name>.<name>InitializeComponent</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>app</name>.<name>Run</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <return>return <expr>false</expr>;</return>
        }</block></function>

        <function><type><specifier>protected</specifier> <specifier>override</specifier> <name>void</name></type> <name>OnStartupNextInstance</name><parameter_list>(<param><decl><type><name>StartupNextInstanceEventArgs</name></type> <name>eventArgs</name></decl></param>)</parameter_list>
        <block>{
            <comment type="line">// Subsequent launches</comment>
            <expr_stmt><expr><call><name><name>base</name>.<name>OnStartupNextInstance</name></name><argument_list>(<argument><expr><name>eventArgs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>app</name>.<name>Activate</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
