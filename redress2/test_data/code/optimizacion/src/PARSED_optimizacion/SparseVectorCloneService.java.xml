<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\Daavid\git\unalcol\redress2\test_data\code\optimizacion\src\unalcol\types\collection\vector\sparse\SparseVectorCloneService.java"><comment type="block">/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */</comment>
<package>package <name><name>unalcol</name>.<name>types</name>.<name>collection</name>.<name>vector</name>.<name>sparse</name></name>;</package>

<import>import <name><name>unalcol</name>.<name>clone</name>.<name>Clone</name></name>;</import>
<import>import <name><name>unalcol</name>.<name>clone</name>.<name>CloneService</name></name>;</import>
<import>import <name><name>unalcol</name>.<name>types</name>.<name>collection</name>.<name>vector</name>.<name>SortedVector</name></name>;</import>

<comment type="javadoc">/**
 *
 * @author jgomez
 */</comment>
<class><specifier>public</specifier> class <name><name>SparseVectorCloneService</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name> <super><implements>implements <name><name>CloneService</name><argument_list>&lt;<argument><name><name>SparseVector</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></implements></super><block>{
    <constructor><specifier>public</specifier> <name>SparseVectorCloneService</name><parameter_list>()</parameter_list> <block>{
    }</block></constructor>

    <function><type><specifier>public</specifier> <name>Object</name></type> <name>owner</name><parameter_list>()</parameter_list><block>{
        <return>return <expr><name><name>SparseVector</name>.<name><name/></name></name>class</expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Clones a Java Vector
     * @param obj The Java Vector to be cloned
     * @return A clone of the Java Vector
     */</comment>
    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name><name>SparseVector</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>clone</name><parameter_list>(<param><decl><type><name><name>SparseVector</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>obj</name></decl></param>)</parameter_list><block>{    
        <return>return <expr>new <call><name><name>SparseVector</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name><argument_list>( <argument><expr>(<name>SortedVector</name>)<call><name><name>Clone</name>.<name>get</name></name><argument_list>(<argument><expr><name><name>obj</name>.<name>vector</name></name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</return>
    }</block></function>    
}</block></class>
</unit>
