<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\Daavid\git\unalcol\redress2\test_data\code\optimizacion\src\unalcol\random\integer\Roulette.java"><package>package <name><name>unalcol</name>.<name>random</name>.<name>integer</name></name>;</package>

<import>import <name><name>unalcol</name>.<name>random</name></name>.*;</import>

<comment type="javadoc">/**
 * &lt;p&gt;Generates integer numbers following a Weighted probability density (Roulette)&lt;/p&gt;
 *
 * &lt;p&gt;Copyright: Copyright (c) 2009&lt;/p&gt;
 *
 * @author Jonatan Gomez Perdomo
 * @version 1.0
 */</comment>
<class><specifier>public</specifier> class <name>Roulette</name> <super><extends>extends <name>IntegerGenerator</name></extends></super> <block>{
    <comment type="javadoc">/**
     * Probability of generating an integer number [0,length(density))
     */</comment>
    <decl_stmt><decl><type><specifier>protected</specifier> <name>double</name><index>[]</index></type> <name>density</name></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Creates an integer number generator with the given probability density
     * @param density Probability of generating an integer number [0,length(density))
     */</comment>
    <constructor><specifier>public</specifier> <name>Roulette</name><parameter_list>(<param><decl><type><name><name>double</name><index>[]</index></name></type> <name>density</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>density</name></name> = <name>density</name></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="javadoc">/**
     * Generates an integer number following the associated density function
     * @return An integer number following the associated density function
     */</comment>
    <function><type><specifier>public</specifier> <name>int</name></type> <name>next</name><parameter_list>()</parameter_list> <block>{
        <decl_stmt><decl><type><name>int</name></type> <name>length</name> =<init> <expr><name><name>density</name>.<name>length</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>double</name></type> <name>x</name> =<init> <expr><call><name><name>Random</name>.<name>random</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>i</name> =<init> <expr>0</expr></init></decl>;</decl_stmt>
        <while>while <condition>(<expr><name>i</name> &lt; <name>length</name> &amp;&amp; <name>x</name> &gt;= <name><name>density</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition> <block>{
            <expr_stmt><expr><name>x</name> -= <name><name>density</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt><expr><name>i</name>++</expr>;</expr_stmt>
        }</block></while>
        <return>return <expr><name>i</name></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Defines the density function of the generated integers
     * @param density Probability of generating an integer number [0,length(density))
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setDensity</name><parameter_list>(<param><decl><type><name><name>double</name><index>[]</index></name></type> <name>density</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>density</name></name> = <name>density</name></expr>;</expr_stmt>
    }</block></function>
}</block></class>
</unit>
