<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\Daavid\git\unalcol\redress2\test_data\code\optimizacion\src\unalcol\algorithm\ThreadFunction.java"><package>package <name><name>unalcol</name>.<name>algorithm</name></name>;</package>
<import>import <name><name>unalcol</name>.<name>tracer</name></name>.*;</import>
<import>import <name><name>unalcol</name>.<name>math</name>.<name>function</name></name>.*;</import>

<comment type="javadoc">/**
 * &lt;p&gt;Abstract Function defined as a Thread&lt;/p&gt;
 *
 * &lt;p&gt;Copyright: Copyright (c) 2010&lt;/p&gt;
 *
 * @author Jonatan Gomez Perdomo
 * @version 1.0
 */</comment>
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name><name>ThreadFunction</name><argument_list>&lt;<argument><name>S</name></argument>, <argument><name>T</name></argument>&gt;</argument_list></name> <super><implements>implements <name><name>Function</name><argument_list>&lt;<argument><name>S</name></argument>,<argument><name>T</name></argument>&gt;</argument_list></name></implements></super><block>{

    <comment type="javadoc">/**
     * Flag used for determining if the function was stopped or not
     */</comment>
    <decl_stmt><decl><type><specifier>protected</specifier> <name>boolean</name></type> <name>continueFlag</name> =<init> <expr>true</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Stops the function computation
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>stop</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><name>continueFlag</name> = false</expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * Determines if the function was stopped or not
     * @return true if the function was stopped, false otherwise
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>stopped</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name>continueFlag</name></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Adds the given object to the set of tracers defined for that object
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>addToTrace</name><parameter_list>( <param><decl><type><name>Object</name></type> <name>obj</name></decl></param> )</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>TracerProvider</name>.<name>trace</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
}</block></class></unit>
