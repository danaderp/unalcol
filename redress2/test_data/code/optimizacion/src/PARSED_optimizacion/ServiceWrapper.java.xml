<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\Daavid\git\unalcol\redress2\test_data\code\optimizacion\src\unalcol\reflect\service\ServiceWrapper.java"><package>package <name><name>unalcol</name>.<name>reflect</name>.<name>service</name></name>;</package>

<comment type="javadoc">/**
 * &lt;p&gt;A Service Wrapper for existing or defined class methods. If a
 * class has defined a method that can be used as service, then such method can
 * be wrapped as a Service for the Service infra-structure&lt;/p&gt;
 *
 * @author Jonatan Gomez Perdomo
 * @version 1.0
 */</comment>
<class><specifier>public</specifier> class <name>ServiceWrapper</name> <super><implements>implements <name>Service</name></implements></super> <block>{
    <decl_stmt><decl><type><specifier>protected</specifier> <name>String</name></type> <name>method_name</name></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Creates a wrapped service for a given method name
     * @param method_name The method that will be wrapped as service
     */</comment>
    <constructor><specifier>public</specifier> <name>ServiceWrapper</name><parameter_list>(<param><decl><type><name>String</name></type> <name>method_name</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>method_name</name></name> = <name>method_name</name></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="javadoc">/**
     * Returns Object class as owner of the service (can be used for any object that
     * contains a method matching this method name
     * @return Object class 
     */</comment>
    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name>Object</name></type> <name>owner</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name><name>Object</name>.<name><name/></name></name>class</expr>;</return>
    }</block></function>
}</block></class></unit>
