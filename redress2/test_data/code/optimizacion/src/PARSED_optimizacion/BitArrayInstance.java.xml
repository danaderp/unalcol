<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\Daavid\git\unalcol\redress2\test_data\code\optimizacion\src\unalcol\types\collection\bitarray\BitArrayInstance.java"><comment type="block">/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */</comment>
<package>package <name><name>unalcol</name>.<name>types</name>.<name>collection</name>.<name>bitarray</name></name>;</package>

<import>import <name><name>unalcol</name>.<name>instance</name>.<name>InstanceService</name></name>;</import>

<comment type="javadoc">/**
 *
 * @author jgomez
 */</comment>
<class><specifier>public</specifier> class <name>BitArrayInstance</name> <super><implements>implements <name><name>InstanceService</name><argument_list>&lt;<argument><name>BitArray</name></argument>&gt;</argument_list></name></implements></super> <block>{

  <comment type="javadoc">/**
   * Creates a BinaryGenotype with the given lenght
   * @param length The lengh of the new bitarray
   */</comment>
  <constructor><specifier>public</specifier> <name>BitArrayInstance</name><parameter_list>()</parameter_list> <block>{
  }</block></constructor>

  <comment type="javadoc">/**
   * Creates a new genome of the binary genotype
   * @return Object New binary genome
   */</comment>
  <function><type><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <name>BitArray</name></type> <name>get</name><parameter_list>( <param><decl><type><name>BitArray</name></type> <name>array</name></decl></param> )</parameter_list> <block>{
    <return>return <expr>new <call><name>BitArray</name><argument_list>(<argument><expr><call><name><name>array</name>.<name>dimension</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr>true</expr></argument>)</argument_list></call></expr>;</return>
  }</block></function>

  <function><type><annotation>@<name>Override</name></annotation>
  <specifier>public</specifier> <name>Object</name></type> <name>owner</name><parameter_list>()</parameter_list><block>{
      <return>return <expr><name><name>BitArray</name>.<name><name/></name></name>class</expr>;</return>
  }</block></function>
}</block></class>
</unit>
