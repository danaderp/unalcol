<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\Daavid\git\unalcol\redress2\test_data\code\optimizacion\src\unalcol\tracer\Tracer.java"><package>package <name><name>unalcol</name>.<name>tracer</name></name>;</package>

<import>import <name><name>unalcol</name>.<name>reflect</name>.<name>service</name></name>.*;</import>

<comment type="javadoc">/**
 * &lt;p&gt;Title: Tracer&lt;/p&gt;
 * &lt;p&gt;Description: Abstract definition of a Tracer of objects&lt;/p&gt;
 * &lt;p&gt;Copyright: Copyright (c) 2009&lt;/p&gt;
 * &lt;p&gt;Company: Kunsamu&lt;/p&gt;
 * @author Jonatan Gomez Perdomo
 * @version 1.0
 */</comment>
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>Tracer</name>  <super><implements>implements <name>Service</name></implements></super><block>{
    <decl_stmt><decl><type><specifier>public</specifier> <name>Object</name></type> <name>owner</name> =<init> <expr><name>null</name></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>protected</specifier> <name>boolean</name></type> <name>tracing</name> =<init> <expr>true</expr></init></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>Tracer</name><parameter_list>( <param><decl><type><name>Object</name></type> <name>owner</name></decl></param> )</parameter_list><block>{
        <expr_stmt><expr><name><name>this</name>.<name>owner</name></name> = <name>owner</name></expr>;</expr_stmt>
    }</block></constructor>

    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>start</name><parameter_list>()</parameter_list><block>{
        <decl_stmt><decl><type><name>boolean</name></type> <name>old</name> =<init> <expr><name>tracing</name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>tracing</name> = true</expr>;</expr_stmt>
        <return>return <expr><name>old</name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>stop</name><parameter_list>()</parameter_list><block>{
        <decl_stmt><decl><type><name>boolean</name></type> <name>old</name> =<init> <expr><name>tracing</name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>tracing</name> = false</expr>;</expr_stmt>
        <return>return <expr><name>old</name></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Adds an object sent by an object to the tracer
     * @param obj Traced information to be added
     */</comment>
    <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>void</name></type> <name>add</name><parameter_list>(<param><decl><type><name>Object</name></type> <name>obj</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Returns the traced object
     * @return An object representing the traced information
     */</comment>
    <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>Object</name></type> <name>get</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Cleans the traced information
     */</comment>
    <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>void</name></type> <name>clean</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Closes the tracer
     */</comment>
    <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>void</name></type> <name>close</name><parameter_list>()</parameter_list>;</function_decl>

    <function><type><specifier>public</specifier> <name>Object</name></type> <name>owner</name><parameter_list>()</parameter_list><block>{
        <return>return <expr><name>owner</name></expr>;</return>
    }</block></function>
}</block></class></unit>
