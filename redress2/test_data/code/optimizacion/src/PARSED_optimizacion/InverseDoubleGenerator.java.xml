<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\Daavid\git\unalcol\redress2\test_data\code\optimizacion\src\unalcol\random\real\InverseDoubleGenerator.java"><package>package <name><name>unalcol</name>.<name>random</name>.<name>real</name></name>;</package>

<import>import <name><name>unalcol</name>.<name>random</name></name>.*;</import>
<import>import <name><name>unalcol</name>.<name>random</name>.<name>raw</name>.<name>RawGenerator</name></name>;</import>
<import>import <name><name>unalcol</name>.<name>random</name>.<name>rngpack</name>.<name>RanMT</name></name>;</import>

<comment type="javadoc">/**
 * &lt;p&gt;Creates a double number generator from a uniform number generator (using the inverse notion)&lt;/p&gt;
 *
 * &lt;p&gt;Copyright: Copyright (c) 2009&lt;/p&gt;
 *
 * @author Jonatan Gomez Perdomo
 * @version 1.0
 */</comment>
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>InverseDoubleGenerator</name> <super><extends>extends <name>DoubleGenerator</name></extends></super> <block>{
    <decl_stmt><decl><type><specifier>protected</specifier> <name>RawGenerator</name></type> <name>g</name></decl>;</decl_stmt>
    
    <constructor><specifier>public</specifier> <name>InverseDoubleGenerator</name><parameter_list>()</parameter_list><block>{
        <expr_stmt><expr><name>g</name> = <call><name><name>Random</name>.<name>get</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>
    
    <constructor><specifier>public</specifier> <name>InverseDoubleGenerator</name><parameter_list>( <param><decl><type><name>RawGenerator</name></type> <name>_g</name></decl></param> )</parameter_list><block>{
        <expr_stmt><expr><name>g</name> = <name>_g</name></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="javadoc">/**
     * Returns a random double number
     * @param x Inverse value (cumulative probability)
     * @return A random double number
     */</comment>
    <function_decl><type><specifier>public</specifier> <specifier>abstract</specifier> <name>double</name></type> <name>next</name><parameter_list>(<param><decl><type><name>double</name></type> <name>x</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Returns a random double number
     * @return A random double number
     */</comment>
    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name>double</name></type> <name>next</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><call><name>next</name><argument_list>(<argument><expr><call><name><name>g</name>.<name>next</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
}</block></class>
</unit>
