<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\Daavid\git\unalcol\redress2\test_data\code\optimizacion\src\unalcol\types\collection\list\Queue.java"><package>package <name><name>unalcol</name>.<name>types</name>.<name>collection</name>.<name>list</name></name>;</package>
<import>import <name><name>java</name>.<name>util</name>.<name>NoSuchElementException</name></name>;</import>

<comment type="javadoc">/**
 * &lt;p&gt;Title: Queue&lt;/p&gt;
 *
 * &lt;p&gt;Description: A queue &lt;/p&gt;
 *
 * &lt;p&gt;Copyright: Copyright (c) 2009&lt;/p&gt;
 *
 * &lt;p&gt;Company: Kunsamu&lt;/p&gt;
 *
 * @author Jonatan Gomez
 * @version 1.0
 */</comment>
<class><specifier>public</specifier> class <name><name>Queue</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name> <super><extends>extends <name><name>List</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name></extends></super><block>{
    <constructor><specifier>public</specifier> <name>Queue</name><parameter_list>()</parameter_list> <block>{
    }</block></constructor>

    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>del</name><parameter_list>( <param><decl><type><name>T</name></type> <name>data</name></decl></param> )</parameter_list><block>{
        <try>try<block>{
            <expr_stmt><expr><call><name>del</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <return>return <expr>true</expr>;</return>
        }</block><catch>catch( <param><decl><type><name>NoSuchElementException</name></type> <name>e</name></decl></param> )<block>{
            <return>return <expr>false</expr>;</return>
        }</block></catch></try>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>del</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>NoSuchElementException</name></expr></argument></throws><block>{
        <try>try<block>{
            <expr_stmt><expr><name>head</name> = <name><name>head</name>.<name>next</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name>size</name>--</expr>;</expr_stmt>
            <if>if <condition>(<expr><name>head</name> == <name>null</name></expr>)</condition><then> <block>{
                <expr_stmt><expr><name>last</name> = <name>null</name></expr>;</expr_stmt>
            }</block></then></if>
        }</block><catch>catch( <param><decl><type><name>Exception</name></type> <name>e</name></decl></param> )<block>{
            <throw>throw <expr>new <call><name>NoSuchElementException</name><argument_list>()</argument_list></call></expr>;</throw>
        }</block></catch></try>
    }</block></function>
}</block></class>
</unit>
