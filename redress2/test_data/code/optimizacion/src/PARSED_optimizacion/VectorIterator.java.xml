<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\Daavid\git\unalcol\redress2\test_data\code\optimizacion\src\unalcol\types\collection\vector\VectorIterator.java"><package>package <name><name>unalcol</name>.<name>types</name>.<name>collection</name>.<name>vector</name></name>;</package>
<import>import <name><name>unalcol</name>.<name>types</name>.<name>collection</name></name>.*;</import>
<import>import <name><name>java</name>.<name>util</name>.<name>NoSuchElementException</name></name>;</import>

<comment type="javadoc">/**
 * &lt;p&gt;Title: &lt;/p&gt;
 *
 * &lt;p&gt;Description: &lt;/p&gt;
 *
 * &lt;p&gt;Copyright: Copyright (c) 2009&lt;/p&gt;
 *
 * &lt;p&gt;Company: Kunsamu&lt;/p&gt;
 *
 * @author Jonatan Gomez Perdomo
 * @version 1.0
 */</comment>
<class><specifier>public</specifier> class <name><name>VectorIterator</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name> <super><implements>implements <name><name>Iterator</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name></implements></super> <block>{
    <decl_stmt><decl><type><specifier>protected</specifier> <name>int</name></type> <name>pos</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>protected</specifier> <name><name>ImmutableVector</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>vector</name></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>VectorIterator</name><parameter_list>( <param><decl><type><name>int</name></type> <name>pos</name></decl></param>, <param><decl><type><name><name>ImmutableVector</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>vector</name></decl></param> )</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>vector</name></name> = <name>vector</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>pos</name></name> = <name>pos</name></expr>;</expr_stmt>
    }</block></constructor>

    <constructor><specifier>public</specifier> <name>VectorIterator</name><parameter_list>( <param><decl><type><name><name>VectorLocation</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>location</name></decl></param> )</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>vector</name></name> = <name><name>location</name>.<name>vector</name></name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>pos</name></name> = <name><name>location</name>.<name>pos</name></name></expr>;</expr_stmt>
    }</block></constructor>

    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>hasNext</name><parameter_list>()</parameter_list><block>{
        <return>return <expr><name>pos</name>&lt;<name><name>vector</name>.<name>size</name></name></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>T</name></type> <name>next</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>NoSuchElementException</name></expr></argument></throws><block>{
        <try>try<block>{
            <decl_stmt><decl><type><name>T</name></type> <name>d</name> =<init> <expr><name><name>vector</name>.<name>buffer</name><index>[<expr><name>pos</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name>pos</name>++</expr>;</expr_stmt>
            <return>return <expr><name>d</name></expr>;</return>
        }</block><catch>catch( <param><decl><type><name>Exception</name></type> <name>e</name></decl></param> )<block>{
            <throw>throw <expr>new <call><name>NoSuchElementException</name><argument_list>( <argument><expr>"" + <name>pos</name></expr></argument> )</argument_list></call></expr>;</throw>
        }</block></catch></try>
    }</block></function>
}</block></class>
</unit>
