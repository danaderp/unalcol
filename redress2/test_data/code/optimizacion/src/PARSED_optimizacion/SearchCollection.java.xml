<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\Daavid\git\unalcol\redress2\test_data\code\optimizacion\src\unalcol\types\collection\SearchCollection.java"><comment type="block">/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */</comment>
<package>package <name><name>unalcol</name>.<name>types</name>.<name>collection</name></name>;</package>
<import>import <name><name>java</name>.<name>util</name>.<name>Iterator</name></name>;</import>

<comment type="javadoc">/**
 *
 * @author jgomez
 */</comment>
<class type="interface"><specifier>public</specifier> interface <name><name>SearchCollection</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name> <super><extends>extends <name><name>Collection</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name></extends></super> <block>{
    <comment type="javadoc">/**
        * Locates the given object in the structure
        * @param data Data object to be located
        * @return A data iterator starting at the given object (when the next method is called),
        * If the element is not in the data structure the get method will return an exception
        */</comment>
    <function_decl><type><specifier>public</specifier> <name><name>Location</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>find</name><parameter_list>(<param><decl><type><name>T</name></type> <name>data</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
        * Determines if the given object belongs to the structure
        * @param data Data object to be located
        * @return &lt;i&gt;true&lt;/i&gt;If the objects belongs to the structure, &lt;i&gt;false&gt;otherwise&lt;/i&gt;
        */</comment>
    <function_decl><type><specifier>public</specifier> <name>boolean</name></type> <name>contains</name><parameter_list>( <param><decl><type><name>T</name></type> <name>data</name></decl></param> )</parameter_list>;</function_decl>   
    
    <comment type="javadoc">/**
        * Obtains an iterator of the objects in the structure starting at the given Locator
        * @param locator Locator used for starting the iterator, the first element returned by the iterator is the one in the locator
        * (if some one is in the locator)
        * @return Iterator of the objects in the structure starting at the given Locator
        */</comment>
    <function_decl><type><specifier>public</specifier> <name><name>Iterator</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>iterator</name><parameter_list>( <param><decl><type><name><name>Location</name><argument_list>&lt;<argument><name>T</name></argument>&gt;</argument_list></name></type> <name>locator</name></decl></param> )</parameter_list>;</function_decl>
    
}</block></class>
</unit>
