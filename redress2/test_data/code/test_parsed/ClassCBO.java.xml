<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Workspaces\General_kepler2\MetricTests\src\cbo\ClassCBO.java"><package>package <name>cbo</name>;</package>

<import>import <name><name>java</name>.<name>util</name>.<name>ArrayList</name></name>;</import>
<import>import <name><name>java</name>.<name>util</name>.<name>HashMap</name></name>;</import>
<import>import <name><name>java</name>.<name>util</name>.<name>List</name></name>;</import>

<class><specifier>public</specifier> class <name>ClassCBO</name> <super><extends>extends <name>SuperClassCBO</name></extends></super><block>{

	<decl_stmt><decl><type><name>Double</name></type> <name>field1</name> =<init> <expr>0.0</expr></init></decl>;</decl_stmt>
	
	<constructor><specifier>public</specifier> <name>ClassCBO</name><parameter_list>(<param><decl><type><name>Boolean</name></type> <name>b</name></decl></param>)</parameter_list> <block>{
		
		<decl_stmt><decl><type><name>Character</name></type> <name>c</name></decl>;</decl_stmt>
		<expr_stmt><expr>new <call><name>ClassCBO</name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>

	<function><type><specifier>public</specifier> <name><name>List</name><argument_list>&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>method1</name><parameter_list>(<param><decl><type><name>String</name></type> <name>param1</name></decl></param>, <param><decl><type><name>int</name></type> <name>param2</name></decl></param>)</parameter_list> <block>{
		<decl_stmt><decl><type><name>Integer</name></type> <name>var1</name>, <name>var2</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name><name>HashMap</name><argument_list>&lt;<argument><name><name>java</name>.<name>util</name>.<name>Date</name></name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>map</name></decl>;</decl_stmt>

		<expr_stmt><expr><call><name><name>field1</name>.<name>toString</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name>Integer</name></type> <name>var3</name> =<init> <expr><name><name>Integer</name>.<name>MAX_VALUE</name></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>int</name></type> <name>a</name> =<init> <expr><name><name>var3</name>.<name>MAX_VALUE</name></name></expr></init></decl>;</decl_stmt>

		<expr_stmt><expr><call><name>method2</name><argument_list>(<argument><expr><call><name><name>field1</name>.<name>hashCode</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name>Object</name></type> <name>bb</name> =<init> <expr>(<name>Integer</name>) <call><name><name>Integer</name>.<name>getInteger</name></name><argument_list>(<argument><expr>"12"</expr></argument>, <argument><expr>23</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<expr_stmt><expr><call><name>methodSuperClass</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name>System</name>.<name>out</name>.<name>println</name></name><argument_list>(<argument><expr><name>fieldSuper</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<return>return <expr>new <call><name><name>ArrayList</name><argument_list>&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</return>
	}</block></function>

	<function><type><specifier>private</specifier> <name>void</name></type> <name>method2</name><parameter_list>(<param><decl><type><name>int</name></type> <name>hashCode</name></decl></param>)</parameter_list> <block>{
		<comment type="line">// TODO Auto-generated method stub</comment>
		
	}</block></function>

}</block></class>
</unit>
