<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\zip\UnsupportedZipFeatureException.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>zip</name></name>;</package>

<import>import <name><name>java</name>.<name>util</name>.<name>zip</name>.<name>ZipException</name></name>;</import>

<comment type="javadoc">/**
 * Exception thrown when attempting to read or write data for a zip
 * entry that uses ZIP features not supported by this library.
 * @since Ant 1.9.0
 */</comment>
<class><specifier>public</specifier> class <name>UnsupportedZipFeatureException</name> <super><extends>extends <name>ZipException</name></extends></super> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>Feature</name></type> <name>reason</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>ZipEntry</name></type> <name>entry</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>long</name></type> <name>serialVersionUID</name> =<init> <expr>4430521921766595597L</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Creates an exception.
     * @param reason the feature that is not supported
     * @param entry the entry using the feature
     */</comment>
    <constructor><specifier>public</specifier> <name>UnsupportedZipFeatureException</name><parameter_list>(<param><decl><type><name>Feature</name></type> <name>reason</name></decl></param>,
                                          <param><decl><type><name>ZipEntry</name></type> <name>entry</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr>"unsupported feature " + <name>reason</name> +  " used in entry "
              + <call><name><name>entry</name>.<name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>reason</name></name> = <name>reason</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name>.<name>entry</name></name> = <name>entry</name></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="javadoc">/**
     * The unsupported feature that has been used.
     */</comment>
    <function><type><specifier>public</specifier> <name>Feature</name></type> <name>getFeature</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name>reason</name></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * The entry using the unsupported feature.
     */</comment>
    <function><type><specifier>public</specifier> <name>ZipEntry</name></type> <name>getEntry</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name>entry</name></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * ZIP Features that may or may not be supported.
     */</comment>
    <class><specifier>public</specifier> <specifier>static</specifier> class <name>Feature</name> <block>{
        <comment type="javadoc">/**
         * The entry is encrypted.
         */</comment>
        <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Feature</name></type> <name>ENCRYPTION</name> =<init> <expr>new <call><name>Feature</name><argument_list>(<argument><expr>"encryption"</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="javadoc">/**
         * The entry used an unsupported compression method.
         */</comment>
        <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Feature</name></type> <name>METHOD</name> =<init> <expr>new <call><name>Feature</name><argument_list>(<argument><expr>"compression method"</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="javadoc">/**
         * The entry uses a data descriptor.
         */</comment>
        <decl_stmt><decl><type><specifier>public</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>Feature</name></type> <name>DATA_DESCRIPTOR</name> =<init> <expr>new <call><name>Feature</name><argument_list>(<argument><expr>"data descriptor"</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier>private</specifier> <specifier>final</specifier> <name>String</name></type> <name>name</name></decl>;</decl_stmt>

        <constructor><specifier>private</specifier> <name>Feature</name><parameter_list>(<param><decl><type><name>String</name></type> <name>name</name></decl></param>)</parameter_list> <block>{
            <expr_stmt><expr><name><name>this</name>.<name>name</name></name> = <name>name</name></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><annotation>@<name>Override</name></annotation>
        <specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list> <block>{
            <return>return <expr><name>name</name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></class>
</unit>
