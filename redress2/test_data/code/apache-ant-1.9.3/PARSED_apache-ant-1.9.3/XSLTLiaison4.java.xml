<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\taskdefs\XSLTLiaison4.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>taskdefs</name></name>;</package>

<comment type="javadoc">/**
 * Extends Proxy interface for XSLT processors: adds support for XSLT parameters
 * of various types (not only String)
 *
 *
 * @see XSLTProcess
 * @author Frantisek Kucera (xkucf03)
 * @since Ant 1.9.3
 */</comment>
<class type="interface"><specifier>public</specifier> interface <name>XSLTLiaison4</name> <super><extends>extends <name>XSLTLiaison3</name></extends></super> <block>{

    <comment type="javadoc">/**
     * Add a parameter to be set during the XSL transformation.
     *
     * @param name the parameter name.
     * @param value the parameter value as String, Boolean, int, etc.
     * @throws Exception thrown if any problems happens.
     * @since Ant 1.9.3
     * @see Transformer#setParameter(java.lang.String, java.lang.Object)
     */</comment>
    <function_decl><type><name>void</name></type> <name>addParam</name><parameter_list>(<param><decl><type><name>String</name></type> <name>name</name></decl></param>, <param><decl><type><name>Object</name></type> <name>value</name></decl></param>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws>;</function_decl>
}</block></class>
</unit>
