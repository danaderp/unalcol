<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\tests\junit\org\apache\tools\ant\taskdefs\compilers\DefaultCompilerAdapterTest.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>taskdefs</name>.<name>compilers</name></name>;</package>

<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>Project</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>taskdefs</name>.<name>Javac</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>types</name>.<name>Commandline</name></name>;</import>
<import>import <name><name>junit</name>.<name>framework</name>.<name>TestCase</name></name>;</import>

<class><specifier>public</specifier> class <name>DefaultCompilerAdapterTest</name> <super><extends>extends <name>TestCase</name></extends></super> <block>{

    <class><specifier>private</specifier> <specifier>static</specifier> class <name>LogCapturingJavac</name> <super><extends>extends <name>Javac</name></extends></super> <block>{
        <decl_stmt><decl><type><specifier>private</specifier> <name>StringBuffer</name></type> <name>sb</name> =<init> <expr>new <call><name>StringBuffer</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <function><type><specifier>public</specifier> <name>void</name></type> <name>log</name><parameter_list>(<param><decl><type><name>String</name></type> <name>msg</name></decl></param>, <param><decl><type><name>int</name></type> <name>msgLevel</name></decl></param>)</parameter_list> <block>{
            <expr_stmt><expr><call><name><name>sb</name>.<name>append</name></name><argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
        <function><type><name>String</name></type> <name>getLog</name><parameter_list>()</parameter_list> <block>{
            <return>return <expr><call><name><name>sb</name>.<name>toString</name></name><argument_list>()</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>

    <class><specifier>private</specifier> <specifier>static</specifier> class <name>SourceTargetHelper</name> <super><extends>extends <name>DefaultCompilerAdapter</name></extends></super> <block>{
        <comment type="javadoc">/**
         * Overridden to have no effect.
         */</comment>
        <function><type><specifier>protected</specifier> <name>Commandline</name></type> <name>setupJavacCommandlineSwitches</name><parameter_list>(<param><decl><type><name>Commandline</name></type> <name>cmd</name></decl></param>,
                                                            <param><decl><type><name>boolean</name></type> <name>debug</name></decl></param>)</parameter_list> <block>{
            <return>return <expr><name>cmd</name></expr>;</return>
        }</block></function>

        <function><type><specifier>public</specifier> <name>boolean</name></type> <name>execute</name><parameter_list>()</parameter_list> <block>{ <return>return <expr>false</expr>;</return> }</block></function>

        <comment type="javadoc">/**
         * public to avoid classloader issues.
         */</comment>
        <function><type><specifier>public</specifier> <name>Commandline</name></type> <name>setupModernJavacCommandlineSwitches</name><parameter_list>(<param><decl><type><name>Commandline</name></type> <name>cmd</name></decl></param>)</parameter_list> <block>{
            <return>return <expr><call><name><name>super</name>.<name>setupModernJavacCommandlineSwitches</name></name><argument_list>(<argument><expr><name>cmd</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testSourceIsIgnoredForJavac13</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr><name>null</name></expr></argument>, <argument><expr>"javac1.3"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr><name>null</name></expr></argument>, <argument><expr>"1.1"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr><name>null</name></expr></argument>, <argument><expr>"javac1.3"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr><name>null</name></expr></argument>, <argument><expr>"1.2"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr><name>null</name></expr></argument>, <argument><expr>"javac1.3"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr><name>null</name></expr></argument>, <argument><expr>"1.3"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr><name>null</name></expr></argument>, <argument><expr>"javac1.3"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr><name>null</name></expr></argument>, <argument><expr>"1.4"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testSource11IsUpgradedTo13</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"1.3"</expr></argument>, <argument><expr>"javac1.4"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr><name>null</name></expr></argument>, <argument><expr>"1.1"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"1.3"</expr></argument>, <argument><expr>"javac1.5"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr><name>null</name></expr></argument>, <argument><expr>"1.1"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"1.3"</expr></argument>, <argument><expr>"javac1.6"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr><name>null</name></expr></argument>, <argument><expr>"1.1"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"1.3"</expr></argument>, <argument><expr>"javac1.7"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr><name>null</name></expr></argument>, <argument><expr>"1.1"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"1.3"</expr></argument>, <argument><expr>"javac1.8"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr><name>null</name></expr></argument>, <argument><expr>"1.1"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testSource12IsUpgradedTo13</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"1.3"</expr></argument>, <argument><expr>"javac1.4"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr><name>null</name></expr></argument>, <argument><expr>"1.2"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"1.3"</expr></argument>, <argument><expr>"javac1.5"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr><name>null</name></expr></argument>, <argument><expr>"1.2"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"1.3"</expr></argument>, <argument><expr>"javac1.6"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr><name>null</name></expr></argument>, <argument><expr>"1.2"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"1.3"</expr></argument>, <argument><expr>"javac1.7"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr><name>null</name></expr></argument>, <argument><expr>"1.2"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"1.3"</expr></argument>, <argument><expr>"javac1.8"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr><name>null</name></expr></argument>, <argument><expr>"1.2"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testImplicitSourceForJava15</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>commonSourceDowngrades</name><argument_list>(<argument><expr>"javac1.5"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr><name>null</name></expr></argument>, <argument><expr>"javac1.5"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr>"1.5"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr><name>null</name></expr></argument>, <argument><expr>"javac1.5"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr>"5"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testImplicitSourceForJava16</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>commonSourceDowngrades</name><argument_list>(<argument><expr>"javac1.6"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr><name>null</name></expr></argument>, <argument><expr>"javac1.6"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr>"1.5"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr><name>null</name></expr></argument>, <argument><expr>"javac1.6"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr>"5"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr><name>null</name></expr></argument>, <argument><expr>"javac1.6"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr>"1.6"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr><name>null</name></expr></argument>, <argument><expr>"javac1.6"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr>"6"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testImplicitSourceForJava17</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>commonSourceDowngrades</name><argument_list>(<argument><expr>"javac1.7"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"1.5"</expr></argument>, <argument><expr>"javac1.7"</expr></argument>,
                   <argument><expr>"If you specify -target 1.5 you now must also specify"
                   + " -source 1.5"</expr></argument>, <argument><expr>"1.5"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"1.6"</expr></argument>, <argument><expr>"javac1.7"</expr></argument>,
                   <argument><expr>"If you specify -target 1.6 you now must also specify"
                   + " -source 1.6"</expr></argument>, <argument><expr>"1.6"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"5"</expr></argument>, <argument><expr>"javac1.7"</expr></argument>,
                   <argument><expr>"If you specify -target 5 you now must also specify"
                   + " -source 5"</expr></argument>, <argument><expr>"5"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"6"</expr></argument>, <argument><expr>"javac1.7"</expr></argument>,
                   <argument><expr>"If you specify -target 6 you now must also specify"
                   + " -source 6"</expr></argument>, <argument><expr>"6"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr><name>null</name></expr></argument>, <argument><expr>"javac1.7"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr>"1.7"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr><name>null</name></expr></argument>, <argument><expr>"javac1.7"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr>"7"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testImplicitSourceForJava18</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>commonSourceDowngrades</name><argument_list>(<argument><expr>"javac1.8"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"1.5"</expr></argument>, <argument><expr>"javac1.8"</expr></argument>,
                   <argument><expr>"If you specify -target 1.5 you now must also specify"
                   + " -source 1.5"</expr></argument>, <argument><expr>"1.5"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"1.6"</expr></argument>, <argument><expr>"javac1.8"</expr></argument>,
                   <argument><expr>"If you specify -target 1.6 you now must also specify"
                   + " -source 1.6"</expr></argument>, <argument><expr>"1.6"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"1.7"</expr></argument>, <argument><expr>"javac1.8"</expr></argument>,
                   <argument><expr>"If you specify -target 1.7 you now must also specify"
                   + " -source 1.7"</expr></argument>, <argument><expr>"1.7"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"5"</expr></argument>, <argument><expr>"javac1.8"</expr></argument>,
                   <argument><expr>"If you specify -target 5 you now must also specify"
                   + " -source 5"</expr></argument>, <argument><expr>"5"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"6"</expr></argument>, <argument><expr>"javac1.8"</expr></argument>,
                   <argument><expr>"If you specify -target 6 you now must also specify"
                   + " -source 6"</expr></argument>, <argument><expr>"6"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"7"</expr></argument>, <argument><expr>"javac1.8"</expr></argument>,
                   <argument><expr>"If you specify -target 7 you now must also specify"
                   + " -source 7"</expr></argument>, <argument><expr>"7"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr><name>null</name></expr></argument>, <argument><expr>"javac1.8"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr>"1.8"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr><name>null</name></expr></argument>, <argument><expr>"javac1.8"</expr></argument>, <argument><expr>""</expr></argument>, <argument><expr>"8"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier>private</specifier> <name>void</name></type> <name>commonSourceDowngrades</name><parameter_list>(<param><decl><type><name>String</name></type> <name>javaVersion</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"1.3"</expr></argument>, <argument><expr><name>javaVersion</name></expr></argument>,
                   <argument><expr>"If you specify -target 1.1 you now must also specify"
                   + " -source 1.3"</expr></argument>, <argument><expr>"1.1"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"1.3"</expr></argument>, <argument><expr><name>javaVersion</name></expr></argument>,
                   <argument><expr>"If you specify -target 1.2 you now must also specify"
                   + " -source 1.3"</expr></argument>, <argument><expr>"1.2"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"1.3"</expr></argument>, <argument><expr><name>javaVersion</name></expr></argument>,
                   <argument><expr>"If you specify -target 1.3 you now must also specify"
                   + " -source 1.3"</expr></argument>, <argument><expr>"1.3"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr>"1.4"</expr></argument>, <argument><expr><name>javaVersion</name></expr></argument>,
                   <argument><expr>"If you specify -target 1.4 you now must also specify"
                   + " -source 1.4"</expr></argument>, <argument><expr>"1.4"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier>private</specifier> <name>void</name></type> <name>testSource</name><parameter_list>(<param><decl><type><name>String</name></type> <name>expectedSource</name></decl></param>, <param><decl><type><name>String</name></type> <name>javaVersion</name></decl></param>,
                            <param><decl><type><name>String</name></type> <name>expectedLog</name></decl></param>, <param><decl><type><name>String</name></type> <name>configuredTarget</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><call><name>testSource</name><argument_list>(<argument><expr><name>expectedSource</name></expr></argument>, <argument><expr><name>javaVersion</name></expr></argument>, <argument><expr><name>expectedLog</name></expr></argument>, <argument><expr><name>configuredTarget</name></expr></argument>,
                   <argument><expr><name>null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier>private</specifier> <name>void</name></type> <name>testSource</name><parameter_list>(<param><decl><type><name>String</name></type> <name>expectedSource</name></decl></param>, <param><decl><type><name>String</name></type> <name>javaVersion</name></decl></param>,
                            <param><decl><type><name>String</name></type> <name>expectedLog</name></decl></param>, <param><decl><type><name>String</name></type> <name>configuredTarget</name></decl></param>,
                            <param><decl><type><name>String</name></type> <name>configuredSource</name></decl></param>)</parameter_list> <block>{
        <decl_stmt><decl><type><name>LogCapturingJavac</name></type> <name>javac</name> =<init> <expr>new <call><name>LogCapturingJavac</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>javac</name>.<name>setProject</name></name><argument_list>(<argument><expr>new <call><name>Project</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>javac</name>.<name>setCompiler</name></name><argument_list>(<argument><expr><name>javaVersion</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>javac</name>.<name>setSource</name></name><argument_list>(<argument><expr><name>configuredSource</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>javac</name>.<name>setTarget</name></name><argument_list>(<argument><expr><name>configuredTarget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>SourceTargetHelper</name></type> <name>sth</name> =<init> <expr>new <call><name>SourceTargetHelper</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>sth</name>.<name>setJavac</name></name><argument_list>(<argument><expr><name>javac</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Commandline</name></type> <name>cmd</name> =<init> <expr>new <call><name>Commandline</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>sth</name>.<name>setupModernJavacCommandlineSwitches</name></name><argument_list>(<argument><expr><name>cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if>if <condition>(<expr>"".<call><name>equals</name><argument_list>(<argument><expr><name>expectedLog</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr>""</expr></argument>, <argument><expr><call><name><name>javac</name>.<name>getLog</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then> <else>else <block>{
            <decl_stmt><decl><type><name>String</name></type> <name>l</name> =<init> <expr><call><name><name>javac</name>.<name>getLog</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr>"expected to find '" + <name>expectedLog</name> + "' in '" + <name>l</name> + "'"</expr></argument>, 
                       <argument><expr><call><name><name>l</name>.<name>indexOf</name></name><argument_list>(<argument><expr><name>expectedLog</name></expr></argument>)</argument_list></call> &gt; -1</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></else></if>
        <decl_stmt><decl><type><name>String</name><index>[]</index></type> <name>args</name> =<init> <expr><call><name><name>cmd</name>.<name>getCommandline</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>expectedSource</name> == <name>null</name> ? 0 : 2</expr></argument>, <argument><expr><name><name>args</name>.<name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if>if <condition>(<expr><name>expectedSource</name> != <name>null</name></expr>)</condition><then> <block>{
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr>"-source"</expr></argument>, <argument><expr><name><name>args</name><index>[<expr>0</expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>expectedSource</name></expr></argument>, <argument><expr><name><name>args</name><index>[<expr>1</expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
    }</block></function>
}</block></class>
</unit>
