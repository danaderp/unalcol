<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\types\selectors\modifiedselector\EqualComparator.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>types</name>.<name>selectors</name>.<name>modifiedselector</name></name>;</package>


<import>import <name><name>java</name>.<name>util</name>.<name>Comparator</name></name>;</import>


<comment type="javadoc">/**
 * Simple implementation of Comparator for use in CacheSelector.
 * compare() returns '0' (should not be selected) if both parameter
 * are equal otherwise '1' (should be selected).
 *
 * @version 2003-09-13
 * @since  Ant 1.6
 */</comment>
<class><specifier>public</specifier> class <name>EqualComparator</name> <super><implements>implements <name><name>Comparator</name><argument_list>&lt;<argument><name>Object</name></argument>&gt;</argument_list></name></implements></super> <block>{

    <comment type="javadoc">/**
     * Implements Comparator.compare().
     * @param o1 the first object
     * @param o2 the second object
     * @return 0, if both are equal, otherwise 1
     */</comment>
    <function><type><specifier>public</specifier> <name>int</name></type> <name>compare</name><parameter_list>(<param><decl><type><name>Object</name></type> <name>o1</name></decl></param>, <param><decl><type><name>Object</name></type> <name>o2</name></decl></param>)</parameter_list> <block>{
        <if>if <condition>(<expr><name>o1</name> == <name>null</name></expr>)</condition><then> <block>{
            <if>if <condition>(<expr><name>o2</name> == <name>null</name></expr>)</condition><then> <block>{
                <return>return <expr>1</expr>;</return>
            }</block></then></if>
            <return>return <expr>0</expr>;</return>
        }</block></then></if>
        <return>return <expr>(<call><name><name>o1</name>.<name>equals</name></name><argument_list>(<argument><expr><name>o2</name></expr></argument>)</argument_list></call>) ? 0 : 1</expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Override Object.toString().
     * @return information about this comparator
     */</comment>
    <function><type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr>"EqualComparator"</expr>;</return>
    }</block></function>
}</block></class>
</unit>
