<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\etc\testcases\types\assertions\AssertionTest.java"><comment type="block">/* 
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 * 
 */</comment>
 
 <import>import <name><name>junit</name>.<name>framework</name>.<name>TestCase</name></name>;</import>

<comment type="javadoc">/**
 * this is an assertion tester for junit 
 */</comment>
<class><specifier>public</specifier> class <name>AssertionTest</name> <super><extends>extends <name>TestCase</name></extends></super> <block>{
    
	<constructor><specifier>public</specifier> <name>AssertionTest</name><parameter_list>(<param><decl><type><name>String</name></type> <name>name</name></decl></param>)</parameter_list> <block>{
		<expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>
	
	<function><type><specifier>public</specifier> <name>void</name></type> <name>testAssertRaised</name><parameter_list>()</parameter_list> <block>{
		<try>try <block>{
			<expr_stmt><expr><name>assert</name> true == false</expr>;</expr_stmt>
			<expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr>"expected an assertion"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block> <catch>catch(<param><decl><type><name>AssertionError</name></type> <name>asserto</name></decl></param>) <block>{
			<comment type="line">//if we got here, all was well</comment>
		}</block></catch></try>
	}</block></function>
	
	
	<function><type><specifier>public</specifier> <name>void</name></type> <name>testAssertNotRaised</name><parameter_list>()</parameter_list> <block>{
		<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr>2+2==4</expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>
	
    
}</block></class>
</unit>
