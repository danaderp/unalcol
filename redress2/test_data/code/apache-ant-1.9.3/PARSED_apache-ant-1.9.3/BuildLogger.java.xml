<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\BuildLogger.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name></name>;</package>

<import>import <name><name>java</name>.<name>io</name>.<name>PrintStream</name></name>;</import>

<comment type="javadoc">/**
 * Interface used by Ant to log the build output.
 *
 * A build logger is a build listener which has the 'right' to send output to
 * the ant log, which is usually &lt;code&gt;System.out&lt;/code&gt; unless redirected by
 * the &lt;code&gt;-logfile&lt;/code&gt; option.
 *
 */</comment>
<class type="interface"><specifier>public</specifier> interface <name>BuildLogger</name> <super><extends>extends <name>BuildListener</name></extends></super> <block>{

    <comment type="javadoc">/**
     * Sets the highest level of message this logger should respond to.
     *
     * Only messages with a message level lower than or equal to the
     * given level should be written to the log.
     * &lt;P&gt;
     * Constants for the message levels are in the
     * {@link Project Project} class. The order of the levels, from least
     * to most verbose, is &lt;code&gt;MSG_ERR&lt;/code&gt;, &lt;code&gt;MSG_WARN&lt;/code&gt;,
     * &lt;code&gt;MSG_INFO&lt;/code&gt;, &lt;code&gt;MSG_VERBOSE&lt;/code&gt;,
     * &lt;code&gt;MSG_DEBUG&lt;/code&gt;.
     *
     * @param level the logging level for the logger.
     */</comment>
    <function_decl><type><name>void</name></type> <name>setMessageOutputLevel</name><parameter_list>(<param><decl><type><name>int</name></type> <name>level</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Sets the output stream to which this logger is to send its output.
     *
     * @param output The output stream for the logger.
     *               Must not be &lt;code&gt;null&lt;/code&gt;.
     */</comment>
    <function_decl><type><name>void</name></type> <name>setOutputPrintStream</name><parameter_list>(<param><decl><type><name>PrintStream</name></type> <name>output</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Sets this logger to produce emacs (and other editor) friendly output.
     *
     * @param emacsMode &lt;code&gt;true&lt;/code&gt; if output is to be unadorned so that
     *                  emacs and other editors can parse files names, etc.
     */</comment>
    <function_decl><type><name>void</name></type> <name>setEmacsMode</name><parameter_list>(<param><decl><type><name>boolean</name></type> <name>emacsMode</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Sets the output stream to which this logger is to send error messages.
     *
     * @param err The error stream for the logger.
     *            Must not be &lt;code&gt;null&lt;/code&gt;.
     */</comment>
    <function_decl><type><name>void</name></type> <name>setErrorPrintStream</name><parameter_list>(<param><decl><type><name>PrintStream</name></type> <name>err</name></decl></param>)</parameter_list>;</function_decl>
}</block></class>
</unit>
