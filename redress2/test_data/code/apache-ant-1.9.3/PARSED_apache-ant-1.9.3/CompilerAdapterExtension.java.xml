<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\taskdefs\compilers\CompilerAdapterExtension.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>taskdefs</name>.<name>compilers</name></name>;</package>

<comment type="javadoc">/**
 * Extension interface for compilers that support source extensions
 * other than .java.
 * 
 * @since Ant 1.8.2
 */</comment>
<class type="interface"><specifier>public</specifier> interface <name>CompilerAdapterExtension</name> <block>{

    <comment type="javadoc">/**
     * Returns a list of source file extensions that are recognized by
     * this compiler adapter.
     *
     * &lt;p&gt;For example, most compiler adapters will return [ "java" ],
     * but a compiler adapter that can compile both Java and Groovy
     * source code would return [ "java", "groovy" ].&lt;/p&gt;
     * 
     * @return list of source file extensions recognized by this
     * compiler adapter.
     */</comment>
    <function_decl><type><name>String</name><index>[]</index></type> <name>getSupportedFileExtensions</name><parameter_list>()</parameter_list>;</function_decl>
}</block></class>
</unit>
