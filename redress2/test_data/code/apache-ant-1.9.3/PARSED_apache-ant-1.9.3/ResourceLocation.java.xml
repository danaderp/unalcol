<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\types\ResourceLocation.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>types</name></name>;</package>

<import>import <name><name>java</name>.<name>net</name>.<name>URL</name></name>;</import>

<comment type="javadoc">/**
 * &lt;p&gt;Helper class to handle the &lt;code&gt;&amp;lt;dtd&amp;gt;&lt;/code&gt; and
 * &lt;code&gt;&amp;lt;entity&amp;gt;&lt;/code&gt; nested elements.  These correspond to
 * the &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;URI&lt;/code&gt; catalog entry types,
 * respectively, as defined in the &lt;a
 * href="http://oasis-open.org/committees/entity/spec-2001-08-06.html"&gt;
 * OASIS "Open Catalog" standard&lt;/a&gt;.&lt;/p&gt;
 *
 * &lt;p&gt;Possible Future Enhancements:
 * &lt;ul&gt;
 * &lt;li&gt;Bring the Ant element names into conformance with the OASIS standard&lt;/li&gt;
 * &lt;li&gt;Add support for additional OASIS catalog entry types&lt;/li&gt;
 * &lt;/ul&gt;
 * &lt;/p&gt;
 *
 * @see org.apache.xml.resolver.Catalog
 * @since Ant 1.6
 */</comment>
<class><specifier>public</specifier> class <name>ResourceLocation</name> <block>{

    <comment type="line">//-- Fields ----------------------------------------------------------------</comment>
    <comment type="javadoc">/** publicId of the dtd/entity. */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>publicId</name> =<init> <expr><name>null</name></expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/** location of the dtd/entity - a file/resource/URL. */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>location</name> =<init> <expr><name>null</name></expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * base URL of the dtd/entity, or null. If null, the Ant project
     * basedir is assumed.  If the location specifies a relative
     * URL/pathname, it is resolved using the base.  The default base
     * for an external catalog file is the directory in which it is
     * located.
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>URL</name></type> <name>base</name> =<init> <expr><name>null</name></expr></init></decl>;</decl_stmt>

    <comment type="line">//-- Methods ---------------------------------------------------------------</comment>

    <comment type="javadoc">/**
     * @param publicId uniquely identifies the resource.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setPublicId</name><parameter_list>(<param><decl><type><name>String</name></type> <name>publicId</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>publicId</name></name> = <name>publicId</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * @param location the location of the resource associated with the
     *      publicId.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setLocation</name><parameter_list>(<param><decl><type><name>String</name></type> <name>location</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>location</name></name> = <name>location</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * @param base the base URL of the resource associated with the
     * publicId.  If the location specifies a relative URL/pathname,
     * it is resolved using the base.  The default base for an
     * external catalog file is the directory in which it is located.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setBase</name><parameter_list>(<param><decl><type><name>URL</name></type> <name>base</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>base</name></name> = <name>base</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * @return the publicId of the resource.
     */</comment>
    <function><type><specifier>public</specifier> <name>String</name></type> <name>getPublicId</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name>publicId</name></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * @return the location of the resource identified by the publicId.
     */</comment>
    <function><type><specifier>public</specifier> <name>String</name></type> <name>getLocation</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name>location</name></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * @return the base of the resource identified by the publicId.
     */</comment>
    <function><type><specifier>public</specifier> <name>URL</name></type> <name>getBase</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name>base</name></expr>;</return>
    }</block></function>

}</block></class> <comment type="line">//-- ResourceLocation</comment>
</unit>
