<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\tar\TarConstants.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>

<comment type="block">/*
 * This package is based on the work done by Timothy Gerard Endres
 * (time@ice.com) to whom the Ant project is very grateful for his great code.
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>tar</name></name>;</package>

<comment type="javadoc">/**
 * This interface contains all the definitions used in the package.
 *
 * For tar formats (FORMAT_OLDGNU, FORMAT_POSIX, etc.) see GNU tar
 * &lt;I&gt;tar.h&lt;/I&gt; type &lt;I&gt;enum archive_format&lt;/I&gt;
 */</comment>
<comment type="line">// CheckStyle:InterfaceIsTypeCheck OFF (bc)</comment>
<class type="interface"><specifier>public</specifier> interface <name>TarConstants</name> <block>{

    <comment type="javadoc">/**
     * GNU format as per before tar 1.12.
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>FORMAT_OLDGNU</name> =<init> <expr>2</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Pure Posix format.
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>FORMAT_POSIX</name> =<init> <expr>3</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The length of the name field in a header buffer.
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>NAMELEN</name> =<init> <expr>100</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The length of the mode field in a header buffer.
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>MODELEN</name> =<init> <expr>8</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The length of the user id field in a header buffer.
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>UIDLEN</name> =<init> <expr>8</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The length of the group id field in a header buffer.
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>GIDLEN</name> =<init> <expr>8</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The maximum value of gid/uid in a tar archive which can
     * be expressed in octal char notation (that's 7 sevens, octal).
     */</comment>
    <decl_stmt><decl><type><name>long</name></type>    <name>MAXID</name> =<init> <expr>07777777L</expr></init></decl>;</decl_stmt>
 
    <comment type="javadoc">/**
     * The length of the checksum field in a header buffer.
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>CHKSUMLEN</name> =<init> <expr>8</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The length of the size field in a header buffer.
     * Includes the trailing space or NUL.
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>SIZELEN</name> =<init> <expr>12</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The maximum size of a file in a tar archive 
     * which can be expressed in octal char notation (that's 11 sevens, octal).
     */</comment>
    <decl_stmt><decl><type><name>long</name></type>   <name>MAXSIZE</name> =<init> <expr>077777777777L</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/** Offset of start of magic field within header record */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>MAGIC_OFFSET</name> =<init> <expr>257</expr></init></decl>;</decl_stmt>
    <comment type="javadoc">/**
     * The length of the magic field in a header buffer including the version.
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>MAGICLEN</name> =<init> <expr>8</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The length of the magic field in a header buffer.
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>PURE_MAGICLEN</name> =<init> <expr>6</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/** Offset of start of magic field within header record */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>VERSION_OFFSET</name> =<init> <expr>263</expr></init></decl>;</decl_stmt>
    <comment type="javadoc">/**
     * Previously this was regarded as part of "magic" field, but it
     * is separate.
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>VERSIONLEN</name> =<init> <expr>2</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The length of the modification time field in a header buffer.
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>MODTIMELEN</name> =<init> <expr>12</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The length of the user name field in a header buffer.
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>UNAMELEN</name> =<init> <expr>32</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The length of the group name field in a header buffer.
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>GNAMELEN</name> =<init> <expr>32</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The length of each of the device fields (major and minor) in a header buffer.
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>DEVLEN</name> =<init> <expr>8</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Length of the prefix field.
     * 
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>PREFIXLEN</name> =<init> <expr>155</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The length of the access time field in an old GNU header buffer.
     * 
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>ATIMELEN_GNU</name> =<init> <expr>12</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The length of the created time field in an old GNU header buffer.
     * 
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>CTIMELEN_GNU</name> =<init> <expr>12</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The length of the multivolume start offset field in an old GNU header buffer. 
     * 
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>OFFSETLEN_GNU</name> =<init> <expr>12</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The length of the long names field in an old GNU header buffer. 
     * 
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>LONGNAMESLEN_GNU</name> =<init> <expr>4</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The length of the padding field in an old GNU header buffer. 
     * 
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>PAD2LEN_GNU</name> =<init> <expr>1</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The sum of the length of all sparse headers in an old GNU header buffer. 
     * 
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>SPARSELEN_GNU</name> =<init> <expr>96</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The length of the is extension field in an old GNU header buffer. 
     * 
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>ISEXTENDEDLEN_GNU</name> =<init> <expr>1</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The length of the real size field in an old GNU header buffer. 
     * 
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>REALSIZELEN_GNU</name> =<init> <expr>12</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The sum of the length of all sparse headers in a sparse header buffer. 
     * 
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>SPARSELEN_GNU_SPARSE</name> =<init> <expr>504</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The length of the is extension field in a sparse header buffer. 
     * 
     */</comment>
    <decl_stmt><decl><type><name>int</name></type>    <name>ISEXTENDEDLEN_GNU_SPARSE</name> =<init> <expr>1</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * LF_ constants represent the "link flag" of an entry, or more commonly,
     * the "entry type". This is the "old way" of indicating a normal file.
     */</comment>
    <decl_stmt><decl><type><name>byte</name></type>   <name>LF_OLDNORM</name> =<init> <expr>0</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Normal file type.
     */</comment>
    <decl_stmt><decl><type><name>byte</name></type>   <name>LF_NORMAL</name> =<init> <expr>(<name>byte</name>) '0'</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Link file type.
     */</comment>
    <decl_stmt><decl><type><name>byte</name></type>   <name>LF_LINK</name> =<init> <expr>(<name>byte</name>) '1'</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Symbolic link file type.
     */</comment>
    <decl_stmt><decl><type><name>byte</name></type>   <name>LF_SYMLINK</name> =<init> <expr>(<name>byte</name>) '2'</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Character device file type.
     */</comment>
    <decl_stmt><decl><type><name>byte</name></type>   <name>LF_CHR</name> =<init> <expr>(<name>byte</name>) '3'</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Block device file type.
     */</comment>
    <decl_stmt><decl><type><name>byte</name></type>   <name>LF_BLK</name> =<init> <expr>(<name>byte</name>) '4'</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Directory file type.
     */</comment>
    <decl_stmt><decl><type><name>byte</name></type>   <name>LF_DIR</name> =<init> <expr>(<name>byte</name>) '5'</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * FIFO (pipe) file type.
     */</comment>
    <decl_stmt><decl><type><name>byte</name></type>   <name>LF_FIFO</name> =<init> <expr>(<name>byte</name>) '6'</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Contiguous file type.
     */</comment>
    <decl_stmt><decl><type><name>byte</name></type>   <name>LF_CONTIG</name> =<init> <expr>(<name>byte</name>) '7'</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Identifies the *next* file on the tape as having a long linkname.
     */</comment>
    <decl_stmt><decl><type><name>byte</name></type> <name>LF_GNUTYPE_LONGLINK</name> =<init> <expr>(<name>byte</name>) 'K'</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Identifies the *next* file on the tape as having a long name.
     */</comment>
    <decl_stmt><decl><type><name>byte</name></type> <name>LF_GNUTYPE_LONGNAME</name> =<init> <expr>(<name>byte</name>) 'L'</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Sparse file type.
     */</comment>
    <decl_stmt><decl><type><name>byte</name></type> <name>LF_GNUTYPE_SPARSE</name> =<init> <expr>(<name>byte</name>) 'S'</expr></init></decl>;</decl_stmt>

    <comment type="line">// See "http://www.opengroup.org/onlinepubs/009695399/utilities/pax.html#tag_04_100_13_02"</comment>

    <comment type="javadoc">/**
     * Identifies the entry as a Pax extended header.
     */</comment>
    <decl_stmt><decl><type><name>byte</name></type> <name>LF_PAX_EXTENDED_HEADER_LC</name> =<init> <expr>(<name>byte</name>) 'x'</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Identifies the entry as a Pax extended header (SunOS tar -E).
     */</comment>
    <decl_stmt><decl><type><name>byte</name></type> <name>LF_PAX_EXTENDED_HEADER_UC</name> =<init> <expr>(<name>byte</name>) 'X'</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Identifies the entry as a Pax global extended header.
     */</comment>
    <decl_stmt><decl><type><name>byte</name></type> <name>LF_PAX_GLOBAL_EXTENDED_HEADER</name> =<init> <expr>(<name>byte</name>) 'g'</expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>String</name></type> <name>TMAGIC</name> =<init> <expr>"ustar"</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The magic tag representing a POSIX tar archive.
     */</comment>
    <decl_stmt><decl><type><name>String</name></type> <name>MAGIC_POSIX</name> =<init> <expr>"ustar\0"</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>VERSION_POSIX</name> =<init> <expr>"00"</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The magic tag representing a GNU tar archive.
     */</comment>
    <decl_stmt><decl><type><name>String</name></type> <name>GNU_TMAGIC</name> =<init> <expr>"ustar  "</expr></init></decl>;</decl_stmt>
    <comment type="line">// Appear to be two possible GNU versions</comment>
    <decl_stmt><decl><type><name>String</name></type> <name>VERSION_GNU_SPACE</name> =<init> <expr>" \0"</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name>String</name></type> <name>VERSION_GNU_ZERO</name>  =<init> <expr>"0\0"</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The name of the GNU tar entry which contains a long name.
     */</comment>
    <decl_stmt><decl><type><name>String</name></type> <name>GNU_LONGLINK</name> =<init> <expr>"././@LongLink"</expr></init></decl>;</decl_stmt>

}</block></class>
</unit>
