<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\taskdefs\optional\extension\LibFileSet.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>taskdefs</name>.<name>optional</name>.<name>extension</name></name>;</package>

<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>types</name>.<name>FileSet</name></name>;</import>

<comment type="javadoc">/**
 * LibFileSet represents a fileset containing libraries.
 * Asociated with the libraries is data pertaining to
 * how they are to be handled when building manifests.
 *
 */</comment>
<class><specifier>public</specifier> class <name>LibFileSet</name>
    <super><extends>extends <name>FileSet</name></extends></super> <block>{
    <comment type="javadoc">/**
     * Flag indicating whether should include the
     * "Implementation-URL" attribute in manifest.
     * Defaults to false.
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>includeURL</name></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Flag indicating whether should include the
     * "Implementation-*" attributes in manifest.
     * Defaults to false.
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>includeImpl</name></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * String that is the base URL for the librarys
     * when constructing the "Implementation-URL"
     * attribute. For instance setting the base to
     * "http://jakarta.apache.org/avalon/libs/" and then
     * including the library "excalibur-cli-1.0.jar" in the
     * fileset will result in the "Implementation-URL" attribute
     * being set to "http://jakarta.apache.org/avalon/libs/excalibur-cli-1.0.jar"
     *
     * Note this is only used if the library does not define
     * "Implementation-URL" itself.
     *
     * Note that this also implies includeURL=true
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>urlBase</name></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Flag indicating whether should include the
     * "Implementation-URL" attribute in manifest.
     * Defaults to false.
     *
     * @param includeURL the flag
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setIncludeUrl</name><parameter_list>(<param><decl><type><name>boolean</name></type> <name>includeURL</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>includeURL</name></name> = <name>includeURL</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * Flag indicating whether should include the
     * "Implementation-*" attributes in manifest.
     * Defaults to false.
     *
     * @param includeImpl the flag
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setIncludeImpl</name><parameter_list>(<param><decl><type><name>boolean</name></type> <name>includeImpl</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>includeImpl</name></name> = <name>includeImpl</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * Set the url base for fileset.
     *
     * @param urlBase the base url
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setUrlBase</name><parameter_list>(<param><decl><type><name>String</name></type> <name>urlBase</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>urlBase</name></name> = <name>urlBase</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * Get the includeURL flag.
     *
     * @return the includeURL flag.
     */</comment>
    <function><type><name>boolean</name></type> <name>isIncludeURL</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name>includeURL</name></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Get the includeImpl flag.
     *
     * @return the includeImpl flag.
     */</comment>
    <function><type><name>boolean</name></type> <name>isIncludeImpl</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name>includeImpl</name></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Get the urlbase.
     *
     * @return the urlbase.
     */</comment>
    <function><type><name>String</name></type> <name>getUrlBase</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name>urlBase</name></expr>;</return>
    }</block></function>
}</block></class>
</unit>
