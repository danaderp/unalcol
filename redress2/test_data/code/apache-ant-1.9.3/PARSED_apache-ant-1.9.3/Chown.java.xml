<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\taskdefs\optional\unix\Chown.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>

<comment type="block">/*
 * Since the initial version of this file was deveolped on the clock on
 * an NSF grant I should say the following boilerplate:
 *
 * This material is based upon work supported by the National Science
 * Foundaton under Grant No. EIA-0196404. Any opinions, findings, and
 * conclusions or recommendations expressed in this material are those
 * of the author and do not necessarily reflect the views of the
 * National Science Foundation.
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>taskdefs</name>.<name>optional</name>.<name>unix</name></name>;</package>

<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>BuildException</name></name>;</import>

<comment type="javadoc">/**
 * Chown equivalent for unix-like environments.
 *
 * @since Ant 1.6
 *
 * @ant.task category="filesystem"
 */</comment>
<class><specifier>public</specifier> class <name>Chown</name> <super><extends>extends <name>AbstractAccessTask</name></extends></super> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>haveOwner</name> =<init> <expr>false</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Chown task for setting file and directory permissions.
     */</comment>
    <constructor><specifier>public</specifier> <name>Chown</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name><name>super</name>.<name>setExecutable</name></name><argument_list>(<argument><expr>"chown"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="javadoc">/**
     * Set the owner attribute.
     *
     * @param owner    The new owner for the file(s) or directory(ies)
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setOwner</name><parameter_list>(<param><decl><type><name>String</name></type> <name>owner</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><call><name>createArg</name><argument_list>()</argument_list></call>.<call><name>setValue</name><argument_list>(<argument><expr><name>owner</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>haveOwner</name> = true</expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * Ensure that all the required arguments and other conditions have
     * been set.
     */</comment>
    <function><type><specifier>protected</specifier> <name>void</name></type> <name>checkConfiguration</name><parameter_list>()</parameter_list> <block>{
        <if>if <condition>(<expr>!<name>haveOwner</name></expr>)</condition><then> <block>{
            <throw>throw <expr>new <call><name>BuildException</name><argument_list>(<argument><expr>"Required attribute owner not set in"
                                     + " chown"</expr></argument>, <argument><expr><call><name>getLocation</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
        }</block></then></if>
        <expr_stmt><expr><call><name><name>super</name>.<name>checkConfiguration</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * We don't want to expose the executable attribute, so override it.
     *
     * @param e User supplied executable that we won't accept.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setExecutable</name><parameter_list>(<param><decl><type><name>String</name></type> <name>e</name></decl></param>)</parameter_list> <block>{
        <throw>throw <expr>new <call><name>BuildException</name><argument_list>(<argument><expr><call><name>getTaskType</name><argument_list>()</argument_list></call>
                                 + " doesn\'t support the executable"
                                 + " attribute"</expr></argument>, <argument><expr><call><name>getLocation</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
    }</block></function>
}</block></class>
</unit>
