<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\util\UnicodeUtil.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>util</name></name>;</package>

<comment type="javadoc">/**
 * Contains one helper method to create a backslash u escape
 *
 * @since Ant 1.8.3
 */</comment>
<class><specifier>public</specifier> class <name>UnicodeUtil</name> <block>{
	<comment type="javadoc">/**
	 * returns the unicode representation of a char without the leading backslash
	 * @param ch
	 * @return unicode representation of a char for property files
	 */</comment>
   <function><type><specifier>public</specifier> <specifier>static</specifier> <name>StringBuffer</name></type> <name>EscapeUnicode</name><parameter_list>(<param><decl><type><name>char</name></type> <name>ch</name></decl></param>)</parameter_list> <block>{
       <decl_stmt><decl><type><name>StringBuffer</name></type> <name>unicodeBuf</name> =<init> <expr>new <call><name>StringBuffer</name><argument_list>(<argument><expr>"u0000"</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <decl_stmt><decl><type><name>String</name></type> <name>s</name> =<init> <expr><call><name><name>Integer</name>.<name>toHexString</name></name><argument_list>(<argument><expr><name>ch</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       <comment type="line">//replace the last 0s by the chars contained in s</comment>
       <for>for (<init><decl><type><name>int</name></type> <name>i</name> =<init> <expr>0</expr></init></decl>;</init> <condition><expr><name>i</name> &lt; <call><name><name>s</name>.<name>length</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name>++</expr></incr>) <block>{
           <expr_stmt><expr><call><name><name>unicodeBuf</name>.<name>setCharAt</name></name><argument_list>(<argument><expr><call><name><name>unicodeBuf</name>.<name>length</name></name><argument_list>()</argument_list></call>
                                - <call><name><name>s</name>.<name>length</name></name><argument_list>()</argument_list></call> + <name>i</name></expr></argument>,
                                <argument><expr><call><name><name>s</name>.<name>charAt</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       }</block></for>
       <return>return <expr><name>unicodeBuf</name></expr>;</return>	   
   }</block></function>
}</block></class>
</unit>
