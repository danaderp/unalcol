<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\taskdefs\launcher\MacCommandLauncher.java"><package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>taskdefs</name>.<name>launcher</name></name>;</package>

<import>import <name><name>java</name>.<name>io</name>.<name>File</name></name>;</import>
<import>import <name><name>java</name>.<name>io</name>.<name>IOException</name></name>;</import>

<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>Project</name></name>;</import>

<comment type="javadoc">/**
 * A command launcher for Mac that uses a dodgy mechanism to change
 * working directory before launching commands.
 */</comment>
<class><specifier>public</specifier> class <name>MacCommandLauncher</name> <super><extends>extends <name>CommandLauncherProxy</name></extends></super> <block>{
    <constructor><specifier>public</specifier> <name>MacCommandLauncher</name><parameter_list>(<param><decl><type><name>CommandLauncher</name></type> <name>launcher</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>launcher</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="javadoc">/**
     * Launches the given command in a new process, in the given
     * working directory.
     * 
     * @param project
     *        the Ant project.
     * @param cmd
     *        the command line to execute as an array of strings.
     * @param env
     *        the environment to set as an array of strings.
     * @param workingDir
     *        working directory where the command should run.
     * @return the created Process.
     * @throws IOException
     *         forwarded from the exec method of the command launcher.
     */</comment>
    <function><type><annotation>@<name>Override</name></annotation>
    <specifier>public</specifier> <name>Process</name></type> <name>exec</name><parameter_list>(<param><decl><type><name>Project</name></type> <name>project</name></decl></param>, <param><decl><type><name><name>String</name><index>[]</index></name></type> <name>cmd</name></decl></param>, <param><decl><type><name><name>String</name><index>[]</index></name></type> <name>env</name></decl></param>,
                        <param><decl><type><name>File</name></type> <name>workingDir</name></decl></param>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{
        <if>if <condition>(<expr><name>workingDir</name> == <name>null</name></expr>)</condition><then> <block>{
            <return>return <expr><call><name>exec</name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><name>cmd</name></expr></argument>, <argument><expr><name>env</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></then></if>
        <expr_stmt><expr><call><name><name>System</name>.<name>getProperties</name></name><argument_list>()</argument_list></call>.<call><name>put</name><argument_list>(<argument><expr>"user.dir"</expr></argument>, <argument><expr><call><name><name>workingDir</name>.<name>getAbsolutePath</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <try>try <block>{
            <return>return <expr><call><name>exec</name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><name>cmd</name></expr></argument>, <argument><expr><name>env</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block>
        <finally>finally <block>{
            <expr_stmt><expr><call><name><name>System</name>.<name>getProperties</name></name><argument_list>()</argument_list></call>.<call><name>put</name><argument_list>(<argument><expr>"user.dir"</expr></argument>, <argument><expr><call><name><name>System</name>.<name>getProperty</name></name><argument_list>(<argument><expr>"user.dir"</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></finally></try>
    }</block></function>
}</block></class>
</unit>
