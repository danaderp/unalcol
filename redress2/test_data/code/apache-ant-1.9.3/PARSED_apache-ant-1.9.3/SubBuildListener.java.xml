<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\SubBuildListener.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name></name>;</package>

<comment type="javadoc">/**
 * Instances of classes that implement this interface can register
 * to be also notified when things happened during a subbuild.
 *
 * &lt;p&gt;A subbuild is a separate project instance created by the
 * &lt;code&gt;&amp;lt;ant&amp;gt;&lt;/code&gt; task family.  These project instances will
 * never fire the buildStarted and buildFinished events, but they will
 * fire subBuildStarted/ and subBuildFinished.  The main project
 * instance - the one created by running Ant in the first place - will
 * never invoke one of the methods of this interface.&lt;/p&gt;
 *
 * @see BuildEvent
 * @see Project#addBuildListener(BuildListener)
 *
 * @since Ant 1.6.2
 */</comment>
<class type="interface"><specifier>public</specifier> interface <name>SubBuildListener</name> <super><extends>extends <name>BuildListener</name></extends></super> <block>{

    <comment type="javadoc">/**
     * Signals that a subbuild has started. This event
     * is fired before any targets have started.
     *
     * @param event An event with any relevant extra information.
     *              Must not be &lt;code&gt;null&lt;/code&gt;.
     */</comment>
    <function_decl><type><name>void</name></type> <name>subBuildStarted</name><parameter_list>(<param><decl><type><name>BuildEvent</name></type> <name>event</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Signals that the last target has finished. This event
     * will still be fired if an error occurred during the build.
     *
     * @param event An event with any relevant extra information.
     *              Must not be &lt;code&gt;null&lt;/code&gt;.
     *
     * @see BuildEvent#getException()
     */</comment>
    <function_decl><type><name>void</name></type> <name>subBuildFinished</name><parameter_list>(<param><decl><type><name>BuildEvent</name></type> <name>event</name></decl></param>)</parameter_list>;</function_decl>
}</block></class>
</unit>
