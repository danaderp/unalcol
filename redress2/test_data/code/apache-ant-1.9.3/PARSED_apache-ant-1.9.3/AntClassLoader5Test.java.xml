<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\tests\junit\org\apache\tools\ant\loader\AntClassLoader5Test.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>loader</name></name>;</package>

<import>import <name><name>java</name>.<name>io</name>.<name>IOException</name></name>;</import>
<import>import <name><name>java</name>.<name>net</name>.<name>URL</name></name>;</import>
<import>import <name><name>java</name>.<name>util</name>.<name>Enumeration</name></name>;</import>
<import>import <name><name>junit</name>.<name>framework</name>.<name>TestCase</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>AntClassLoader</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>types</name>.<name>Path</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>util</name>.<name>CollectionUtils</name></name>;</import>

<class><specifier>public</specifier> class <name>AntClassLoader5Test</name> <super><extends>extends <name>TestCase</name></extends></super> <block>{

    <comment type="javadoc">/**
     * Asserts that getResources won't return resources that cannot be
     * seen by AntClassLoader but by ClassLoader.this.parent.
     *
     * @see https://issues.apache.org/bugzilla/show_bug.cgi?id=46752
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>testGetResources</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{
        <decl_stmt><decl><type><name>AntClassLoader</name></type> <name>acl</name> =<init> <expr>new <call><name>AntClassLoader5</name><argument_list>(<argument><expr>new <call><name>EmptyLoader</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>null</name></expr></argument>,
                                                 <argument><expr>new <call><name>Path</name><argument_list>(<argument><expr><name>null</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr>true</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>acl</name>.<name>getResource</name></name><argument_list>(<argument><expr>"META-INF/MANIFEST.MF"</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>acl</name>.<name>getResources</name></name><argument_list>(<argument><expr>"META-INF/MANIFEST.MF"</expr></argument>)</argument_list></call>.<call><name>hasMoreElements</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line">// double check using system classloader as parent</comment>
        <expr_stmt><expr><name>acl</name> = new <call><name>AntClassLoader5</name><argument_list>(<argument><expr><name>null</name></expr></argument>, <argument><expr><name>null</name></expr></argument>, <argument><expr>new <call><name>Path</name><argument_list>(<argument><expr><name>null</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><call><name><name>acl</name>.<name>getResource</name></name><argument_list>(<argument><expr>"META-INF/MANIFEST.MF"</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>acl</name>.<name>getResources</name></name><argument_list>(<argument><expr>"META-INF/MANIFEST.MF"</expr></argument>)</argument_list></call>.<call><name>hasMoreElements</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testGetResourcesUsingFactory</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{
        <decl_stmt><decl><type><name>AntClassLoader</name></type> <name>acl</name> =<init>
            <expr><call><name><name>AntClassLoader</name>.<name>newAntClassLoader</name></name><argument_list>(<argument><expr>new <call><name>EmptyLoader</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>null</name></expr></argument>,
                                             <argument><expr>new <call><name>Path</name><argument_list>(<argument><expr><name>null</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr>true</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>assertNull</name><argument_list>(<argument><expr><call><name><name>acl</name>.<name>getResource</name></name><argument_list>(<argument><expr>"META-INF/MANIFEST.MF"</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name><name>acl</name>.<name>getResources</name></name><argument_list>(<argument><expr>"META-INF/MANIFEST.MF"</expr></argument>)</argument_list></call>.<call><name>hasMoreElements</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <class><specifier>private</specifier> <specifier>static</specifier> class <name>EmptyLoader</name> <super><extends>extends <name>ClassLoader</name></extends></super> <block>{
        <function><type><specifier>public</specifier> <name>URL</name></type> <name>getResource</name><parameter_list>(<param><decl><type><name>String</name></type> <name>n</name></decl></param>)</parameter_list> <block>{
            <return>return <expr><name>null</name></expr>;</return>
        }</block></function>
        <function><type><specifier>public</specifier> <name>Enumeration</name></type> <name>getResources</name><parameter_list>(<param><decl><type><name>String</name></type> <name>n</name></decl></param>)</parameter_list> <block>{
            <return>return <expr>new <call><name><name>CollectionUtils</name>.<name>EmptyEnumeration</name></name><argument_list>()</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>
}</block></class>
</unit>
