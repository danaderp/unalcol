<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\zip\ZipConstants.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>zip</name></name>;</package>

<comment type="javadoc">/**
 * Various constants used throughout the package.
 */</comment>
<class><specifier>final</specifier> class <name>ZipConstants</name> <block>{
    <constructor><specifier>private</specifier> <name>ZipConstants</name><parameter_list>()</parameter_list> <block>{ }</block></constructor>

    <comment type="javadoc">/** Masks last eight bits */</comment>
    <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>BYTE_MASK</name> =<init> <expr>0xFF</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/** length of a ZipShort in bytes */</comment>
    <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>SHORT</name> =<init> <expr>2</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/** length of a ZipLong in bytes */</comment>
    <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>WORD</name> =<init> <expr>4</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/** length of a ZipEightByteInteger in bytes */</comment>
    <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>DWORD</name> =<init> <expr>8</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/** Initial ZIP specification version */</comment>
    <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>INITIAL_VERSION</name> =<init> <expr>10</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/** ZIP specification version that introduced data descriptor method */</comment>
    <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>DATA_DESCRIPTOR_MIN_VERSION</name> =<init> <expr>20</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/** ZIP specification version that introduced ZIP64 */</comment>
    <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>ZIP64_MIN_VERSION</name> =<init> <expr>45</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Value stored in two-byte size and similar fields if ZIP64
     * extensions are used.
     */</comment>
    <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>ZIP64_MAGIC_SHORT</name> =<init> <expr>0xFFFF</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Value stored in four-byte size and similar fields if ZIP64
     * extensions are used.
     */</comment>
    <decl_stmt><decl><type><specifier>static</specifier> <specifier>final</specifier> <name>long</name></type> <name>ZIP64_MAGIC</name> =<init> <expr>0xFFFFFFFFL</expr></init></decl>;</decl_stmt>

}</block></class>
</unit>
