<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\taskdefs\rmic\RmicAdapter.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>taskdefs</name>.<name>rmic</name></name>;</package>

<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>BuildException</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>taskdefs</name>.<name>Rmic</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>types</name>.<name>Path</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>util</name>.<name>FileNameMapper</name></name>;</import>

<comment type="javadoc">/**
 * The interface that all rmic adapters must adhere to.
 *
 * &lt;p&gt;A rmic adapter is an adapter that interprets the rmic's
 * parameters in preperation to be passed off to the compiler this
 * adapter represents.  As all the necessary values are stored in the
 * Rmic task itself, the only thing all adapters need is the rmic
 * task, the execute command and a parameterless constructor (for
 * reflection).&lt;/p&gt;
 *
 * @since Ant 1.4
 */</comment>

<class type="interface"><specifier>public</specifier> interface <name>RmicAdapter</name> <block>{

    <comment type="javadoc">/**
     * Sets the rmic attributes, which are stored in the Rmic task.
     * @param attributes the rmic attributes to use
     */</comment>
    <function_decl><type><name>void</name></type> <name>setRmic</name><parameter_list>(<param><decl><type><name>Rmic</name></type> <name>attributes</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Call the rmic compiler.
     *
     * @return true if has the compilation been successful
     * @throws BuildException on error
     */</comment>
    <function_decl><type><name>boolean</name></type> <name>execute</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>BuildException</name></expr></argument></throws>;</function_decl>

    <comment type="javadoc">/**
     * Maps source class files to the files generated by this rmic
     * implementation.
     * @return the filename mapper used by this implementation
     */</comment>
    <function_decl><type><name>FileNameMapper</name></type> <name>getMapper</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * The CLASSPATH this rmic process will use.
     * @return the classpath this rmic process will use
     */</comment>
    <function_decl><type><name>Path</name></type> <name>getClasspath</name><parameter_list>()</parameter_list>;</function_decl>
}</block></class>
</unit>
