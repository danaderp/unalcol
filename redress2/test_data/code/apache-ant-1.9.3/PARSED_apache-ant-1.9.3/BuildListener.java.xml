<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\BuildListener.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name></name>;</package>

<import>import <name><name>java</name>.<name>util</name>.<name>EventListener</name></name>;</import>

<comment type="javadoc">/**
 * Instances of classes that implement this interface can register
 * to be notified when things happened during a build.
 *
 * @see BuildEvent
 * @see Project#addBuildListener(BuildListener)
 *
 */</comment>
<class type="interface"><specifier>public</specifier> interface <name>BuildListener</name> <super><extends>extends <name>EventListener</name></extends></super> <block>{

    <comment type="javadoc">/**
     * Signals that a build has started. This event
     * is fired before any targets have started.
     *
     * &lt;p&gt;This event is fired before the project instance is fully
     * configured.  In particular no properties have been set and the
     * project may not know its name or default target, yet.&lt;/p&gt;
     * 
     * @param event An event with any relevant extra information.
     *              Must not be &lt;code&gt;null&lt;/code&gt;.
     */</comment>
    <function_decl><type><name>void</name></type> <name>buildStarted</name><parameter_list>(<param><decl><type><name>BuildEvent</name></type> <name>event</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Signals that the last target has finished. This event
     * will still be fired if an error occurred during the build.
     *
     * @param event An event with any relevant extra information.
     *              Must not be &lt;code&gt;null&lt;/code&gt;.
     *
     * @see BuildEvent#getException()
     */</comment>
    <function_decl><type><name>void</name></type> <name>buildFinished</name><parameter_list>(<param><decl><type><name>BuildEvent</name></type> <name>event</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Signals that a target is starting.
     *
     * @param event An event with any relevant extra information.
     *              Must not be &lt;code&gt;null&lt;/code&gt;.
     *
     * @see BuildEvent#getTarget()
     */</comment>
    <function_decl><type><name>void</name></type> <name>targetStarted</name><parameter_list>(<param><decl><type><name>BuildEvent</name></type> <name>event</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Signals that a target has finished. This event will
     * still be fired if an error occurred during the build.
     *
     * @param event An event with any relevant extra information.
     *              Must not be &lt;code&gt;null&lt;/code&gt;.
     *
     * @see BuildEvent#getException()
     */</comment>
    <function_decl><type><name>void</name></type> <name>targetFinished</name><parameter_list>(<param><decl><type><name>BuildEvent</name></type> <name>event</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Signals that a task is starting.
     *
     * @param event An event with any relevant extra information.
     *              Must not be &lt;code&gt;null&lt;/code&gt;.
     *
     * @see BuildEvent#getTask()
     */</comment>
    <function_decl><type><name>void</name></type> <name>taskStarted</name><parameter_list>(<param><decl><type><name>BuildEvent</name></type> <name>event</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Signals that a task has finished. This event will still
     * be fired if an error occurred during the build.
     *
     * @param event An event with any relevant extra information.
     *              Must not be &lt;code&gt;null&lt;/code&gt;.
     *
     * @see BuildEvent#getException()
     */</comment>
    <function_decl><type><name>void</name></type> <name>taskFinished</name><parameter_list>(<param><decl><type><name>BuildEvent</name></type> <name>event</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Signals a message logging event.
     *
     * @param event An event with any relevant extra information.
     *              Must not be &lt;code&gt;null&lt;/code&gt;.
     *
     * @see BuildEvent#getMessage()
     * @see BuildEvent#getException()
     * @see BuildEvent#getPriority()
     */</comment>
    <function_decl><type><name>void</name></type> <name>messageLogged</name><parameter_list>(<param><decl><type><name>BuildEvent</name></type> <name>event</name></decl></param>)</parameter_list>;</function_decl>
}</block></class>
</unit>
