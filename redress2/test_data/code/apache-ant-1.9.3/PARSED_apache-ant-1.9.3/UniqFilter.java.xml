<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\filters\UniqFilter.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>filters</name></name>;</package>

<comment type="javadoc">/**
 * Like the Unix uniq(1) command, only returns tokens that are
 * different from their ancestor token.
 *
 * &lt;p&gt;This filter is probably most useful if used together with a
 * sortfilter.&lt;/p&gt;
 *
 * @since Ant 1.8.0
 */</comment>
<class><specifier>public</specifier> class <name>UniqFilter</name> <super><extends>extends <name>TokenFilter</name>.<name>ChainableReaderFilter</name></extends></super> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>lastLine</name> =<init> <expr><name>null</name></expr></init></decl>;</decl_stmt>

    <function><type><specifier>public</specifier> <name>String</name></type> <name>filter</name><parameter_list>(<param><decl><type><name>String</name></type> <name>string</name></decl></param>)</parameter_list> <block>{
        <return>return <expr><name>lastLine</name> == <name>null</name> || !<call><name><name>lastLine</name>.<name>equals</name></name><argument_list>(<argument><expr><name>string</name></expr></argument>)</argument_list></call>
            ? (<name>lastLine</name> = <name>string</name>) : <name>null</name></expr>;</return>
    }</block></function>
}</block></class>
</unit>
