<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\property\PropertyExpander.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>property</name></name>;</package>

<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>PropertyHelper</name></name>;</import>

<import>import <name><name>java</name>.<name>text</name>.<name>ParsePosition</name></name>;</import>

<comment type="javadoc">/**
 * Responsible for locating a property reference inside a String.
 * @since Ant 1.8.0
 */</comment>
<class type="interface"><specifier>public</specifier> interface <name>PropertyExpander</name> <super><extends>extends <name>PropertyHelper</name>.<name>Delegate</name></extends></super> <block>{

    <comment type="javadoc">/**
     * Determine whether there is a property reference at the current
     * ParsePosition and return its name (or null if there is none).
     *
     * &lt;p&gt;Implementations should advance the ParsePosition to the last
     * character that makes up the property reference.  E.g. the
     * default implementation would return &lt;code&gt;"foo"&lt;/code&gt; for
     * &lt;code&gt;${foo}&lt;/code&gt; and advance the ParsePosition to the
     * &lt;code&gt;}&lt;/code&gt; character.&lt;/p&gt;
     *
     * @param s the String to parse.
     * @param pos the ParsePosition in use, the location is expected
     * to be modified if a property reference has been found (and may
     * even be modified if no reference has been found).
     * @param parseNextProperty provides access to the Project and may
     * be used to look up property values.
     * @return property name if any, else &lt;code&gt;null&lt;/code&gt;.
     */</comment>
    <function_decl><type><name>String</name></type> <name>parsePropertyName</name><parameter_list>(<param><decl><type><name>String</name></type> <name>s</name></decl></param>, <param><decl><type><name>ParsePosition</name></type> <name>pos</name></decl></param>,
                             <param><decl><type><name>ParseNextProperty</name></type> <name>parseNextProperty</name></decl></param>)</parameter_list>;</function_decl>
}</block></class>

</unit>
