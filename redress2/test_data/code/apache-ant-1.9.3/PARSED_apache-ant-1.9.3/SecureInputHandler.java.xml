<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\input\SecureInputHandler.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>input</name></name>;</package>

<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>BuildException</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>util</name>.<name>ReflectUtil</name></name>;</import>

<comment type="javadoc">/**
 * Prompts and requests input.  May loop until a valid input has
 * been entered. Doesn't echo input (requires Java6). If Java6 is not
 * available, falls back to the DefaultHandler (insecure).
 * @since Ant 1.7.1
 */</comment>
<class><specifier>public</specifier> class <name>SecureInputHandler</name> <super><extends>extends <name>DefaultInputHandler</name></extends></super> <block>{

    <comment type="javadoc">/**
     * Default no-args constructor
     */</comment>
    <constructor><specifier>public</specifier> <name>SecureInputHandler</name><parameter_list>()</parameter_list> <block>{
    }</block></constructor>

    <comment type="javadoc">/**
     * Handle the input
     * @param request the request to handle
     * @throws BuildException if not possible to read from console
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>handleInput</name><parameter_list>(<param><decl><type><name>InputRequest</name></type> <name>request</name></decl></param>)</parameter_list> <throws>throws <argument><expr><name>BuildException</name></expr></argument></throws> <block>{
        <decl_stmt><decl><type><name>String</name></type> <name>prompt</name> =<init> <expr><call><name>getPrompt</name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <try>try <block>{
            <decl_stmt><decl><type><name>Object</name></type> <name>console</name> =<init> <expr><call><name><name>ReflectUtil</name>.<name>invokeStatic</name></name><argument_list>(<argument><expr><name><name>System</name>.<name><name/></name></name>class</expr></argument>, <argument><expr>"console"</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <do>do <block>{
                <decl_stmt><decl><type><name>char</name><index>[]</index></type> <name>input</name> =<init> <expr>(<name><name>char</name><index>[]</index></name>) <call><name><name>ReflectUtil</name>.<name>invoke</name></name><argument_list>(
                    <argument><expr><name>console</name></expr></argument>, <argument><expr>"readPassword"</expr></argument>, <argument><expr><name><name>String</name>.<name><name/></name></name>class</expr></argument>, <argument><expr><name>prompt</name></expr></argument>,
                    <argument><expr><name><name>Object</name><index>[]</index></name>.class</expr></argument>, <argument><expr>(<name><name>Object</name><index>[]</index></name>) <name>null</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name>request</name>.<name>setInput</name></name><argument_list>(<argument><expr>new <call><name>String</name><argument_list>(<argument><expr><name>input</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="block">/* for security zero char array after retrieving value */</comment>
                <expr_stmt><expr><call><name><name>java</name>.<name>util</name>.<name>Arrays</name>.<name>fill</name></name><argument_list>(<argument><expr><name>input</name></expr></argument>, <argument><expr>' '</expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block> while <condition>(<expr>!<call><name><name>request</name>.<name>isInputValid</name></name><argument_list>()</argument_list></call></expr>)</condition>;</do>
        }</block> <catch>catch (<param><decl><type><name>Exception</name></type> <name>e</name></decl></param>) <block>{
            <comment type="block">/* Java6 not present use default handler */</comment>
            <expr_stmt><expr><call><name><name>super</name>.<name>handleInput</name></name><argument_list>(<argument><expr><name>request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></catch></try>
    }</block></function>
}</block></class>
</unit>
