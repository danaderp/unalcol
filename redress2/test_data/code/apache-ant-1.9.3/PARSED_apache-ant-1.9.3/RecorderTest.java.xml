<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\tests\junit\org\apache\tools\ant\taskdefs\RecorderTest.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>taskdefs</name></name>;</package>

<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>BuildFileTest</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>util</name>.<name>FileUtils</name></name>;</import>

<import>import <name><name>java</name>.<name>io</name>.<name>IOException</name></name>;</import>

<comment type="javadoc">/**
 */</comment>
<class><specifier>public</specifier> class <name>RecorderTest</name> <super><extends>extends <name>BuildFileTest</name></extends></super> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>REC_IN</name> =<init> <expr>"recorder/"</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>REC_DIR</name> =<init> <expr>"recorder-out/"</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/** Utilities used for file operations */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>FileUtils</name></type> <name>FILE_UTILS</name> =<init> <expr><call><name><name>FileUtils</name>.<name>getFileUtils</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <constructor><specifier>public</specifier> <name>RecorderTest</name><parameter_list>(<param><decl><type><name>String</name></type> <name>name</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>setUp</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>configureProject</name><argument_list>(<argument><expr>"src/etc/testcases/taskdefs/recorder.xml"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>executeTarget</name><argument_list>(<argument><expr>"prepare"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>tearDown</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>executeTarget</name><argument_list>(<argument><expr>"cleanup"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testNoAppend</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{
        <expr_stmt><expr><call><name>executeTarget</name><argument_list>(<argument><expr>"noappend"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>FILE_UTILS</name>
                   .<name>contentEquals</name></name><argument_list>(<argument><expr><call><name><name>project</name>.<name>resolveFile</name></name><argument_list>(<argument><expr><name>REC_IN</name>
                                                      + "rectest1.result"</expr></argument>)</argument_list></call></expr></argument>,
                                  <argument><expr><call><name><name>project</name>.<name>resolveFile</name></name><argument_list>(<argument><expr><name>REC_DIR</name>
                                                      + "rectest1.log"</expr></argument>)</argument_list></call></expr></argument>, <argument><expr>true</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testAppend</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{
        <expr_stmt><expr><call><name>executeTarget</name><argument_list>(<argument><expr>"append"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>FILE_UTILS</name>
                   .<name>contentEquals</name></name><argument_list>(<argument><expr><call><name><name>project</name>.<name>resolveFile</name></name><argument_list>(<argument><expr><name>REC_IN</name>
                                                      + "rectest2.result"</expr></argument>)</argument_list></call></expr></argument>,
                                  <argument><expr><call><name><name>project</name>.<name>resolveFile</name></name><argument_list>(<argument><expr><name>REC_DIR</name>
                                                      + "rectest2.log"</expr></argument>)</argument_list></call></expr></argument>, <argument><expr>true</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testRestart</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{
        <expr_stmt><expr><call><name>executeTarget</name><argument_list>(<argument><expr>"restart"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>FILE_UTILS</name>
                   .<name>contentEquals</name></name><argument_list>(<argument><expr><call><name><name>project</name>.<name>resolveFile</name></name><argument_list>(<argument><expr><name>REC_IN</name>
                                                      + "rectest3.result"</expr></argument>)</argument_list></call></expr></argument>,
                                  <argument><expr><call><name><name>project</name>.<name>resolveFile</name></name><argument_list>(<argument><expr><name>REC_DIR</name>
                                                      + "rectest3.log"</expr></argument>)</argument_list></call></expr></argument>, <argument><expr>true</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testDeleteRestart</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{
        <expr_stmt><expr><call><name>executeTarget</name><argument_list>(<argument><expr>"deleterestart"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>FILE_UTILS</name>
                   .<name>contentEquals</name></name><argument_list>(<argument><expr><call><name><name>project</name>.<name>resolveFile</name></name><argument_list>(<argument><expr><name>REC_IN</name>
                                                      + "rectest4.result"</expr></argument>)</argument_list></call></expr></argument>,
                                  <argument><expr><call><name><name>project</name>.<name>resolveFile</name></name><argument_list>(<argument><expr><name>REC_DIR</name>
                                                      + "rectest4.log"</expr></argument>)</argument_list></call></expr></argument>, <argument><expr>true</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>testSubBuild</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{
        <expr_stmt><expr><call><name>executeTarget</name><argument_list>(<argument><expr>"subbuild"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>FILE_UTILS</name>
                   .<name>contentEquals</name></name><argument_list>(<argument><expr><call><name><name>project</name>.<name>resolveFile</name></name><argument_list>(<argument><expr><name>REC_IN</name>
                                                      + "rectest5.result"</expr></argument>)</argument_list></call></expr></argument>,
                                  <argument><expr><call><name><name>project</name>.<name>resolveFile</name></name><argument_list>(<argument><expr><name>REC_DIR</name>
                                                      + "rectest5.log"</expr></argument>)</argument_list></call></expr></argument>, <argument><expr>true</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name><name>FILE_UTILS</name>
                   .<name>contentEquals</name></name><argument_list>(<argument><expr><call><name><name>project</name>.<name>resolveFile</name></name><argument_list>(<argument><expr><name>REC_IN</name>
                                                      + "rectest6.result"</expr></argument>)</argument_list></call></expr></argument>,
                                  <argument><expr><call><name><name>project</name>.<name>resolveFile</name></name><argument_list>(<argument><expr><name>REC_DIR</name>
                                                      + "rectest6.log"</expr></argument>)</argument_list></call></expr></argument>, <argument><expr>true</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                                      
    }</block></function>

}</block></class>
</unit>
