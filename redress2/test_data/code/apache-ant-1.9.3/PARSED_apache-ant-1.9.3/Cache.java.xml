<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\types\selectors\modifiedselector\Cache.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>types</name>.<name>selectors</name>.<name>modifiedselector</name></name>;</package>


<import>import <name><name>java</name>.<name>util</name>.<name>Iterator</name></name>;</import>


<comment type="javadoc">/**
 * A Cache let the user store key-value-pairs in a permanent manner and access
 * them.
 * It is possible that a client uses get() before load() therefore the
 * implementation must ensure that no error occurred because of the wrong
 * &lt;i&gt;order&lt;/i&gt;.
 * The implementing class should implement a useful toString() method.
 *
 * @version 2003-09-13
 * @since  Ant 1.6
 */</comment>
<class type="interface"><specifier>public</specifier> interface <name>Cache</name> <block>{

    <comment type="javadoc">/**
     * Checks its prerequisites.
     * @return &lt;i&gt;true&lt;/i&gt; if all is ok, otherwise &lt;i&gt;false&lt;/i&gt;.
     */</comment>
    <function_decl><type><name>boolean</name></type> <name>isValid</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="javadoc">/** Deletes the cache. If file based the file has to be deleted also. */</comment>
    <function_decl><type><name>void</name></type> <name>delete</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="javadoc">/** Loads the cache, must handle not existing cache. */</comment>
    <function_decl><type><name>void</name></type> <name>load</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="javadoc">/** Saves modification of the cache. */</comment>
    <function_decl><type><name>void</name></type> <name>save</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Returns a value for a given key from the cache.
     * @param key the key
     * @return the stored value
     */</comment>
    <function_decl><type><name>Object</name></type> <name>get</name><parameter_list>(<param><decl><type><name>Object</name></type> <name>key</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Saves a key-value-pair in the cache.
     * @param key the key
     * @param value the value
     */</comment>
    <function_decl><type><name>void</name></type> <name>put</name><parameter_list>(<param><decl><type><name>Object</name></type> <name>key</name></decl></param>, <param><decl><type><name>Object</name></type> <name>value</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Returns an iterator over the keys in the cache.
     * @return An iterator over the keys.
     */</comment>
    <function_decl><type><name><name>Iterator</name><argument_list>&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>iterator</name><parameter_list>()</parameter_list>;</function_decl>
}</block></class>
</unit>
