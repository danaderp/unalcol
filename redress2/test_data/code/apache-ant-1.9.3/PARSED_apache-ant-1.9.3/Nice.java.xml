<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\taskdefs\Nice.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>taskdefs</name></name>;</package>

<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>Task</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>BuildException</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>Project</name></name>;</import>

<comment type="javadoc">/**
 * A task to provide "nice-ness" to the current thread, and/or to
 * query the current value.
 * Examples:
 * &lt;pre&gt; &amp;lt;nice currentPriority="current.value" &amp;gt;&lt;/pre&gt;&lt;p&gt;
 * Set &lt;code&gt;currentPriority&lt;/code&gt; to the current priority
 * &lt;pre&gt; &amp;lt;nice newPriority="10" &amp;gt;&lt;/pre&gt;&lt;p&gt;
 * Raise the priority of the build process (But not forked programs)
 * &lt;pre&gt; &amp;lt;nice currentPriority="old" newPriority="3" &amp;gt;&lt;/pre&gt;&lt;p&gt;
 * Lower the priority of the build process (But not forked programs), and save
 * the old value to the property &lt;code&gt;old&lt;/code&gt;.
 *
 * @ant.task name="nice" category="control"
 */</comment>
<class><specifier>public</specifier> class <name>Nice</name> <super><extends>extends <name>Task</name></extends></super> <block>{

    <comment type="javadoc">/**
     * the new priority
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>Integer</name></type> <name>newPriority</name></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * the current priority
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>currentPriority</name></decl>;</decl_stmt>



    <comment type="javadoc">/**
     * Execute the task
     * @exception BuildException if something goes wrong with the build
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>execute</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>BuildException</name></expr></argument></throws> <block>{

        <decl_stmt><decl><type><name>Thread</name></type> <name>self</name> =<init> <expr><call><name><name>Thread</name>.<name>currentThread</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>priority</name> =<init> <expr><call><name><name>self</name>.<name>getPriority</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><name>currentPriority</name> != <name>null</name></expr>)</condition><then> <block>{
            <decl_stmt><decl><type><name>String</name></type> <name>current</name> =<init> <expr><call><name><name>Integer</name>.<name>toString</name></name><argument_list>(<argument><expr><name>priority</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name>getProject</name><argument_list>()</argument_list></call>.<call><name>setNewProperty</name><argument_list>(<argument><expr><name>currentPriority</name></expr></argument>, <argument><expr><name>current</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <comment type="line">//if there is a new priority, and it is different, change it</comment>
        <if>if <condition>(<expr><name>newPriority</name> != <name>null</name> &amp;&amp; <name>priority</name> != <call><name><name>newPriority</name>.<name>intValue</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
            <try>try <block>{
                <expr_stmt><expr><call><name><name>self</name>.<name>setPriority</name></name><argument_list>(<argument><expr><call><name><name>newPriority</name>.<name>intValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block> <catch>catch (<param><decl><type><name>SecurityException</name></type> <name>e</name></decl></param>) <block>{
                <comment type="line">//catch permissions denial and keep going</comment>
                <expr_stmt><expr><call><name>log</name><argument_list>(<argument><expr>"Unable to set new priority -a security manager is in the way"</expr></argument>,
                        <argument><expr><name><name>Project</name>.<name>MSG_WARN</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch> <catch>catch (<param><decl><type><name>IllegalArgumentException</name></type> <name>iae</name></decl></param>) <block>{
                <throw>throw <expr>new <call><name>BuildException</name><argument_list>(<argument><expr>"Priority out of range"</expr></argument>, <argument><expr><name>iae</name></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></catch></try>
        }</block></then></if>
    }</block></function>

    <comment type="javadoc">/**
     * The name of a property to set to the value of the current
     * thread priority. Optional
     * @param currentPriority the property name.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setCurrentPriority</name><parameter_list>(<param><decl><type><name>String</name></type> <name>currentPriority</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>currentPriority</name></name> = <name>currentPriority</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * the new priority, in the range 1-10.
     * @param newPriority the new priority value.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setNewPriority</name><parameter_list>(<param><decl><type><name>int</name></type> <name>newPriority</name></decl></param>)</parameter_list> <block>{
        <if>if <condition>(<expr><name>newPriority</name> &lt; <name><name>Thread</name>.<name>MIN_PRIORITY</name></name> || <name>newPriority</name> &gt; <name><name>Thread</name>.<name>MAX_PRIORITY</name></name></expr>)</condition><then> <block>{
            <throw>throw <expr>new <call><name>BuildException</name><argument_list>(<argument><expr>"The thread priority is out of the range 1-10"</expr></argument>)</argument_list></call></expr>;</throw>
        }</block></then></if>
        <expr_stmt><expr><name><name>this</name>.<name>newPriority</name></name> = new <call><name>Integer</name><argument_list>(<argument><expr><name>newPriority</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

}</block></class>
</unit>
