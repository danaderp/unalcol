<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\types\resources\LogOutputResource.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>types</name>.<name>resources</name></name>;</package>

<import>import <name><name>java</name>.<name>io</name>.<name>IOException</name></name>;</import>
<import>import <name><name>java</name>.<name>io</name>.<name>OutputStream</name></name>;</import>

<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>ProjectComponent</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>taskdefs</name>.<name>LogOutputStream</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>types</name>.<name>Resource</name></name>;</import>

<comment type="javadoc">/**
 * Output-only Resource that always appends to Ant's log.
 * @since Ant 1.8
 */</comment>
<class><specifier>public</specifier> class <name>LogOutputResource</name> <super><extends>extends <name>Resource</name></extends> <implements>implements <name>Appendable</name></implements></super> <block>{
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>NAME</name> =<init> <expr>"[Ant log]"</expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>private</specifier> <name>LogOutputStream</name></type> <name>outputStream</name></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Create a new LogOutputResource.
     * @param managingComponent
     */</comment>
    <constructor><specifier>public</specifier> <name>LogOutputResource</name><parameter_list>(<param><decl><type><name>ProjectComponent</name></type> <name>managingComponent</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>outputStream</name> = new <call><name>LogOutputStream</name><argument_list>(<argument><expr><name>managingComponent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="javadoc">/**
     * Create a new LogOutputResource.
     * @param managingComponent owning log content
     * @param level log level
     */</comment>
    <constructor><specifier>public</specifier> <name>LogOutputResource</name><parameter_list>(<param><decl><type><name>ProjectComponent</name></type> <name>managingComponent</name></decl></param>, <param><decl><type><name>int</name></type> <name>level</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>outputStream</name> = new <call><name>LogOutputStream</name><argument_list>(<argument><expr><name>managingComponent</name></expr></argument>, <argument><expr><name>level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="javadoc">/**
     * {@inheritDoc}
     */</comment>
    <function><type><specifier>public</specifier> <name>OutputStream</name></type> <name>getAppendOutputStream</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{
        <return>return <expr><name>outputStream</name></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * {@inheritDoc}
     */</comment>
    <function><type><specifier>public</specifier> <name>OutputStream</name></type> <name>getOutputStream</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{
        <return>return <expr><name>outputStream</name></expr>;</return>
    }</block></function>
}</block></class>
</unit>
