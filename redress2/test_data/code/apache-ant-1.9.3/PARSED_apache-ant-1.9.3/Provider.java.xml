<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\types\spi\Provider.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>types</name>.<name>spi</name></name>;</package>

<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>ProjectComponent</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>BuildException</name></name>;</import>

<comment type="javadoc">/**
 * ANT Jar-Task SPI extension
 * This class corresponds to the nested element
 * &amp;lt;provider type="type"&amp;gt; in the &amp;lt;service type=""&amp;gt;
 * nested element of the jar task.
 * @see &lt;a href="http://issues.apache.org/bugzilla/show_bug.cgi?id=31520"&gt;
 * http://issues.apache.org/bugzilla/show_bug.cgi?id=31520&lt;/a&gt;
 */</comment>
<class><specifier>public</specifier> class <name>Provider</name> <super><extends>extends <name>ProjectComponent</name></extends></super> <block>{
    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>type</name></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * @return the class name for
     */</comment>
    <function><type><specifier>public</specifier> <name>String</name></type> <name>getClassName</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name>type</name></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Set the provider classname.
     * @param type the value to set.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setClassName</name><parameter_list>(<param><decl><type><name>String</name></type> <name>type</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>type</name></name> = <name>type</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * Check if the component has been configured correctly.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>check</name><parameter_list>()</parameter_list> <block>{
        <if>if <condition>(<expr><name>type</name> == <name>null</name></expr>)</condition><then> <block>{
            <throw>throw <expr>new <call><name>BuildException</name><argument_list>(
                <argument><expr>"classname attribute must be set for provider element"</expr></argument>,
                <argument><expr><call><name>getLocation</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
        }</block></then></if>
        <if>if <condition>(<expr><call><name><name>type</name>.<name>length</name></name><argument_list>()</argument_list></call> == 0</expr>)</condition><then> <block>{
            <throw>throw <expr>new <call><name>BuildException</name><argument_list>(
                <argument><expr>"Invalid empty classname"</expr></argument>, <argument><expr><call><name>getLocation</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
        }</block></then></if>
    }</block></function>
}</block></class>
</unit>
