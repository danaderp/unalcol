<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\taskdefs\optional\net\SetProxy.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>taskdefs</name>.<name>optional</name>.<name>net</name></name>;</package>

<import>import <name><name>java</name>.<name>net</name>.<name>Authenticator</name></name>;</import>
<import>import <name><name>java</name>.<name>net</name>.<name>PasswordAuthentication</name></name>;</import>
<import>import <name><name>java</name>.<name>util</name>.<name>Properties</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>BuildException</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>Project</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>Task</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>util</name>.<name>ProxySetup</name></name>;</import>

<comment type="javadoc">/**
 * Sets Java's web proxy properties, so that tasks and code run in
 * the same JVM can have through-the-firewall access to remote web sites,
 * and remote ftp sites.
 * You can nominate an http and ftp proxy, or a socks server, reset the server
 * settings, or do nothing at all.
 * &lt;p&gt;
 * Examples
 * &lt;pre&gt;&amp;lt;setproxy/&amp;gt;&lt;/pre&gt;
 * do nothing
 * &lt;pre&gt;&amp;lt;setproxy proxyhost="firewall"/&amp;gt;&lt;/pre&gt;
 * set the proxy to firewall:80
 * &lt;pre&gt;&amp;lt;setproxy proxyhost="firewall" proxyport="81"/&amp;gt;&lt;/pre&gt;
 * set the proxy to firewall:81
 * &lt;pre&gt;&amp;lt;setproxy proxyhost=""/&amp;gt;&lt;/pre&gt;
 * stop using the http proxy; don't change the socks settings
 * &lt;pre&gt;&amp;lt;setproxy socksproxyhost="socksy"/&amp;gt;&lt;/pre&gt;
 * use socks via socksy:1080
 * &lt;pre&gt;&amp;lt;setproxy socksproxyhost=""/&amp;gt;&lt;/pre&gt;
 * stop using the socks server.
 * &lt;p&gt;
 * You can set a username and password for http with the &lt;tt&gt;proxyHost&lt;/tt&gt;
 * and &lt;tt&gt;proxyPassword&lt;/tt&gt; attributes. These can also be
 * used against SOCKS5 servers.
 * &lt;/p&gt;
 * @see &lt;a href="http://java.sun.com/j2se/1.5.0/docs/guide/net/properties.html"&gt;
 *  java 1.5 network property list&lt;/a&gt;
  *@since       Ant 1.5
 * @ant.task category="network"
 */</comment>
<class><specifier>public</specifier> class <name>SetProxy</name> <super><extends>extends <name>Task</name></extends></super> <block>{
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>HTTP_PORT</name> =<init> <expr>80</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>int</name></type> <name>SOCKS_PORT</name> =<init> <expr>1080</expr></init></decl>;</decl_stmt>
    <comment type="line">// CheckStyle:VisibilityModifier OFF - bc</comment>
    <comment type="javadoc">/**
     * proxy details
     */</comment>
    <decl_stmt><decl><type><specifier>protected</specifier> <name>String</name></type> <name>proxyHost</name> =<init> <expr><name>null</name></expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * name of proxy port
     */</comment>
    <decl_stmt><decl><type><specifier>protected</specifier> <name>int</name></type> <name>proxyPort</name> =<init> <expr><name>HTTP_PORT</name></expr></init></decl>;</decl_stmt>

    <comment type="line">// CheckStyle:VisibilityModifier ON</comment>

    <comment type="javadoc">/**
     * socks host.
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>socksProxyHost</name> =<init> <expr><name>null</name></expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Socks proxy port. Default is 1080.
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>socksProxyPort</name> =<init> <expr><name>SOCKS_PORT</name></expr></init></decl>;</decl_stmt>


    <comment type="javadoc">/**
     * list of non proxy hosts
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>nonProxyHosts</name> =<init> <expr><name>null</name></expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * user for http only
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>proxyUser</name> =<init> <expr><name>null</name></expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * password for http only
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>proxyPassword</name> =<init> <expr><name>null</name></expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * the HTTP/ftp proxy host. Set this to "" for the http proxy
     * option to be disabled
     *
     * @param hostname the new proxy hostname
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setProxyHost</name><parameter_list>(<param><decl><type><name>String</name></type> <name>hostname</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name>proxyHost</name> = <name>hostname</name></expr>;</expr_stmt>
    }</block></function>


    <comment type="javadoc">/**
     * the HTTP/ftp proxy port number; default is 80
     *
     * @param port port number of the proxy
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setProxyPort</name><parameter_list>(<param><decl><type><name>int</name></type> <name>port</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name>proxyPort</name> = <name>port</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * The name of a Socks server. Set to "" to turn socks
     * proxying off.
     *
     * @param host The new SocksProxyHost value
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setSocksProxyHost</name><parameter_list>(<param><decl><type><name>String</name></type> <name>host</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>socksProxyHost</name></name> = <name>host</name></expr>;</expr_stmt>
    }</block></function>


    <comment type="javadoc">/**
     * Set the ProxyPort for socks connections. The default value is 1080
     *
     * @param port The new SocksProxyPort value
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setSocksProxyPort</name><parameter_list>(<param><decl><type><name>int</name></type> <name>port</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>socksProxyPort</name></name> = <name>port</name></expr>;</expr_stmt>
    }</block></function>


    <comment type="javadoc">/**
     * A list of hosts to bypass the proxy on. These should be separated
     * with the vertical bar character '|'. Only in Java 1.4 does ftp use
     * this list.
     * e.g. fozbot.corp.sun.com|*.eng.sun.com
     * @param nonProxyHosts lists of hosts to talk direct to
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setNonProxyHosts</name><parameter_list>(<param><decl><type><name>String</name></type> <name>nonProxyHosts</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>nonProxyHosts</name></name> = <name>nonProxyHosts</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * set the proxy user. Probably requires a password to accompany this
     * setting. Default=""
     * @param proxyUser username
     * @since Ant1.6
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setProxyUser</name><parameter_list>(<param><decl><type><name>String</name></type> <name>proxyUser</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>proxyUser</name></name> = <name>proxyUser</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * Set the password for the proxy. Used only if the proxyUser is set.
     * @param proxyPassword password to go with the username
     * @since Ant1.6
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setProxyPassword</name><parameter_list>(<param><decl><type><name>String</name></type> <name>proxyPassword</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>proxyPassword</name></name> = <name>proxyPassword</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * if the proxy port and host settings are not null, then the settings
     * get applied these settings last beyond the life of the object and
     * apply to all network connections
     * Relevant docs: buglist #4183340
     */</comment>

    <function><type><specifier>public</specifier> <name>void</name></type> <name>applyWebProxySettings</name><parameter_list>()</parameter_list> <block>{
        <decl_stmt><decl><type><name>boolean</name></type> <name>settingsChanged</name> =<init> <expr>false</expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>boolean</name></type> <name>enablingProxy</name> =<init> <expr>false</expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Properties</name></type> <name>sysprops</name> =<init> <expr><call><name><name>System</name>.<name>getProperties</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><name>proxyHost</name> != <name>null</name></expr>)</condition><then> <block>{
            <expr_stmt><expr><name>settingsChanged</name> = true</expr>;</expr_stmt>
            <if>if <condition>(<expr><call><name><name>proxyHost</name>.<name>length</name></name><argument_list>()</argument_list></call> != 0</expr>)</condition><then> <block>{
                <expr_stmt><expr><call><name>traceSettingInfo</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>enablingProxy</name> = true</expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sysprops</name>.<name>put</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>HTTP_PROXY_HOST</name></name></expr></argument>, <argument><expr><name>proxyHost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name>String</name></type> <name>portString</name> =<init> <expr><call><name><name>Integer</name>.<name>toString</name></name><argument_list>(<argument><expr><name>proxyPort</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name>sysprops</name>.<name>put</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>HTTP_PROXY_PORT</name></name></expr></argument>, <argument><expr><name>portString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sysprops</name>.<name>put</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>HTTPS_PROXY_HOST</name></name></expr></argument>, <argument><expr><name>proxyHost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sysprops</name>.<name>put</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>HTTPS_PROXY_PORT</name></name></expr></argument>, <argument><expr><name>portString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sysprops</name>.<name>put</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>FTP_PROXY_HOST</name></name></expr></argument>, <argument><expr><name>proxyHost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sysprops</name>.<name>put</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>FTP_PROXY_PORT</name></name></expr></argument>, <argument><expr><name>portString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if>if <condition>(<expr><name>nonProxyHosts</name> != <name>null</name></expr>)</condition><then> <block>{
                    <expr_stmt><expr><call><name><name>sysprops</name>.<name>put</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>HTTP_NON_PROXY_HOSTS</name></name></expr></argument>, <argument><expr><name>nonProxyHosts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>sysprops</name>.<name>put</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>HTTPS_NON_PROXY_HOSTS</name></name></expr></argument>, <argument><expr><name>nonProxyHosts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>sysprops</name>.<name>put</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>FTP_NON_PROXY_HOSTS</name></name></expr></argument>, <argument><expr><name>nonProxyHosts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <if>if <condition>(<expr><name>proxyUser</name> != <name>null</name></expr>)</condition><then> <block>{
                    <expr_stmt><expr><call><name><name>sysprops</name>.<name>put</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>HTTP_PROXY_USERNAME</name></name></expr></argument>, <argument><expr><name>proxyUser</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>sysprops</name>.<name>put</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>HTTP_PROXY_PASSWORD</name></name></expr></argument>, <argument><expr><name>proxyPassword</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then> <else>else <block>{
                <expr_stmt><expr><call><name>log</name><argument_list>(<argument><expr>"resetting http proxy"</expr></argument>, <argument><expr><name><name>Project</name>.<name>MSG_VERBOSE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sysprops</name>.<name>remove</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>HTTP_PROXY_HOST</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sysprops</name>.<name>remove</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>HTTP_PROXY_PORT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sysprops</name>.<name>remove</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>HTTP_PROXY_USERNAME</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sysprops</name>.<name>remove</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>HTTP_PROXY_PASSWORD</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sysprops</name>.<name>remove</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>HTTPS_PROXY_HOST</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sysprops</name>.<name>remove</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>HTTPS_PROXY_PORT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sysprops</name>.<name>remove</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>FTP_PROXY_HOST</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sysprops</name>.<name>remove</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>FTP_PROXY_PORT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></then></if>

        <comment type="line">//socks</comment>
        <if>if <condition>(<expr><name>socksProxyHost</name> != <name>null</name></expr>)</condition><then> <block>{
            <expr_stmt><expr><name>settingsChanged</name> = true</expr>;</expr_stmt>
            <if>if <condition>(<expr><call><name><name>socksProxyHost</name>.<name>length</name></name><argument_list>()</argument_list></call> != 0</expr>)</condition><then> <block>{
                <expr_stmt><expr><name>enablingProxy</name> = true</expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sysprops</name>.<name>put</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>SOCKS_PROXY_HOST</name></name></expr></argument>, <argument><expr><name>socksProxyHost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sysprops</name>.<name>put</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>SOCKS_PROXY_PORT</name></name></expr></argument>, <argument><expr><call><name><name>Integer</name>.<name>toString</name></name><argument_list>(<argument><expr><name>socksProxyPort</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if>if <condition>(<expr><name>proxyUser</name> != <name>null</name></expr>)</condition><then> <block>{
                    <comment type="line">//this may be a java1.4 thingy only</comment>
                    <expr_stmt><expr><call><name><name>sysprops</name>.<name>put</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>SOCKS_PROXY_USERNAME</name></name></expr></argument>, <argument><expr><name>proxyUser</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name>sysprops</name>.<name>put</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>SOCKS_PROXY_PASSWORD</name></name></expr></argument>, <argument><expr><name>proxyPassword</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>

            }</block></then> <else>else <block>{
                <expr_stmt><expr><call><name>log</name><argument_list>(<argument><expr>"resetting socks proxy"</expr></argument>, <argument><expr><name><name>Project</name>.<name>MSG_VERBOSE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sysprops</name>.<name>remove</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>SOCKS_PROXY_HOST</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sysprops</name>.<name>remove</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>SOCKS_PROXY_PORT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sysprops</name>.<name>remove</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>SOCKS_PROXY_USERNAME</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>sysprops</name>.<name>remove</name></name><argument_list>(<argument><expr><name><name>ProxySetup</name>.<name>SOCKS_PROXY_PASSWORD</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></then></if>

        <if>if <condition>(<expr><name>proxyUser</name> != <name>null</name></expr>)</condition><then> <block>{
            <if>if <condition>(<expr><name>enablingProxy</name></expr>)</condition><then> <block>{
                <expr_stmt><expr><call><name><name>Authenticator</name>.<name>setDefault</name></name><argument_list>(<argument><expr>new <call><name>ProxyAuth</name><argument_list>(<argument><expr><name>proxyUser</name></expr></argument>,
                                                       <argument><expr><name>proxyPassword</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then> <else>else <if>if <condition>(<expr><name>settingsChanged</name></expr>)</condition><then> <block>{
                <expr_stmt><expr><call><name><name>Authenticator</name>.<name>setDefault</name></name><argument_list>(<argument><expr>new <call><name>ProxyAuth</name><argument_list>(<argument><expr>""</expr></argument>, <argument><expr>""</expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if></else></if>
        }</block></then></if>
    }</block></function>

    <comment type="javadoc">/**
     * list out what is going on
     */</comment>
    <function><type><specifier>private</specifier> <name>void</name></type> <name>traceSettingInfo</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>log</name><argument_list>(<argument><expr>"Setting proxy to "
                + (<name>proxyHost</name> != <name>null</name> ? <name>proxyHost</name> : "''")
                + ":" + <name>proxyPort</name></expr></argument>,
                <argument><expr><name><name>Project</name>.<name>MSG_VERBOSE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * Does the work.
     *
     * @exception BuildException thrown in unrecoverable error.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>execute</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>BuildException</name></expr></argument></throws> <block>{
        <expr_stmt><expr><call><name>applyWebProxySettings</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * @since 1.6.3
     */</comment>
    <class><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> class <name>ProxyAuth</name> <super><extends>extends <name>Authenticator</name></extends></super> <block>{
        <decl_stmt><decl><type><specifier>private</specifier> <name>PasswordAuthentication</name></type> <name>auth</name></decl>;</decl_stmt>

        <constructor><specifier>private</specifier> <name>ProxyAuth</name><parameter_list>(<param><decl><type><name>String</name></type> <name>user</name></decl></param>, <param><decl><type><name>String</name></type> <name>pass</name></decl></param>)</parameter_list> <block>{
            <expr_stmt><expr><name>auth</name> = new <call><name>PasswordAuthentication</name><argument_list>(<argument><expr><name>user</name></expr></argument>, <argument><expr><call><name><name>pass</name>.<name>toCharArray</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><specifier>protected</specifier> <name>PasswordAuthentication</name></type> <name>getPasswordAuthentication</name><parameter_list>()</parameter_list> <block>{
            <return>return <expr><name>auth</name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></class>

</unit>
