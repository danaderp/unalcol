<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\TypeAdapter.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name></name>;</package>

<comment type="javadoc">/**
 * Used to wrap types.
 *
 */</comment>
<class type="interface"><specifier>public</specifier> interface <name>TypeAdapter</name> <block>{

    <comment type="javadoc">/**
     * Sets the project
     *
     * @param p the project instance.
     */</comment>
    <function_decl><type><name>void</name></type> <name>setProject</name><parameter_list>(<param><decl><type><name>Project</name></type> <name>p</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Gets the project
     *
     * @return the project instance.
     */</comment>
    <function_decl><type><name>Project</name></type> <name>getProject</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Sets the proxy object, whose methods are going to be
     * invoked by ant.
     * A proxy object is normally the object defined by
     * a &amp;lt;typedef/&amp;gt; task that is adapted by the "adapter"
     * attribute.
     *
     * @param o The target object. Must not be &lt;code&gt;null&lt;/code&gt;.
     */</comment>
    <function_decl><type><name>void</name></type> <name>setProxy</name><parameter_list>(<param><decl><type><name>Object</name></type> <name>o</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Returns the proxy object.
     *
     * @return the target proxy object
     */</comment>
    <function_decl><type><name>Object</name></type> <name>getProxy</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Check if the proxy class is compatible with this adapter - i.e.
     * the adapter will be able to adapt instances of the give class.
     *
     * @param proxyClass the class to be checked.
     */</comment>
    <function_decl><type><name>void</name></type> <name>checkProxyClass</name><parameter_list>(<param><decl><type><name><name>Class</name><argument_list>&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>proxyClass</name></decl></param>)</parameter_list>;</function_decl>
}</block></class>
</unit>
