<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\loader\AntClassLoader5.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>loader</name></name>;</package>

<import>import <name><name>java</name>.<name>util</name>.<name>Enumeration</name></name>;</import>
<import>import <name><name>java</name>.<name>io</name>.<name>Closeable</name></name>;</import>
<import>import <name><name>java</name>.<name>io</name>.<name>IOException</name></name>;</import>
<import>import <name><name>java</name>.<name>net</name>.<name>URL</name></name>;</import>

<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>AntClassLoader</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>Project</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>types</name>.<name>Path</name></name>;</import>

<comment type="javadoc">/**
 * Overrides getResources which became non-final in Java5 and
 * implements Closeable
 */</comment>
<class><specifier>public</specifier> class <name>AntClassLoader5</name> <super><extends>extends <name>AntClassLoader</name></extends> <implements>implements <name>Closeable</name></implements></super> <block>{
    <comment type="javadoc">/**
     * Creates a classloader for the given project using the classpath given.
     *
     * @param parent The parent classloader to which unsatisfied loading
     *               attempts are delegated. May be &lt;code&gt;null&lt;/code&gt;,
     *               in which case the classloader which loaded this
     *               class is used as the parent.
     * @param project The project to which this classloader is to belong.
     *                Must not be &lt;code&gt;null&lt;/code&gt;.
     * @param classpath the classpath to use to load the classes.
     *                  May be &lt;code&gt;null&lt;/code&gt;, in which case no path
     *                  elements are set up to start with.
     * @param parentFirst If &lt;code&gt;true&lt;/code&gt;, indicates that the parent
     *                    classloader should be consulted  before trying to
     *                    load the a class through this loader.
     */</comment>
    <constructor><specifier>public</specifier> <name>AntClassLoader5</name><parameter_list>(<param><decl><type><name>ClassLoader</name></type> <name>parent</name></decl></param>, <param><decl><type><name>Project</name></type> <name>project</name></decl></param>,
                           <param><decl><type><name>Path</name></type> <name>classpath</name></decl></param>, <param><decl><type><name>boolean</name></type> <name>parentFirst</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>parent</name></expr></argument>, <argument><expr><name>project</name></expr></argument>, <argument><expr><name>classpath</name></expr></argument>, <argument><expr><name>parentFirst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="javadoc">/** {@inheritDoc} */</comment>
    <function><type><specifier>public</specifier> <name><name>Enumeration</name><argument_list>&lt;<argument><name>URL</name></argument>&gt;</argument_list></name></type> <name>getResources</name><parameter_list>(<param><decl><type><name>String</name></type> <name>name</name></decl></param>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{
        <return>return <expr><call><name>getNamedResources</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="javadoc">/** {@inheritDoc} */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>close</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>cleanup</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    }</block></function>
}</block></class>
</unit>
