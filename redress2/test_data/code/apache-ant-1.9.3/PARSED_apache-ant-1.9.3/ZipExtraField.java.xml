<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\zip\ZipExtraField.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>zip</name></name>;</package>

<import>import <name><name>java</name>.<name>util</name>.<name>zip</name>.<name>ZipException</name></name>;</import>

<comment type="javadoc">/**
 * General format of extra field data.
 *
 * &lt;p&gt;Extra fields usually appear twice per file, once in the local
 * file data and once in the central directory.  Usually they are the
 * same, but they don't have to be.  {@link
 * java.util.zip.ZipOutputStream java.util.zip.ZipOutputStream} will
 * only use the local file data in both places.&lt;/p&gt;
 *
 */</comment>
<class type="interface"><specifier>public</specifier> interface <name>ZipExtraField</name> <block>{

    <comment type="javadoc">/**
     * The Header-ID.
     * @return the header id
     * @since 1.1
     */</comment>
    <function_decl><type><name>ZipShort</name></type> <name>getHeaderId</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Length of the extra field in the local file data - without
     * Header-ID or length specifier.
     * @return the length of the field in the local file data
     * @since 1.1
     */</comment>
    <function_decl><type><name>ZipShort</name></type> <name>getLocalFileDataLength</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Length of the extra field in the central directory - without
     * Header-ID or length specifier.
     * @return the length of the field in the central directory
     * @since 1.1
     */</comment>
    <function_decl><type><name>ZipShort</name></type> <name>getCentralDirectoryLength</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * The actual data to put into local file data - without Header-ID
     * or length specifier.
     * @return the data
     * @since 1.1
     */</comment>
    <function_decl><type><name>byte</name><index>[]</index></type> <name>getLocalFileDataData</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * The actual data to put into central directory - without Header-ID or
     * length specifier.
     * @return the data
     * @since 1.1
     */</comment>
    <function_decl><type><name>byte</name><index>[]</index></type> <name>getCentralDirectoryData</name><parameter_list>()</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Populate data from this array as if it was in local file data.
     * @param data an array of bytes
     * @param offset the start offset
     * @param length the number of bytes in the array from offset
     *
     * @since 1.1
     * @throws ZipException on error
     */</comment>
    <function_decl><type><name>void</name></type> <name>parseFromLocalFileData</name><parameter_list>(<param><decl><type><name><name>byte</name><index>[]</index></name></type> <name>data</name></decl></param>, <param><decl><type><name>int</name></type> <name>offset</name></decl></param>, <param><decl><type><name>int</name></type> <name>length</name></decl></param>)</parameter_list>
        <throws>throws <argument><expr><name>ZipException</name></expr></argument></throws>;</function_decl>
}</block></class>
</unit>
