<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\taskdefs\optional\junit\JUnitResultFormatter.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>taskdefs</name>.<name>optional</name>.<name>junit</name></name>;</package>

<import>import <name><name>java</name>.<name>io</name>.<name>OutputStream</name></name>;</import>
<import>import <name><name>junit</name>.<name>framework</name>.<name>TestListener</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>BuildException</name></name>;</import>

<comment type="javadoc">/**
 * This Interface describes classes that format the results of a JUnit
 * testrun.
 *
 */</comment>
<class type="interface"><specifier>public</specifier> interface <name>JUnitResultFormatter</name>
    <super><extends>extends <name>TestListener</name>, <name>JUnitTaskMirror</name>.<name>JUnitResultFormatterMirror</name></extends></super> <block>{
    <comment type="javadoc">/**
     * The whole testsuite started.
     * @param suite the suite.
     * @throws BuildException on error.
     */</comment>
    <function_decl><type><name>void</name></type> <name>startTestSuite</name><parameter_list>(<param><decl><type><name>JUnitTest</name></type> <name>suite</name></decl></param>)</parameter_list> <throws>throws <argument><expr><name>BuildException</name></expr></argument></throws>;</function_decl>

    <comment type="javadoc">/**
     * The whole testsuite ended.
     * @param suite the suite.
     * @throws BuildException on error.
     */</comment>
    <function_decl><type><name>void</name></type> <name>endTestSuite</name><parameter_list>(<param><decl><type><name>JUnitTest</name></type> <name>suite</name></decl></param>)</parameter_list> <throws>throws <argument><expr><name>BuildException</name></expr></argument></throws>;</function_decl>

    <comment type="javadoc">/**
     * Sets the stream the formatter is supposed to write its results to.
     * @param out the output stream to use.
     */</comment>
    <function_decl><type><name>void</name></type> <name>setOutput</name><parameter_list>(<param><decl><type><name>OutputStream</name></type> <name>out</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * This is what the test has written to System.out
     * @param out the string to write.
     */</comment>
    <function_decl><type><name>void</name></type> <name>setSystemOutput</name><parameter_list>(<param><decl><type><name>String</name></type> <name>out</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * This is what the test has written to System.err
     * @param err the string to write.
     */</comment>
    <function_decl><type><name>void</name></type> <name>setSystemError</name><parameter_list>(<param><decl><type><name>String</name></type> <name>err</name></decl></param>)</parameter_list>;</function_decl>
}</block></class>
</unit>
