<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\types\mappers\CutDirsMapper.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>types</name>.<name>mappers</name></name>;</package>

<import>import <name><name>java</name>.<name>io</name>.<name>File</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>BuildException</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>util</name>.<name>FileNameMapper</name></name>;</import>

<comment type="javadoc">/**
 * A mapper that strips of the a configurable number of leading
 * directories from a file name.
 *
 * &lt;p&gt;This mapper was inspired by a user-list thread that mentioned
 * wget's --cut-dirs option.&lt;/p&gt;
 *
 * @see &lt;a href="http://mail-archives.apache.org/mod_mbox/ant-user/201009.mbox/%3C51772743BEA5D44A9EA5BF52AADDD6FB010E96F6@hammai008.delphi.local%3E"&gt;
 * simplify copy with regexpmapper&lt;/a&gt;
 */</comment>
<class><specifier>public</specifier> class <name>CutDirsMapper</name> <super><implements>implements <name>FileNameMapper</name></implements></super> <block>{
    <decl_stmt><decl><type><specifier>private</specifier> <name>int</name></type> <name>dirs</name> =<init> <expr>0</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * The number of leading directories to cut.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setDirs</name><parameter_list>(<param><decl><type><name>int</name></type> <name>dirs</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>dirs</name></name> =  <name>dirs</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * Empty implementation.
     * @param ignore ignored.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setFrom</name><parameter_list>(<param><decl><type><name>String</name></type> <name>ignore</name></decl></param>)</parameter_list> <block>{
    }</block></function>

    <comment type="javadoc">/**
     * Empty implementation.
     * @param ignore ignored.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setTo</name><parameter_list>(<param><decl><type><name>String</name></type> <name>ignore</name></decl></param>)</parameter_list> <block>{
    }</block></function>

    <comment type="javadoc">/** {@inheritDoc}. */</comment>
    <function><type><specifier>public</specifier> <name>String</name><index>[]</index></type> <name>mapFileName</name><parameter_list>(<param><decl><type><specifier>final</specifier> <name>String</name></type> <name>sourceFileName</name></decl></param>)</parameter_list> <block>{
        <if>if <condition>(<expr><name>dirs</name> &lt;= 0</expr>)</condition><then> <block>{
            <throw>throw <expr>new <call><name>BuildException</name><argument_list>(<argument><expr>"dirs must be set to a positive number"</expr></argument>)</argument_list></call></expr>;</throw>
        }</block></then></if>
        <decl_stmt><decl><type><name>char</name></type> <name>fileSep</name> =<init> <expr><name><name>File</name>.<name>separatorChar</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>fileSepCorrected</name> =<init>
            <expr><call><name><name>sourceFileName</name>.<name>replace</name></name><argument_list>(<argument><expr>'/'</expr></argument>, <argument><expr><name>fileSep</name></expr></argument>)</argument_list></call>.<call><name>replace</name><argument_list>(<argument><expr>'\\'</expr></argument>, <argument><expr><name>fileSep</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>nthMatch</name> =<init> <expr><call><name><name>fileSepCorrected</name>.<name>indexOf</name></name><argument_list>(<argument><expr><name>fileSep</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <for>for (<init><decl><type><name>int</name></type> <name>n</name> =<init> <expr>1</expr></init></decl>;</init> <condition><expr><name>nthMatch</name> &gt; -1 &amp;&amp; <name>n</name> &lt; <name>dirs</name></expr>;</condition> <incr><expr><name>n</name>++</expr></incr>) <block>{
            <expr_stmt><expr><name>nthMatch</name> = <call><name><name>fileSepCorrected</name>.<name>indexOf</name></name><argument_list>(<argument><expr><name>fileSep</name></expr></argument>, <argument><expr><name>nthMatch</name> + 1</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></for>
        <if>if <condition>(<expr><name>nthMatch</name> == -1</expr>)</condition><then> <block>{
            <return>return <expr><name>null</name></expr>;</return>
        }</block></then></if>
        <return>return <expr>new <name><name>String</name><index>[]</index></name> <block>{ <expr><call><name><name>sourceFileName</name>.<name>substring</name></name><argument_list>(<argument><expr><name>nthMatch</name> + 1</expr></argument>)</argument_list></call></expr> }</block></expr>;</return>
    }</block></function>
}</block></class>
</unit>
