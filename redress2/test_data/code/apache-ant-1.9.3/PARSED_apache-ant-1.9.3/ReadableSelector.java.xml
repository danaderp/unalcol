<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\types\selectors\ReadableSelector.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>types</name>.<name>selectors</name></name>;</package>

<import>import <name><name>java</name>.<name>io</name>.<name>File</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>types</name>.<name>Resource</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>types</name>.<name>resources</name>.<name>FileProvider</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>types</name>.<name>resources</name>.<name>selectors</name>.<name>ResourceSelector</name></name>;</import>

<comment type="javadoc">/**
 * A selector that selects readable files.
 *
 * &lt;p&gt;Readable is defined in terms of java.io.File#canRead, this
 * means the selector will accept any file that exists and is readable
 * by the application.&lt;/p&gt;
 *
 * @since Ant 1.8.0
 */</comment>
<class><specifier>public</specifier> class <name>ReadableSelector</name> <super><implements>implements <name>FileSelector</name>, <name>ResourceSelector</name></implements></super> <block>{

    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isSelected</name><parameter_list>(<param><decl><type><name>File</name></type> <name>basedir</name></decl></param>, <param><decl><type><name>String</name></type> <name>filename</name></decl></param>, <param><decl><type><name>File</name></type> <name>file</name></decl></param>)</parameter_list> <block>{
        <return>return <expr><name>file</name> != <name>null</name> &amp;&amp; <call><name><name>file</name>.<name>canRead</name></name><argument_list>()</argument_list></call></expr>;</return>
    }</block></function>

    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isSelected</name><parameter_list>(<param><decl><type><name>Resource</name></type> <name>r</name></decl></param>)</parameter_list> <block>{
        <decl_stmt><decl><type><name>FileProvider</name></type> <name>fp</name> =<init> <expr><call><name><name>r</name>.<name>as</name></name><argument_list>(<argument><expr><name><name>FileProvider</name>.<name><name/></name></name>class</expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><name>fp</name> != <name>null</name></expr>)</condition><then> <block>{
            <return>return <expr><call><name>isSelected</name><argument_list>(<argument><expr><name>null</name></expr></argument>, <argument><expr><name>null</name></expr></argument>, <argument><expr><call><name><name>fp</name>.<name>getFile</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        }</block></then></if>
        <return>return <expr>false</expr>;</return>
    }</block></function>
}</block></class>
</unit>
