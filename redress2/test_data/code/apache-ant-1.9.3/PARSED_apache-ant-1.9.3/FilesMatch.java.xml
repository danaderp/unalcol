<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\taskdefs\condition\FilesMatch.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>
 <package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>taskdefs</name>.<name>condition</name></name>;</package>

<import>import <name><name>java</name>.<name>io</name>.<name>File</name></name>;</import>
<import>import <name><name>java</name>.<name>io</name>.<name>IOException</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>BuildException</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>util</name>.<name>FileUtils</name></name>;</import>

<comment type="javadoc">/**
 * Compares two files for equality based on size and
 * content. Timestamps are not at all looked at.
 *
 * @since Ant 1.5
 */</comment>

<class><specifier>public</specifier> class <name>FilesMatch</name> <super><implements>implements <name>Condition</name></implements></super> <block>{

    <comment type="javadoc">/**
     * Helper that provides the file comparison method.
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>FileUtils</name></type> <name>FILE_UTILS</name> =<init> <expr><call><name><name>FileUtils</name>.<name>getFileUtils</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * files to compare
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>File</name></type> <name>file1</name>, <name>file2</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>textfile</name> =<init> <expr>false</expr></init></decl>;</decl_stmt>


    <comment type="javadoc">/**
     * Sets the File1 attribute
     *
     * @param file1 The new File1 value
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setFile1</name><parameter_list>(<param><decl><type><name>File</name></type> <name>file1</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>file1</name></name> = <name>file1</name></expr>;</expr_stmt>
    }</block></function>


    <comment type="javadoc">/**
     * Sets the File2 attribute
     *
     * @param file2 The new File2 value
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setFile2</name><parameter_list>(<param><decl><type><name>File</name></type> <name>file2</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>file2</name></name> = <name>file2</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * Set whether to ignore line endings when comparing files.
     * @param textfile whether to ignore line endings.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setTextfile</name><parameter_list>(<param><decl><type><name>boolean</name></type> <name>textfile</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>textfile</name></name> = <name>textfile</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * comparison method of the interface
     *
     * @return true if the files are equal
     * @exception BuildException if it all went pear-shaped
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>eval</name><parameter_list>()</parameter_list>
        <throws>throws <argument><expr><name>BuildException</name></expr></argument></throws> <block>{

        <comment type="line">//validate</comment>
        <if>if <condition>(<expr><name>file1</name> == <name>null</name> || <name>file2</name> == <name>null</name></expr>)</condition><then> <block>{
            <throw>throw <expr>new <call><name>BuildException</name><argument_list>(<argument><expr>"both file1 and file2 are required in "
                                     + "filesmatch"</expr></argument>)</argument_list></call></expr>;</throw>
        }</block></then></if>

        <comment type="line">//#now match the files</comment>
        <decl_stmt><decl><type><name>boolean</name></type> <name>matches</name> =<init> <expr>false</expr></init></decl>;</decl_stmt>
        <try>try <block>{
            <expr_stmt><expr><name>matches</name> = <call><name><name>FILE_UTILS</name>.<name>contentEquals</name></name><argument_list>(<argument><expr><name>file1</name></expr></argument>, <argument><expr><name>file2</name></expr></argument>, <argument><expr><name>textfile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block> <catch>catch (<param><decl><type><name>IOException</name></type> <name>ioe</name></decl></param>) <block>{
            <throw>throw <expr>new <call><name>BuildException</name><argument_list>(<argument><expr>"when comparing files: "
                + <call><name><name>ioe</name>.<name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>ioe</name></expr></argument>)</argument_list></call></expr>;</throw>
        }</block></catch></try>
        <return>return <expr><name>matches</name></expr>;</return>
    }</block></function>
}</block></class>

</unit>
