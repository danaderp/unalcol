<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\dispatch\DispatchTask.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>dispatch</name></name>;</package>

<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>Task</name></name>;</import>

<comment type="javadoc">/**
 * Tasks extending this class may contain multiple actions.
 * The method that is invoked for execution depends upon the
 * value of the action attribute of the task.
 * &lt;br/&gt;
 * Example:&lt;br/&gt;
 * &amp;lt;mytask action=&amp;quot;list&amp;quot;/&amp;gt; will invoke the method
 * with the signature public void list() in mytask's class.
 * If the action attribute is not defined in the task or is empty,
 * the execute() method will be called.
 */</comment>
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>DispatchTask</name> <super><extends>extends <name>Task</name></extends> <implements>implements <name>Dispatchable</name></implements></super> <block>{
    <decl_stmt><decl><type><specifier>private</specifier> <name>String</name></type> <name>action</name></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Get the action parameter name.
     * @return the &lt;code&gt;String&lt;/code&gt; "action" by default (can be overridden).
     */</comment>
    <function><type><specifier>public</specifier> <name>String</name></type> <name>getActionParameterName</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr>"action"</expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Set the action.
     * @param action the method name.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setAction</name><parameter_list>(<param><decl><type><name>String</name></type> <name>action</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name>.<name>action</name></name> = <name>action</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * Get the action.
     * @return the action.
     */</comment>
    <function><type><specifier>public</specifier> <name>String</name></type> <name>getAction</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name>action</name></expr>;</return>
    }</block></function>
}</block></class>
</unit>
