<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\taskdefs\optional\depend\constantpool\ConstantCPInfo.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>taskdefs</name>.<name>optional</name>.<name>depend</name>.<name>constantpool</name></name>;</package>

<comment type="javadoc">/**
 * A Constant Pool entry which represents a constant value.
 *
 */</comment>
<class><specifier>public</specifier> <specifier>abstract</specifier> class <name>ConstantCPInfo</name> <super><extends>extends <name>ConstantPoolEntry</name></extends></super> <block>{

    <comment type="javadoc">/**
     * The entry's untyped value. Each subclass interprets the constant
     * value based on the subclass's type. The value here must be
     * compatible.
     */</comment>
    <decl_stmt><decl><type><specifier>private</specifier> <name>Object</name></type> <name>value</name></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Initialise the constant entry.
     *
     * @param tagValue the constant pool entry type to be used.
     * @param entries the number of constant pool entry slots occupied by
     *      this entry.
     */</comment>
    <constructor><specifier>protected</specifier> <name>ConstantCPInfo</name><parameter_list>(<param><decl><type><name>int</name></type> <name>tagValue</name></decl></param>, <param><decl><type><name>int</name></type> <name>entries</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>tagValue</name></expr></argument>, <argument><expr><name>entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="javadoc">/**
     * Get the value of the constant.
     *
     * @return the value of the constant (untyped).
     */</comment>
    <function><type><specifier>public</specifier> <name>Object</name></type> <name>getValue</name><parameter_list>()</parameter_list> <block>{
        <return>return <expr><name>value</name></expr>;</return>
    }</block></function>

    <comment type="javadoc">/**
     * Set the constant value.
     *
     * @param newValue the new untyped value of this constant.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setValue</name><parameter_list>(<param><decl><type><name>Object</name></type> <name>newValue</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name>value</name> = <name>newValue</name></expr>;</expr_stmt>
    }</block></function>

}</block></class>

</unit>
