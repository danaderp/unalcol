<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\util\FileNameMapper.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>util</name></name>;</package>

<comment type="javadoc">/**
 * Interface to be used by SourceFileScanner.
 *
 * &lt;p&gt;Used to find the name of the target file(s) corresponding to a
 * source file.&lt;/p&gt;
 *
 * &lt;p&gt;The rule by which the file names are transformed is specified
 * via the setFrom and setTo methods. The exact meaning of these is
 * implementation dependent.&lt;/p&gt;
 *
 */</comment>
<class type="interface"><specifier>public</specifier> interface <name>FileNameMapper</name> <block>{

    <comment type="javadoc">/**
     * Sets the from part of the transformation rule.
     * @param from a string.
     */</comment>
    <function_decl><type><name>void</name></type> <name>setFrom</name><parameter_list>(<param><decl><type><name>String</name></type> <name>from</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Sets the to part of the transformation rule.
     * @param to a string.
     */</comment>
    <function_decl><type><name>void</name></type> <name>setTo</name><parameter_list>(<param><decl><type><name>String</name></type> <name>to</name></decl></param>)</parameter_list>;</function_decl>

    <comment type="javadoc">/**
     * Returns an array containing the target filename(s) for the
     * given source file.
     *
     * &lt;p&gt;if the given rule doesn't apply to the source file,
     * implementation must return null. SourceFileScanner will then
     * omit the source file in question.&lt;/p&gt;
     *
     * @param sourceFileName the name of the source file relative to
     *                       some given basedirectory.
     * @return an array of strings if the rule applies to the source file, or
     *         null if it does not.
     */</comment>
    <function_decl><type><name>String</name><index>[]</index></type> <name>mapFileName</name><parameter_list>(<param><decl><type><name>String</name></type> <name>sourceFileName</name></decl></param>)</parameter_list>;</function_decl>
}</block></class>
</unit>
