<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\tests\junit\org\apache\tools\ant\taskdefs\optional\sos\SOSTest.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>taskdefs</name>.<name>optional</name>.<name>sos</name></name>;</package>

<import>import <name><name>java</name>.<name>io</name>.<name>File</name></name>;</import>

<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>BuildFileTest</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>Project</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>types</name>.<name>Commandline</name></name>;</import>
<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>types</name>.<name>Path</name></name>;</import>

<comment type="javadoc">/**
 *  Testcase to ensure that command line generation and required attributes are
 *  correct.
 *
 */</comment>
<class><specifier>public</specifier> class <name>SOSTest</name> <super><extends>extends <name>BuildFileTest</name></extends></super> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <name>Commandline</name></type> <name>commandline</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>VSS_SERVER_PATH</name> =<init> <expr>"\\\\server\\vss\\srcsafe.ini"</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>VSS_PROJECT_PATH</name> =<init> <expr>"/SourceRoot/Project"</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>DS_VSS_PROJECT_PATH</name> =<init> <expr>"$/SourceRoot/Project"</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>SOS_SERVER_PATH</name> =<init> <expr>"192.168.0.1:8888"</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>SOS_USERNAME</name> =<init> <expr>"ant"</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>SOS_PASSWORD</name> =<init> <expr>"rocks"</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>LOCAL_PATH</name> =<init> <expr>"testdir"</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>SRC_FILE</name> =<init> <expr>"Class1.java"</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>SRC_LABEL</name> =<init> <expr>"label1"</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>SRC_COMMENT</name> =<init> <expr>"I fixed a bug"</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>SOS_HOME</name> =<init> <expr>"/home/user/.sos"</expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier>private</specifier> <specifier>static</specifier> <specifier>final</specifier> <name>String</name></type> <name>VERSION</name> =<init> <expr>"007"</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     *  Constructor for the SOSTest object
     *
     * @param  s  Test name
     */</comment>
    <constructor><specifier>public</specifier> <name>SOSTest</name><parameter_list>(<param><decl><type><name>String</name></type> <name>s</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="javadoc">/**
     *  The JUnit setup method
     *
     * @throws  Exception
     */</comment>
    <function><type><specifier>protected</specifier> <name>void</name></type> <name>setUp</name><parameter_list>()</parameter_list>
        <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{
        <expr_stmt><expr><name>project</name> = new <call><name>Project</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>project</name>.<name>setBasedir</name></name><argument_list>(<argument><expr>"."</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     *  The teardown method for JUnit
     *
     * @throws  Exception
     */</comment>
    <function><type><specifier>protected</specifier> <name>void</name></type> <name>tearDown</name><parameter_list>()</parameter_list>
        <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{
        <decl_stmt><decl><type><name>File</name></type> <name>file</name> =<init> <expr>new <call><name>File</name><argument_list>(<argument><expr><call><name><name>project</name>.<name>getBaseDir</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>LOCAL_PATH</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if>if <condition>(<expr><call><name><name>file</name>.<name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
            <expr_stmt><expr><call><name><name>file</name>.<name>delete</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
    }</block></function>

    <comment type="javadoc">/**  Test SOSGetFile flags &amp; commandline generation  */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>testGetFileFlags</name><parameter_list>()</parameter_list> <block>{
        <decl_stmt><decl><type><name>String</name><index>[]</index></type> <name>sTestCmdLine</name> =<init> <expr><block>{<expr>"soscmd"</expr>, <expr>"-command"</expr>, <expr>"GetFile"</expr>, <expr>"-file"</expr>,
                <expr><name>SRC_FILE</name></expr>, <expr>"-revision"</expr>, <expr>"007"</expr>, <expr>"-server"</expr>, <expr><name>SOS_SERVER_PATH</name></expr>, <expr>"-name"</expr>,
                <expr><name>SOS_USERNAME</name></expr>, <expr>"-password"</expr>, <expr><name>SOS_PASSWORD</name></expr>, <expr>"-database"</expr>, <expr><name>VSS_SERVER_PATH</name></expr>,
                <expr>"-project"</expr>, <expr><name>DS_VSS_PROJECT_PATH</name></expr>, <expr>"-verbose"</expr>, <expr>"-nocompress"</expr>,
                <expr>"-nocache"</expr>, <expr>"-workdir"</expr>, <expr><call><name><name>project</name>.<name>getBaseDir</name></name><argument_list>()</argument_list></call>.<call><name>getAbsolutePath</name><argument_list>()</argument_list></call>
                 + <name><name>File</name>.<name>separator</name></name> + <name>LOCAL_PATH</name></expr>}</block></expr></init></decl>;</decl_stmt>

        <comment type="line">// Set up a SOSGet task</comment>
        <decl_stmt><decl><type><name>SOSGet</name></type> <name>sosGet</name> =<init> <expr>new <call><name>SOSGet</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setProject</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setVssServerPath</name></name><argument_list>(<argument><expr><name>VSS_SERVER_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setSosServerPath</name></name><argument_list>(<argument><expr><name>SOS_SERVER_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setProjectPath</name></name><argument_list>(<argument><expr><name>VSS_PROJECT_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setFile</name></name><argument_list>(<argument><expr><name>SRC_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setUsername</name></name><argument_list>(<argument><expr><name>SOS_USERNAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setPassword</name></name><argument_list>(<argument><expr><name>SOS_PASSWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setVersion</name></name><argument_list>(<argument><expr><name>VERSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setLocalPath</name></name><argument_list>(<argument><expr>new <call><name>Path</name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><name>LOCAL_PATH</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setNoCache</name></name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setNoCompress</name></name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setVerbose</name></name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setRecursive</name></name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>commandline</name> = <call><name><name>sosGet</name>.<name>buildCmdLine</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>checkCommandLines</name><argument_list>(<argument><expr><name>sTestCmdLine</name></expr></argument>, <argument><expr><call><name><name>commandline</name>.<name>getCommandline</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**  Test SOSGetProject flags &amp; commandline generation  */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>testGetProjectFlags</name><parameter_list>()</parameter_list> <block>{
        <decl_stmt><decl><type><name>String</name><index>[]</index></type> <name>sTestCmdLine</name> =<init> <expr><block>{<expr>"soscmd"</expr>, <expr>"-command"</expr>, <expr>"GetProject"</expr>, <expr>"-recursive"</expr>,
                <expr>"-label"</expr>, <expr><name>SRC_LABEL</name></expr>, <expr>"-server"</expr>, <expr><name>SOS_SERVER_PATH</name></expr>, <expr>"-name"</expr>, <expr><name>SOS_USERNAME</name></expr>,
                <expr>"-password"</expr>, <expr>""</expr>, <expr>"-database"</expr>, <expr><name>VSS_SERVER_PATH</name></expr>, <expr>"-project"</expr>,
                <expr><name>DS_VSS_PROJECT_PATH</name></expr>, <expr>""</expr>, <expr>""</expr>, <expr>"-soshome"</expr>, <expr><name>SOS_HOME</name></expr>, <expr>"-workdir"</expr>,
                <expr><call><name><name>project</name>.<name>getBaseDir</name></name><argument_list>()</argument_list></call>.<call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr>}</block></expr></init></decl>;</decl_stmt>

        <comment type="line">// Set up a SOSGet task</comment>
        <decl_stmt><decl><type><name>SOSGet</name></type> <name>sosGet</name> =<init> <expr>new <call><name>SOSGet</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setProject</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setVssServerPath</name></name><argument_list>(<argument><expr><name>VSS_SERVER_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setSosServerPath</name></name><argument_list>(<argument><expr><name>SOS_SERVER_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setProjectPath</name></name><argument_list>(<argument><expr><name>DS_VSS_PROJECT_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setLabel</name></name><argument_list>(<argument><expr><name>SRC_LABEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setUsername</name></name><argument_list>(<argument><expr><name>SOS_USERNAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setSosHome</name></name><argument_list>(<argument><expr><name>SOS_HOME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setNoCache</name></name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setNoCompress</name></name><argument_list>(<argument><expr>false</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setVerbose</name></name><argument_list>(<argument><expr>false</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosGet</name>.<name>setRecursive</name></name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>commandline</name> = <call><name><name>sosGet</name>.<name>buildCmdLine</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>checkCommandLines</name><argument_list>(<argument><expr><name>sTestCmdLine</name></expr></argument>, <argument><expr><call><name><name>commandline</name>.<name>getCommandline</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**  Tests SOSGet required attributes.  */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>testGetExceptions</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>configureProject</name><argument_list>(<argument><expr>"src/etc/testcases/taskdefs/optional/sos/sos.xml"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>expectSpecificBuildException</name><argument_list>(<argument><expr>"sosget.1"</expr></argument>, <argument><expr>"some cause"</expr></argument>, <argument><expr>"sosserverpath attribute must be set!"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>expectSpecificBuildException</name><argument_list>(<argument><expr>"sosget.2"</expr></argument>, <argument><expr>"some cause"</expr></argument>, <argument><expr>"username attribute must be set!"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>expectSpecificBuildException</name><argument_list>(<argument><expr>"sosget.3"</expr></argument>, <argument><expr>"some cause"</expr></argument>, <argument><expr>"vssserverpath attribute must be set!"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>expectSpecificBuildException</name><argument_list>(<argument><expr>"sosget.4"</expr></argument>, <argument><expr>"some cause"</expr></argument>, <argument><expr>"projectpath attribute must be set!"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**  Test CheckInFile option flags  */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>testCheckinFileFlags</name><parameter_list>()</parameter_list> <block>{
        <decl_stmt><decl><type><name>String</name><index>[]</index></type> <name>sTestCmdLine</name> =<init> <expr><block>{<expr>"soscmd"</expr>, <expr>"-command"</expr>, <expr>"CheckInFile"</expr>, <expr>"-file"</expr>,
                <expr><name>SRC_FILE</name></expr>, <expr>"-server"</expr>, <expr><name>SOS_SERVER_PATH</name></expr>, <expr>"-name"</expr>, <expr><name>SOS_USERNAME</name></expr>,
                <expr>"-password"</expr>, <expr><name>SOS_PASSWORD</name></expr>, <expr>"-database"</expr>, <expr><name>VSS_SERVER_PATH</name></expr>, <expr>"-project"</expr>,
                <expr><name>DS_VSS_PROJECT_PATH</name></expr>, <expr>"-verbose"</expr>, <expr>"-nocompress"</expr>, <expr>"-nocache"</expr>,
                <expr>"-workdir"</expr>, <expr><call><name><name>project</name>.<name>getBaseDir</name></name><argument_list>()</argument_list></call>.<call><name>getAbsolutePath</name><argument_list>()</argument_list></call> + <name><name>File</name>.<name>separator</name></name>
                 + <name>LOCAL_PATH</name></expr>, <expr>"-log"</expr>, <expr><name>SRC_COMMENT</name></expr>}</block></expr></init></decl>;</decl_stmt>

        <comment type="line">// Set up a SOSCheckin task</comment>
        <decl_stmt><decl><type><name>SOSCheckin</name></type> <name>sosCheckin</name> =<init> <expr>new <call><name>SOSCheckin</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setProject</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setVssServerPath</name></name><argument_list>(<argument><expr><name>VSS_SERVER_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setSosServerPath</name></name><argument_list>(<argument><expr><name>SOS_SERVER_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setProjectPath</name></name><argument_list>(<argument><expr><name>VSS_PROJECT_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setFile</name></name><argument_list>(<argument><expr><name>SRC_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setComment</name></name><argument_list>(<argument><expr><name>SRC_COMMENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setUsername</name></name><argument_list>(<argument><expr><name>SOS_USERNAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setPassword</name></name><argument_list>(<argument><expr><name>SOS_PASSWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setLocalPath</name></name><argument_list>(<argument><expr>new <call><name>Path</name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><name>LOCAL_PATH</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setNoCache</name></name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setNoCompress</name></name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setVerbose</name></name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setRecursive</name></name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>commandline</name> = <call><name><name>sosCheckin</name>.<name>buildCmdLine</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>checkCommandLines</name><argument_list>(<argument><expr><name>sTestCmdLine</name></expr></argument>, <argument><expr><call><name><name>commandline</name>.<name>getCommandline</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**  Test CheckInProject option flags  */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>testCheckinProjectFlags</name><parameter_list>()</parameter_list> <block>{
        <decl_stmt><decl><type><name>String</name><index>[]</index></type> <name>sTestCmdLine</name> =<init> <expr><block>{<expr>"soscmd"</expr>, <expr>"-command"</expr>, <expr>"CheckInProject"</expr>,
                <expr>"-recursive"</expr>, <expr>"-server"</expr>, <expr><name>SOS_SERVER_PATH</name></expr>, <expr>"-name"</expr>, <expr><name>SOS_USERNAME</name></expr>,
                <expr>"-password"</expr>, <expr>""</expr>, <expr>"-database"</expr>, <expr><name>VSS_SERVER_PATH</name></expr>, <expr>"-project"</expr>,
                <expr><name>DS_VSS_PROJECT_PATH</name></expr>, <expr>""</expr>, <expr>""</expr>, <expr>"-soshome"</expr>, <expr><name>SOS_HOME</name></expr>, <expr>"-workdir"</expr>,
                <expr><call><name><name>project</name>.<name>getBaseDir</name></name><argument_list>()</argument_list></call>.<call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr>, <expr>"-log"</expr>, <expr><name>SRC_COMMENT</name></expr>,}</block></expr></init></decl>;</decl_stmt>

        <comment type="line">// Set up a SOSCheckin task</comment>
        <decl_stmt><decl><type><name>SOSCheckin</name></type> <name>sosCheckin</name> =<init> <expr>new <call><name>SOSCheckin</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setProject</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setVssServerPath</name></name><argument_list>(<argument><expr><name>VSS_SERVER_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setSosServerPath</name></name><argument_list>(<argument><expr><name>SOS_SERVER_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setProjectPath</name></name><argument_list>(<argument><expr><name>DS_VSS_PROJECT_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setComment</name></name><argument_list>(<argument><expr><name>SRC_COMMENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setUsername</name></name><argument_list>(<argument><expr><name>SOS_USERNAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setSosHome</name></name><argument_list>(<argument><expr><name>SOS_HOME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setNoCache</name></name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setNoCompress</name></name><argument_list>(<argument><expr>false</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setVerbose</name></name><argument_list>(<argument><expr>false</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckin</name>.<name>setRecursive</name></name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>commandline</name> = <call><name><name>sosCheckin</name>.<name>buildCmdLine</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>checkCommandLines</name><argument_list>(<argument><expr><name>sTestCmdLine</name></expr></argument>, <argument><expr><call><name><name>commandline</name>.<name>getCommandline</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**  Test SOSCheckIn required attributes.  */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>testCheckinExceptions</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>configureProject</name><argument_list>(<argument><expr>"src/etc/testcases/taskdefs/optional/sos/sos.xml"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>expectSpecificBuildException</name><argument_list>(<argument><expr>"soscheckin.1"</expr></argument>, <argument><expr>"some cause"</expr></argument>, <argument><expr>"sosserverpath attribute must be set!"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>expectSpecificBuildException</name><argument_list>(<argument><expr>"soscheckin.2"</expr></argument>, <argument><expr>"some cause"</expr></argument>, <argument><expr>"username attribute must be set!"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>expectSpecificBuildException</name><argument_list>(<argument><expr>"soscheckin.3"</expr></argument>, <argument><expr>"some cause"</expr></argument>, <argument><expr>"vssserverpath attribute must be set!"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>expectSpecificBuildException</name><argument_list>(<argument><expr>"soscheckin.4"</expr></argument>, <argument><expr>"some cause"</expr></argument>, <argument><expr>"projectpath attribute must be set!"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**  Test CheckOutFile option flags  */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>testCheckoutFileFlags</name><parameter_list>()</parameter_list> <block>{
        <decl_stmt><decl><type><name>String</name><index>[]</index></type> <name>sTestCmdLine</name> =<init> <expr><block>{<expr>"soscmd"</expr>, <expr>"-command"</expr>, <expr>"CheckOutFile"</expr>, <expr>"-file"</expr>,
                <expr><name>SRC_FILE</name></expr>, <expr>"-server"</expr>, <expr><name>SOS_SERVER_PATH</name></expr>, <expr>"-name"</expr>, <expr><name>SOS_USERNAME</name></expr>,
                <expr>"-password"</expr>, <expr><name>SOS_PASSWORD</name></expr>, <expr>"-database"</expr>, <expr><name>VSS_SERVER_PATH</name></expr>, <expr>"-project"</expr>,
                <expr><name>DS_VSS_PROJECT_PATH</name></expr>, <expr>"-verbose"</expr>, <expr>"-nocompress"</expr>, <expr>"-nocache"</expr>,
                <expr>"-workdir"</expr>, <expr><call><name><name>project</name>.<name>getBaseDir</name></name><argument_list>()</argument_list></call>.<call><name>getAbsolutePath</name><argument_list>()</argument_list></call>
                 + <name><name>File</name>.<name>separator</name></name> + <name>LOCAL_PATH</name></expr>}</block></expr></init></decl>;</decl_stmt>

        <comment type="line">// Set up a SOSCheckout task</comment>
        <decl_stmt><decl><type><name>SOSCheckout</name></type> <name>sosCheckout</name> =<init> <expr>new <call><name>SOSCheckout</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>sosCheckout</name>.<name>setProject</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckout</name>.<name>setVssServerPath</name></name><argument_list>(<argument><expr><name>VSS_SERVER_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckout</name>.<name>setSosServerPath</name></name><argument_list>(<argument><expr><name>SOS_SERVER_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckout</name>.<name>setProjectPath</name></name><argument_list>(<argument><expr><name>DS_VSS_PROJECT_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckout</name>.<name>setFile</name></name><argument_list>(<argument><expr><name>SRC_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckout</name>.<name>setUsername</name></name><argument_list>(<argument><expr><name>SOS_USERNAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckout</name>.<name>setPassword</name></name><argument_list>(<argument><expr><name>SOS_PASSWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckout</name>.<name>setLocalPath</name></name><argument_list>(<argument><expr>new <call><name>Path</name><argument_list>(<argument><expr><name>project</name></expr></argument>, <argument><expr><name>LOCAL_PATH</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckout</name>.<name>setNoCache</name></name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckout</name>.<name>setNoCompress</name></name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckout</name>.<name>setVerbose</name></name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckout</name>.<name>setRecursive</name></name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>commandline</name> = <call><name><name>sosCheckout</name>.<name>buildCmdLine</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>checkCommandLines</name><argument_list>(<argument><expr><name>sTestCmdLine</name></expr></argument>, <argument><expr><call><name><name>commandline</name>.<name>getCommandline</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**  Test CheckOutProject option flags  */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>testCheckoutProjectFlags</name><parameter_list>()</parameter_list> <block>{
        <decl_stmt><decl><type><name>String</name><index>[]</index></type> <name>sTestCmdLine</name> =<init> <expr><block>{<expr>"soscmd"</expr>, <expr>"-command"</expr>, <expr>"CheckOutProject"</expr>,
                <expr>"-recursive"</expr>, <expr>"-server"</expr>, <expr><name>SOS_SERVER_PATH</name></expr>, <expr>"-name"</expr>, <expr><name>SOS_USERNAME</name></expr>,
                <expr>"-password"</expr>, <expr>""</expr>, <expr>"-database"</expr>, <expr><name>VSS_SERVER_PATH</name></expr>, <expr>"-project"</expr>,
                <expr><name>DS_VSS_PROJECT_PATH</name></expr>, <expr>""</expr>, <expr>""</expr>, <expr>"-soshome"</expr>, <expr><name>SOS_HOME</name></expr>, <expr>"-workdir"</expr>,
                <expr><call><name><name>project</name>.<name>getBaseDir</name></name><argument_list>()</argument_list></call>.<call><name>getAbsolutePath</name><argument_list>()</argument_list></call></expr>}</block></expr></init></decl>;</decl_stmt>

        <comment type="line">// Set up a sosCheckout task</comment>
        <decl_stmt><decl><type><name>SOSCheckout</name></type> <name>sosCheckout</name> =<init> <expr>new <call><name>SOSCheckout</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>sosCheckout</name>.<name>setProject</name></name><argument_list>(<argument><expr><name>project</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckout</name>.<name>setVssServerPath</name></name><argument_list>(<argument><expr><name>VSS_SERVER_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckout</name>.<name>setSosServerPath</name></name><argument_list>(<argument><expr><name>SOS_SERVER_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckout</name>.<name>setProjectPath</name></name><argument_list>(<argument><expr><name>VSS_PROJECT_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckout</name>.<name>setUsername</name></name><argument_list>(<argument><expr><name>SOS_USERNAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckout</name>.<name>setSosHome</name></name><argument_list>(<argument><expr><name>SOS_HOME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckout</name>.<name>setNoCache</name></name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckout</name>.<name>setNoCompress</name></name><argument_list>(<argument><expr>false</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckout</name>.<name>setVerbose</name></name><argument_list>(<argument><expr>false</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosCheckout</name>.<name>setRecursive</name></name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>commandline</name> = <call><name><name>sosCheckout</name>.<name>buildCmdLine</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>checkCommandLines</name><argument_list>(<argument><expr><name>sTestCmdLine</name></expr></argument>, <argument><expr><call><name><name>commandline</name>.<name>getCommandline</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**  Test SOSCheckout required attributes.  */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>testCheckoutExceptions</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>configureProject</name><argument_list>(<argument><expr>"src/etc/testcases/taskdefs/optional/sos/sos.xml"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>expectSpecificBuildException</name><argument_list>(<argument><expr>"soscheckout.1"</expr></argument>, <argument><expr>"some cause"</expr></argument>, <argument><expr>"sosserverpath attribute must be set!"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>expectSpecificBuildException</name><argument_list>(<argument><expr>"soscheckout.2"</expr></argument>, <argument><expr>"some cause"</expr></argument>, <argument><expr>"username attribute must be set!"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>expectSpecificBuildException</name><argument_list>(<argument><expr>"soscheckout.3"</expr></argument>, <argument><expr>"some cause"</expr></argument>, <argument><expr>"vssserverpath attribute must be set!"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>expectSpecificBuildException</name><argument_list>(<argument><expr>"soscheckout.4"</expr></argument>, <argument><expr>"some cause"</expr></argument>, <argument><expr>"projectpath attribute must be set!"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**  Test Label option flags  */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>testLabelFlags</name><parameter_list>()</parameter_list> <block>{
        <decl_stmt><decl><type><name>String</name><index>[]</index></type> <name>sTestCmdLine</name> =<init> <expr><block>{<expr>"soscmd"</expr>, <expr>"-command"</expr>, <expr>"AddLabel"</expr>, <expr>"-server"</expr>,
                <expr><name>SOS_SERVER_PATH</name></expr>, <expr>"-name"</expr>, <expr><name>SOS_USERNAME</name></expr>, <expr>"-password"</expr>, <expr>""</expr>, <expr>"-database"</expr>,
                <expr><name>VSS_SERVER_PATH</name></expr>, <expr>"-project"</expr>, <expr><name>DS_VSS_PROJECT_PATH</name></expr>, <expr>"-label"</expr>,
                <expr><name>SRC_LABEL</name></expr>, <expr>"-verbose"</expr>, <expr>"-log"</expr>, <expr><name>SRC_COMMENT</name></expr>}</block></expr></init></decl>;</decl_stmt>

        <comment type="line">// Set up a sosCheckout task</comment>
        <decl_stmt><decl><type><name>SOSLabel</name></type> <name>sosLabel</name> =<init> <expr>new <call><name>SOSLabel</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>sosLabel</name>.<name>setVssServerPath</name></name><argument_list>(<argument><expr><name>VSS_SERVER_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosLabel</name>.<name>setSosServerPath</name></name><argument_list>(<argument><expr><name>SOS_SERVER_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosLabel</name>.<name>setProjectPath</name></name><argument_list>(<argument><expr><name>DS_VSS_PROJECT_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosLabel</name>.<name>setUsername</name></name><argument_list>(<argument><expr><name>SOS_USERNAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosLabel</name>.<name>setSosHome</name></name><argument_list>(<argument><expr><name>SOS_HOME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosLabel</name>.<name>setComment</name></name><argument_list>(<argument><expr><name>SRC_COMMENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosLabel</name>.<name>setLabel</name></name><argument_list>(<argument><expr><name>SRC_LABEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosLabel</name>.<name>setNoCache</name></name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosLabel</name>.<name>setNoCompress</name></name><argument_list>(<argument><expr>false</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>sosLabel</name>.<name>setVerbose</name></name><argument_list>(<argument><expr>true</expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>commandline</name> = <call><name><name>sosLabel</name>.<name>buildCmdLine</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name>checkCommandLines</name><argument_list>(<argument><expr><name>sTestCmdLine</name></expr></argument>, <argument><expr><call><name><name>commandline</name>.<name>getCommandline</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**  Test SOSLabel required attributes.  */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>testLabelExceptions</name><parameter_list>()</parameter_list> <block>{
        <expr_stmt><expr><call><name>configureProject</name><argument_list>(<argument><expr>"src/etc/testcases/taskdefs/optional/sos/sos.xml"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>expectSpecificBuildException</name><argument_list>(<argument><expr>"soslabel.1"</expr></argument>, <argument><expr>"some cause"</expr></argument>, <argument><expr>"sosserverpath attribute must be set!"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>expectSpecificBuildException</name><argument_list>(<argument><expr>"soslabel.2"</expr></argument>, <argument><expr>"some cause"</expr></argument>, <argument><expr>"username attribute must be set!"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>expectSpecificBuildException</name><argument_list>(<argument><expr>"soslabel.3"</expr></argument>, <argument><expr>"some cause"</expr></argument>, <argument><expr>"vssserverpath attribute must be set!"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>expectSpecificBuildException</name><argument_list>(<argument><expr>"soslabel.4"</expr></argument>, <argument><expr>"some cause"</expr></argument>, <argument><expr>"projectpath attribute must be set!"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>expectSpecificBuildException</name><argument_list>(<argument><expr>"soslabel.5"</expr></argument>, <argument><expr>"some cause"</expr></argument>, <argument><expr>"label attribute must be set!"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     *  Iterate through the generated command line comparing it to reference
     *  one.
     *
     * @param  sTestCmdLine       The reference command line;
     * @param  sGeneratedCmdLine  The generated command line;
     */</comment>
    <function><type><specifier>private</specifier> <name>void</name></type> <name>checkCommandLines</name><parameter_list>(<param><decl><type><name><name>String</name><index>[]</index></name></type> <name>sTestCmdLine</name></decl></param>, <param><decl><type><name><name>String</name><index>[]</index></name></type> <name>sGeneratedCmdLine</name></decl></param>)</parameter_list> <block>{
        <decl_stmt><decl><type><name>int</name></type> <name>length</name> =<init> <expr><name><name>sTestCmdLine</name>.<name>length</name></name></expr></init></decl>;</decl_stmt>
        <for>for (<init><decl><type><name>int</name></type> <name>i</name> =<init> <expr>0</expr></init></decl>;</init> <condition><expr><name>i</name> &lt; <name>length</name></expr>;</condition> <incr><expr><name>i</name>++</expr></incr>) <block>{
            <try>try <block>{
                <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr>"arg # " + <call><name><name>String</name>.<name>valueOf</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>,
                        <argument><expr><name><name>sTestCmdLine</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,
                        <argument><expr><name><name>sGeneratedCmdLine</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block> <catch>catch (<param><decl><type><name>ArrayIndexOutOfBoundsException</name></type> <name>aioob</name></decl></param>) <block>{
                <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr>"missing arg " + <name><name>sTestCmdLine</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></for>
        <if>if <condition>(<expr><name><name>sGeneratedCmdLine</name>.<name>length</name></name> &gt; <name><name>sTestCmdLine</name>.<name>length</name></name></expr>)</condition><then> <block>{
            <comment type="line">// We have extra elements</comment>
            <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr>"extra args"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
    }</block></function>
}</block></class>
</unit>
