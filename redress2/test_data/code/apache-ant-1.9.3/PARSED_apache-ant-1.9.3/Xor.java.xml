<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\taskdefs\condition\Xor.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>taskdefs</name>.<name>condition</name></name>;</package>

<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>BuildException</name></name>;</import>

<import>import <name><name>java</name>.<name>util</name>.<name>Enumeration</name></name>;</import>

<comment type="javadoc">/**
 * The &lt;tt&gt;Xor&lt;/tt&gt; condition type to exclusive or operations.
 * This does not shortcut stuff.
 * @since Ant 1.7
 */</comment>
<class><specifier>public</specifier> class <name>Xor</name> <super><extends>extends <name>ConditionBase</name></extends> <implements>implements <name>Condition</name></implements></super> <block>{

    <comment type="javadoc">/**
     * Evaluate the contained conditions.
     * @return the result of xoring the conditions together.
     * @throws org.apache.tools.ant.BuildException
     *          if an error occurs.
     */</comment>
    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>eval</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>BuildException</name></expr></argument></throws> <block>{
        <decl_stmt><decl><type><name>Enumeration</name></type> <name>e</name> =<init> <expr><call><name>getConditions</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="line">//initial state is false.</comment>
        <decl_stmt><decl><type><name>boolean</name></type> <name>state</name> =<init> <expr>false</expr></init></decl>;</decl_stmt>
        <while>while <condition>(<expr><call><name><name>e</name>.<name>hasMoreElements</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{
            <decl_stmt><decl><type><name>Condition</name></type> <name>c</name> =<init> <expr>(<name>Condition</name>) <call><name><name>e</name>.<name>nextElement</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="line">//every condition is xored against the previous one</comment>
            <expr_stmt><expr><name>state</name> ^= <call><name><name>c</name>.<name>eval</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        }</block></while>
        <return>return <expr><name>state</name></expr>;</return>
    }</block></function>

}</block></class>
</unit>
