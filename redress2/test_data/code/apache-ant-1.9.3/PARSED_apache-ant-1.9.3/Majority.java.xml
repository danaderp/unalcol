<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\types\resources\selectors\Majority.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>
<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>types</name>.<name>resources</name>.<name>selectors</name></name>;</package>

<import>import <name><name>java</name>.<name>util</name>.<name>Iterator</name></name>;</import>

<import>import <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>types</name>.<name>Resource</name></name>;</import>

<comment type="javadoc">/**
 * Majority ResourceSelector.
 * @since Ant 1.7
 */</comment>
<class><specifier>public</specifier> class <name>Majority</name>
    <super><extends>extends <name>ResourceSelectorContainer</name></extends> <implements>implements <name>ResourceSelector</name></implements></super> <block>{

    <decl_stmt><decl><type><specifier>private</specifier> <name>boolean</name></type> <name>tie</name> =<init> <expr>true</expr></init></decl>;</decl_stmt>

    <comment type="javadoc">/**
     * Default constructor.
     */</comment>
    <constructor><specifier>public</specifier> <name>Majority</name><parameter_list>()</parameter_list> <block>{
    }</block></constructor>

    <comment type="javadoc">/**
     * Convenience constructor.
     * @param r the ResourceSelector[] to add.
     */</comment>
    <constructor><specifier>public</specifier> <name>Majority</name><parameter_list>(<param><decl><type><name><name>ResourceSelector</name><index>[]</index></name></type> <name>r</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="javadoc">/**
     * Set whether ties are allowed.
     * @param b whether a tie is a pass.
     */</comment>
    <function><type><specifier>public</specifier> <specifier>synchronized</specifier> <name>void</name></type> <name>setAllowtie</name><parameter_list>(<param><decl><type><name>boolean</name></type> <name>b</name></decl></param>)</parameter_list> <block>{
        <expr_stmt><expr><name>tie</name> = <name>b</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="javadoc">/**
     * Return true if this Resource is selected.
     * @param r the Resource to check.
     * @return whether the Resource was selected.
     */</comment>
    <function><type><specifier>public</specifier> <specifier>synchronized</specifier> <name>boolean</name></type> <name>isSelected</name><parameter_list>(<param><decl><type><name>Resource</name></type> <name>r</name></decl></param>)</parameter_list> <block>{
        <decl_stmt><decl><type><name>int</name></type> <name>passed</name> =<init> <expr>0</expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>failed</name> =<init> <expr>0</expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>count</name> =<init> <expr><call><name>selectorCount</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>boolean</name></type> <name>even</name> =<init> <expr><name>count</name> % 2 == 0</expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>threshold</name> =<init> <expr><name>count</name> / 2</expr></init></decl>;</decl_stmt>

        <for>for (<init><decl><type><name><name>Iterator</name><argument_list>&lt;<argument><name>ResourceSelector</name></argument>&gt;</argument_list></name></type> <name>i</name> =<init> <expr><call><name>getSelectors</name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><call><name><name>i</name>.<name>hasNext</name></name><argument_list>()</argument_list></call></expr>;</condition><incr/>) <block>{
            <if>if <condition>(<expr><call><name><name>i</name>.<name>next</name></name><argument_list>()</argument_list></call>.<call><name>isSelected</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
                <expr_stmt><expr>++<name>passed</name></expr>;</expr_stmt>
                <if>if <condition>(<expr><name>passed</name> &gt; <name>threshold</name> || (<name>even</name> &amp;&amp; <name>tie</name> &amp;&amp; <name>passed</name> == <name>threshold</name>)</expr>)</condition><then> <block>{
                    <return>return <expr>true</expr>;</return>
                }</block></then></if>
            }</block></then> <else>else <block>{
                <expr_stmt><expr>++<name>failed</name></expr>;</expr_stmt>
                <if>if <condition>(<expr><name>failed</name> &gt; <name>threshold</name> || (<name>even</name> &amp;&amp; !<name>tie</name> &amp;&amp; <name>failed</name> == <name>threshold</name>)</expr>)</condition><then> <block>{
                    <return>return <expr>false</expr>;</return>
                }</block></then></if>
            }</block></else></if>
        }</block></for>
        <comment type="line">//dummy</comment>
        <return>return <expr>false</expr>;</return>
    }</block></function>

}</block></class>
</unit>
