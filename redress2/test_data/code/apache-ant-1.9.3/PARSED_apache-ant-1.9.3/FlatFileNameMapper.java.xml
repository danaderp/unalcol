<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java" filename="C:\Users\ojcchar\Documents\Dropbox\Classes\W14\CSC7990 - Directed Study\Implementation\EclipseProject\redress2\test_data\code\apache-ant-1.9.3\src\main\org\apache\tools\ant\util\FlatFileNameMapper.java"><comment type="block">/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */</comment>

<package>package <name><name>org</name>.<name>apache</name>.<name>tools</name>.<name>ant</name>.<name>util</name></name>;</package>

<comment type="javadoc">/**
 * Implementation of FileNameMapper that always returns the source
 * file name without any leading directory information.
 *
 * &lt;p&gt;This is the default FileNameMapper for the copy and move
 * tasks if the flatten attribute has been set.&lt;/p&gt;
 *
 */</comment>
<class><specifier>public</specifier> class <name>FlatFileNameMapper</name> <super><implements>implements <name>FileNameMapper</name></implements></super> <block>{

    <comment type="javadoc">/**
     * Ignored.
     * @param from ignored.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setFrom</name><parameter_list>(<param><decl><type><name>String</name></type> <name>from</name></decl></param>)</parameter_list> <block>{
    }</block></function>

    <comment type="javadoc">/**
     * Ignored.
     * @param to ignored.
     */</comment>
    <function><type><specifier>public</specifier> <name>void</name></type> <name>setTo</name><parameter_list>(<param><decl><type><name>String</name></type> <name>to</name></decl></param>)</parameter_list> <block>{
    }</block></function>

    <comment type="javadoc">/**
     * Returns an one-element array containing the source file name
     * without any leading directory information.
     * @param sourceFileName the name to map.
     * @return the file name in a one-element array.
     */</comment>
    <function><type><specifier>public</specifier> <name>String</name><index>[]</index></type> <name>mapFileName</name><parameter_list>(<param><decl><type><name>String</name></type> <name>sourceFileName</name></decl></param>)</parameter_list> <block>{
        <return>return <expr>new <name><name>String</name><index>[]</index></name> <block>{<expr>new <call><name><name>java</name>.<name>io</name>.<name>File</name></name><argument_list>(<argument><expr><name>sourceFileName</name></expr></argument>)</argument_list></call>.<call><name>getName</name><argument_list>()</argument_list></call></expr>}</block></expr>;</return>
    }</block></function>
}</block></class>
</unit>
